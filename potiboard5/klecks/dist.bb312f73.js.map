{"mappings":"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","sources":["node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/index.ts","node_modules/buffer/index.js","node_modules/@swc/helpers/src/_assert_this_initialized.mjs","node_modules/@swc/helpers/src/_inherits.mjs","node_modules/@swc/helpers/src/_set_prototype_of.mjs","node_modules/@swc/helpers/src/_type_of.mjs","node_modules/@swc/helpers/src/_create_super.mjs","node_modules/@swc/helpers/src/_is_native_reflect_construct.mjs","node_modules/@swc/helpers/src/_get_prototype_of.mjs","node_modules/@swc/helpers/src/_possible_constructor_return.mjs","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psdWriter.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/helpers.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/additionalInfo.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/effectsHelpers.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psdReader.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/imageResources.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/utf8.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/descriptor.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/engineData.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/text.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psd.ts"],"sourcesContent":["import { Psd, ReadOptions, WriteOptions } from './psd';\nimport { PsdWriter, writePsd as writePsdInternal, getWriterBuffer, createWriter, getWriterBufferNoCopy } from './psdWriter';\nimport { PsdReader, readPsd as readPsdInternal, createReader } from './psdReader';\nexport { initializeCanvas } from './helpers';\nexport * from './psd';\nimport { fromByteArray } from 'base64-js';\nexport { PsdReader, PsdWriter };\n\ninterface BufferLike {\n\tbuffer: ArrayBuffer;\n\tbyteOffset: number;\n\tbyteLength: number;\n}\n\nexport const byteArrayToBase64 = fromByteArray;\n\nexport function readPsd(buffer: ArrayBuffer | BufferLike, options?: ReadOptions): Psd {\n\tconst reader = 'buffer' in buffer ?\n\t\tcreateReader(buffer.buffer, buffer.byteOffset, buffer.byteLength) :\n\t\tcreateReader(buffer);\n\treturn readPsdInternal(reader, options);\n}\n\nexport function writePsd(psd: Psd, options?: WriteOptions): ArrayBuffer {\n\tconst writer = createWriter();\n\twritePsdInternal(writer, psd, options);\n\treturn getWriterBuffer(writer);\n}\n\nexport function writePsdUint8Array(psd: Psd, options?: WriteOptions): Uint8Array {\n\tconst writer = createWriter();\n\twritePsdInternal(writer, psd, options);\n\treturn getWriterBufferNoCopy(writer);\n}\n\nexport function writePsdBuffer(psd: Psd, options?: WriteOptions): Buffer {\n\tif (typeof Buffer === 'undefined') {\n\t\tthrow new Error('Buffer not supported on this platform');\n\t}\n\n\treturn Buffer.from(writePsdUint8Array(psd, options));\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n","import setPrototypeOf from './_set_prototype_of.mjs';\n\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n","function setPrototypeOf(o, p) {\n  setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return setPrototypeOf(o, p);\n}\n\nexport default function _setPrototypeOf(o, p) {\n  return setPrototypeOf(o, p);\n}\n","export default function _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n","import _isNativeReflectConstruct from \"./_is_native_reflect_construct.mjs\";\nimport _getPrototypeOf from \"./_get_prototype_of.mjs\";\nimport _possibleConstructorReturn from './_possible_constructor_return.mjs';\n\nexport default function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return _possibleConstructorReturn(this, result);\n    };\n}","export default function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () { }));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}","function getPrototypeOf(o) {\n  getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return getPrototypeOf(o);\n}\n\nexport default function _getPrototypeOf(o) {\n  return getPrototypeOf(o);\n}","import assertThisInitialized from './_assert_this_initialized.mjs';\nimport _typeof from './_type_of.mjs';\n\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { Psd, Layer, LayerAdditionalInfo, ColorMode, SectionDividerType, WriteOptions, Color, GlobalLayerMaskInfo } from './psd';\nimport {\n\thasAlpha, createCanvas, writeDataRLE, PixelData, LayerChannelData, ChannelData,\n\toffsetForChannel, createImageData, fromBlendMode, ChannelID, Compression, clamp,\n\tLayerMaskFlags, MaskParams, ColorSpace, Bounds\n} from './helpers';\nimport { ExtendedWriteOptions, infoHandlers } from './additionalInfo';\nimport { resourceHandlers } from './imageResources';\n\nconst RAW_IMAGE_DATA = false;\n\nexport interface PsdWriter {\n\toffset: number;\n\tbuffer: ArrayBuffer;\n\tview: DataView;\n}\n\nexport function createWriter(size = 4096): PsdWriter {\n\tconst buffer = new ArrayBuffer(size);\n\tconst view = new DataView(buffer);\n\tconst offset = 0;\n\treturn { buffer, view, offset };\n}\n\nexport function getWriterBuffer(writer: PsdWriter) {\n\treturn writer.buffer.slice(0, writer.offset);\n}\n\nexport function getWriterBufferNoCopy(writer: PsdWriter) {\n\treturn new Uint8Array(writer.buffer, 0, writer.offset);\n}\n\nexport function writeUint8(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 1);\n\twriter.view.setUint8(offset, value);\n}\n\nexport function writeInt16(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 2);\n\twriter.view.setInt16(offset, value, false);\n}\n\nexport function writeUint16(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 2);\n\twriter.view.setUint16(offset, value, false);\n}\n\nexport function writeInt32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setInt32(offset, value, false);\n}\n\nexport function writeUint32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setUint32(offset, value, false);\n}\n\nexport function writeFloat32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setFloat32(offset, value, false);\n}\n\nexport function writeFloat64(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 8);\n\twriter.view.setFloat64(offset, value, false);\n}\n\n// 32-bit fixed-point number 16.16\nexport function writeFixedPoint32(writer: PsdWriter, value: number) {\n\twriteInt32(writer, value * (1 << 16));\n}\n\n// 32-bit fixed-point number 8.24\nexport function writeFixedPointPath32(writer: PsdWriter, value: number) {\n\twriteInt32(writer, value * (1 << 24));\n}\n\nexport function writeBytes(writer: PsdWriter, buffer: Uint8Array | undefined) {\n\tif (buffer) {\n\t\tensureSize(writer, writer.offset + buffer.length);\n\t\tconst bytes = new Uint8Array(writer.buffer);\n\t\tbytes.set(buffer, writer.offset);\n\t\twriter.offset += buffer.length;\n\t}\n}\n\nexport function writeZeros(writer: PsdWriter, count: number) {\n\tfor (let i = 0; i < count; i++) {\n\t\twriteUint8(writer, 0);\n\t}\n}\n\nexport function writeSignature(writer: PsdWriter, signature: string) {\n\tif (signature.length !== 4) throw new Error(`Invalid signature: '${signature}'`);\n\n\tfor (let i = 0; i < 4; i++) {\n\t\twriteUint8(writer, signature.charCodeAt(i));\n\t}\n}\n\nexport function writePascalString(writer: PsdWriter, text: string, padTo: number) {\n\tlet length = text.length;\n\twriteUint8(writer, length);\n\n\tfor (let i = 0; i < length; i++) {\n\t\tconst code = text.charCodeAt(i);\n\t\twriteUint8(writer, code < 128 ? code : '?'.charCodeAt(0));\n\t}\n\n\twhile (++length % padTo) {\n\t\twriteUint8(writer, 0);\n\t}\n}\n\nexport function writeUnicodeString(writer: PsdWriter, text: string) {\n\twriteUint32(writer, text.length);\n\n\tfor (let i = 0; i < text.length; i++) {\n\t\twriteUint16(writer, text.charCodeAt(i));\n\t}\n}\n\nexport function writeUnicodeStringWithPadding(writer: PsdWriter, text: string) {\n\twriteUint32(writer, text.length + 1);\n\n\tfor (let i = 0; i < text.length; i++) {\n\t\twriteUint16(writer, text.charCodeAt(i));\n\t}\n\n\twriteUint16(writer, 0);\n}\n\nfunction getLargestLayerSize(layers: Layer[] = []): number {\n\tlet max = 0;\n\n\tfor (const layer of layers) {\n\t\tif (layer.canvas || layer.imageData) {\n\t\t\tconst { width, height } = getLayerDimentions(layer);\n\t\t\tmax = Math.max(max, 2 * height + 2 * width * height);\n\t\t}\n\n\t\tif (layer.children) {\n\t\t\tmax = Math.max(max, getLargestLayerSize(layer.children));\n\t\t}\n\t}\n\n\treturn max;\n}\n\nexport function writeSection(writer: PsdWriter, round: number, func: () => void, writeTotalLength = false) {\n\tconst offset = writer.offset;\n\twriteInt32(writer, 0);\n\n\tfunc();\n\n\tlet length = writer.offset - offset - 4;\n\tlet len = length;\n\n\twhile ((len % round) !== 0) {\n\t\twriteUint8(writer, 0);\n\t\tlen++;\n\t}\n\n\tif (writeTotalLength) {\n\t\tlength = len;\n\t}\n\n\twriter.view.setInt32(offset, length, false);\n}\n\nexport function writePsd(writer: PsdWriter, psd: Psd, options: WriteOptions = {}) {\n\tif (!(+psd.width > 0 && +psd.height > 0))\n\t\tthrow new Error('Invalid document size');\n\n\tlet imageResources = psd.imageResources || {};\n\n\tconst writeOptions: ExtendedWriteOptions = { ...options, layerIds: [] };\n\n\tif (writeOptions.generateThumbnail) {\n\t\timageResources = { ...imageResources, thumbnail: createThumbnail(psd) };\n\t}\n\n\tlet imageData = psd.imageData;\n\n\tif (!imageData && psd.canvas) {\n\t\timageData = psd.canvas.getContext('2d')!.getImageData(0, 0, psd.canvas.width, psd.canvas.height);\n\t}\n\n\tif (imageData && (psd.width !== imageData.width || psd.height !== imageData.height))\n\t\tthrow new Error('Document canvas must have the same size as document');\n\n\tconst globalAlpha = !!imageData && hasAlpha(imageData);\n\tconst maxBufferSize = Math.max(getLargestLayerSize(psd.children), 4 * 2 * psd.width * psd.height + 2 * psd.height);\n\tconst tempBuffer = new Uint8Array(maxBufferSize);\n\n\t// header\n\twriteSignature(writer, '8BPS');\n\twriteUint16(writer, 1); // version\n\twriteZeros(writer, 6);\n\twriteUint16(writer, globalAlpha ? 4 : 3); // channels\n\twriteUint32(writer, psd.height);\n\twriteUint32(writer, psd.width);\n\twriteUint16(writer, 8); // bits per channel\n\twriteUint16(writer, ColorMode.RGB);\n\n\t// color mode data\n\twriteSection(writer, 1, () => {\n\t\t// TODO: implement\n\t});\n\n\t// image resources\n\twriteSection(writer, 1, () => {\n\t\tfor (const handler of resourceHandlers) {\n\t\t\tif (handler.has(imageResources)) {\n\t\t\t\twriteSignature(writer, '8BIM');\n\t\t\t\twriteUint16(writer, handler.key);\n\t\t\t\twritePascalString(writer, '', 2);\n\t\t\t\twriteSection(writer, 2, () => handler.write(writer, imageResources));\n\t\t\t}\n\t\t}\n\t});\n\n\t// layer and mask info\n\twriteSection(writer, 2, () => {\n\t\twriteLayerInfo(tempBuffer, writer, psd, globalAlpha, writeOptions);\n\t\twriteGlobalLayerMaskInfo(writer, psd.globalLayerMaskInfo);\n\t\twriteAdditionalLayerInfo(writer, psd, psd, writeOptions);\n\t});\n\n\t// image data\n\tconst channels = globalAlpha ? [0, 1, 2, 3] : [0, 1, 2];\n\tconst data: PixelData = imageData || {\n\t\tdata: new Uint8Array(4 * psd.width * psd.height),\n\t\twidth: psd.width,\n\t\theight: psd.height,\n\t};\n\n\twriteUint16(writer, Compression.RleCompressed);\n\n\tif (RAW_IMAGE_DATA && (psd as any).imageDataRaw) {\n\t\tconsole.log('writing raw image data');\n\t\twriteBytes(writer, (psd as any).imageDataRaw);\n\t} else {\n\t\twriteBytes(writer, writeDataRLE(tempBuffer, data, psd.width, psd.height, channels));\n\t}\n}\n\nfunction writeLayerInfo(tempBuffer: Uint8Array, writer: PsdWriter, psd: Psd, globalAlpha: boolean, options: ExtendedWriteOptions) {\n\twriteSection(writer, 4, () => {\n\t\tconst layers: Layer[] = [];\n\n\t\taddChildren(layers, psd.children);\n\n\t\tif (!layers.length) layers.push({});\n\n\t\twriteInt16(writer, globalAlpha ? -layers.length : layers.length);\n\n\t\tconst layersData = layers.map((l, i) => getChannels(tempBuffer, l, i === 0, options));\n\n\t\t// layer records\n\t\tfor (const layerData of layersData) {\n\t\t\tconst { layer, top, left, bottom, right, channels } = layerData;\n\n\t\t\twriteInt32(writer, top);\n\t\t\twriteInt32(writer, left);\n\t\t\twriteInt32(writer, bottom);\n\t\t\twriteInt32(writer, right);\n\t\t\twriteUint16(writer, channels.length);\n\n\t\t\tfor (const c of channels) {\n\t\t\t\twriteInt16(writer, c.channelId);\n\t\t\t\twriteInt32(writer, c.length);\n\t\t\t}\n\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, fromBlendMode[layer.blendMode!] || 'norm');\n\t\t\twriteUint8(writer, Math.round(clamp(layer.opacity ?? 1, 0, 1) * 255));\n\t\t\twriteUint8(writer, layer.clipping ? 1 : 0);\n\n\t\t\tlet flags = 0x08; // 1 for Photoshop 5.0 and later, tells if bit 4 has useful information\n\t\t\tif (layer.transparencyProtected) flags |= 0x01;\n\t\t\tif (layer.hidden) flags |= 0x02;\n\t\t\tif (layer.vectorMask || (layer.sectionDivider && layer.sectionDivider.type !== SectionDividerType.Other)) {\n\t\t\t\tflags |= 0x10; // pixel data irrelevant to appearance of document\n\t\t\t}\n\n\t\t\twriteUint8(writer, flags);\n\t\t\twriteUint8(writer, 0); // filler\n\t\t\twriteSection(writer, 1, () => {\n\t\t\t\twriteLayerMaskData(writer, layer, layerData);\n\t\t\t\twriteLayerBlendingRanges(writer, psd);\n\t\t\t\twritePascalString(writer, layer.name || '', 4);\n\t\t\t\twriteAdditionalLayerInfo(writer, layer, psd, options);\n\t\t\t});\n\t\t}\n\n\t\t// layer channel image data\n\t\tfor (const layerData of layersData) {\n\t\t\tfor (const channel of layerData.channels) {\n\t\t\t\twriteUint16(writer, channel.compression);\n\n\t\t\t\tif (channel.buffer) {\n\t\t\t\t\twriteBytes(writer, channel.buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, true);\n}\n\nfunction writeLayerMaskData(writer: PsdWriter, { mask }: Layer, layerData: LayerChannelData) {\n\twriteSection(writer, 1, () => {\n\t\tif (!mask) return;\n\n\t\tconst m = layerData.mask || {} as Partial<Bounds>;\n\t\twriteInt32(writer, m.top!);\n\t\twriteInt32(writer, m.left!);\n\t\twriteInt32(writer, m.bottom!);\n\t\twriteInt32(writer, m.right!);\n\t\twriteUint8(writer, mask.defaultColor!);\n\n\t\tlet params = 0;\n\t\tif (mask.userMaskDensity !== undefined) params |= MaskParams.UserMaskDensity;\n\t\tif (mask.userMaskFeather !== undefined) params |= MaskParams.UserMaskFeather;\n\t\tif (mask.vectorMaskDensity !== undefined) params |= MaskParams.VectorMaskDensity;\n\t\tif (mask.vectorMaskFeather !== undefined) params |= MaskParams.VectorMaskFeather;\n\n\t\tlet flags = 0;\n\t\tif (mask.disabled) flags |= LayerMaskFlags.LayerMaskDisabled;\n\t\tif (mask.positionRelativeToLayer) flags |= LayerMaskFlags.PositionRelativeToLayer;\n\t\tif (mask.fromVectorData) flags |= LayerMaskFlags.LayerMaskFromRenderingOtherData;\n\t\tif (params) flags |= LayerMaskFlags.MaskHasParametersAppliedToIt;\n\n\t\twriteUint8(writer, flags);\n\n\t\tif (params) {\n\t\t\twriteUint8(writer, params);\n\n\t\t\tif (mask.userMaskDensity !== undefined) writeUint8(writer, Math.round(mask.userMaskDensity * 0xff));\n\t\t\tif (mask.userMaskFeather !== undefined) writeFloat64(writer, mask.userMaskFeather);\n\t\t\tif (mask.vectorMaskDensity !== undefined) writeUint8(writer, Math.round(mask.vectorMaskDensity * 0xff));\n\t\t\tif (mask.vectorMaskFeather !== undefined) writeFloat64(writer, mask.vectorMaskFeather);\n\t\t}\n\n\t\t// TODO: handle rest of the fields\n\n\t\twriteZeros(writer, 2);\n\t});\n}\n\nfunction writeLayerBlendingRanges(writer: PsdWriter, psd: Psd) {\n\twriteSection(writer, 1, () => {\n\t\twriteUint32(writer, 65535);\n\t\twriteUint32(writer, 65535);\n\n\t\t// TODO: use always 4 instead ?\n\t\tconst channels = psd.channels || 0;\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\twriteUint32(writer, 65535);\n\t\t\twriteUint32(writer, 65535);\n\t\t}\n\t});\n}\n\nfunction writeGlobalLayerMaskInfo(writer: PsdWriter, info: GlobalLayerMaskInfo | undefined) {\n\twriteSection(writer, 1, () => {\n\t\tif (info) {\n\t\t\twriteUint16(writer, info.overlayColorSpace);\n\t\t\twriteUint16(writer, info.colorSpace1);\n\t\t\twriteUint16(writer, info.colorSpace2);\n\t\t\twriteUint16(writer, info.colorSpace3);\n\t\t\twriteUint16(writer, info.colorSpace4);\n\t\t\twriteUint16(writer, info.opacity * 0xff);\n\t\t\twriteUint8(writer, info.kind);\n\t\t\twriteZeros(writer, 3);\n\t\t}\n\t});\n}\n\nfunction writeAdditionalLayerInfo(writer: PsdWriter, target: LayerAdditionalInfo, psd: Psd, options: ExtendedWriteOptions) {\n\tfor (const handler of infoHandlers) {\n\t\tconst key = handler.key;\n\n\t\tif (key === 'Txt2' && options.invalidateTextLayers) continue;\n\n\t\tif (handler.has(target)) {\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, key);\n\n\t\t\tconst align = (key === 'Txt2' || key === 'luni' || key === 'vmsk' || key === 'artb' || key === 'artd' ||\n\t\t\t\tkey === 'vogk' || key === 'SoLd' || key === 'lnk2' || key === 'vscg' || key === 'vsms' ||\n\t\t\t\tkey === 'GdFl') ? 4 : 2;\n\t\t\twriteSection(writer, align, () => handler.write(writer, target, psd, options), key !== 'Txt2');\n\t\t}\n\t}\n}\n\nfunction addChildren(layers: Layer[], children: Layer[] | undefined) {\n\tif (!children) return;\n\n\tfor (const c of children) {\n\t\tif (c.children && c.canvas) throw new Error(`Invalid layer, cannot have both 'canvas' and 'children' properties`);\n\t\tif (c.children && c.imageData) throw new Error(`Invalid layer, cannot have both 'imageData' and 'children' properties`);\n\n\t\tif (c.children) {\n\t\t\tlayers.push({\n\t\t\t\tname: '</Layer group>',\n\t\t\t\tsectionDivider: {\n\t\t\t\t\ttype: SectionDividerType.BoundingSectionDivider,\n\t\t\t\t},\n\t\t\t\t// TESTING\n\t\t\t\t// nameSource: 'lset',\n\t\t\t\t// id: [4, 0, 0, 8, 11, 0, 0, 0, 0, 14][layers.length] || 0,\n\t\t\t\t// layerColor: 'none',\n\t\t\t\t// timestamp: [1611346817.349021, 0, 0, 1611346817.349175, 1611346817.3491833, 0, 0, 0, 0, 1611346817.349832][layers.length] || 0,\n\t\t\t\t// protected: {},\n\t\t\t\t// referencePoint: { x: 0, y: 0 },\n\t\t\t});\n\t\t\taddChildren(layers, c.children);\n\t\t\tlayers.push({\n\t\t\t\tsectionDivider: {\n\t\t\t\t\ttype: c.opened === false ? SectionDividerType.ClosedFolder : SectionDividerType.OpenFolder,\n\t\t\t\t\tkey: fromBlendMode[c.blendMode!] || 'pass',\n\t\t\t\t\tsubType: 0,\n\t\t\t\t},\n\t\t\t\t...c,\n\t\t\t});\n\t\t} else {\n\t\t\tlayers.push({ ...c });\n\t\t}\n\t}\n}\n\nfunction resizeBuffer(writer: PsdWriter, size: number) {\n\tlet newLength = writer.buffer.byteLength;\n\n\tdo {\n\t\tnewLength *= 2;\n\t} while (size > newLength);\n\n\tconst newBuffer = new ArrayBuffer(newLength);\n\tconst newBytes = new Uint8Array(newBuffer);\n\tconst oldBytes = new Uint8Array(writer.buffer);\n\tnewBytes.set(oldBytes);\n\twriter.buffer = newBuffer;\n\twriter.view = new DataView(writer.buffer);\n}\n\nfunction ensureSize(writer: PsdWriter, size: number) {\n\tif (size > writer.buffer.byteLength) {\n\t\tresizeBuffer(writer, size);\n\t}\n}\n\nfunction addSize(writer: PsdWriter, size: number) {\n\tconst offset = writer.offset;\n\tensureSize(writer, writer.offset += size);\n\treturn offset;\n}\n\nfunction createThumbnail(psd: Psd) {\n\tconst canvas = createCanvas(10, 10);\n\tlet scale = 1;\n\n\tif (psd.width > psd.height) {\n\t\tcanvas.width = 160;\n\t\tcanvas.height = Math.floor(psd.height * (canvas.width / psd.width));\n\t\tscale = canvas.width / psd.width;\n\t} else {\n\t\tcanvas.height = 160;\n\t\tcanvas.width = Math.floor(psd.width * (canvas.height / psd.height));\n\t\tscale = canvas.height / psd.height;\n\t}\n\n\tconst context = canvas.getContext('2d')!;\n\tcontext.scale(scale, scale);\n\n\tif (psd.imageData) {\n\t\tconst temp = createCanvas(psd.imageData.width, psd.imageData.height);\n\t\ttemp.getContext('2d')!.putImageData(psd.imageData, 0, 0);\n\t\tcontext.drawImage(temp, 0, 0);\n\t} else if (psd.canvas) {\n\t\tcontext.drawImage(psd.canvas, 0, 0);\n\t}\n\n\treturn canvas;\n}\n\nfunction getChannels(\n\ttempBuffer: Uint8Array, layer: Layer, background: boolean, options: WriteOptions\n): LayerChannelData {\n\tconst layerData = getLayerChannels(tempBuffer, layer, background, options);\n\tconst mask = layer.mask;\n\n\tif (mask) {\n\t\tlet { top = 0, left = 0, right = 0, bottom = 0 } = mask;\n\t\tlet { width, height } = getLayerDimentions(mask);\n\t\tlet imageData = mask.imageData;\n\n\t\tif (!imageData && mask.canvas && width && height) {\n\t\t\timageData = mask.canvas.getContext('2d')!.getImageData(0, 0, width, height);\n\t\t}\n\n\t\tif (width && height && imageData) {\n\t\t\tright = left + width;\n\t\t\tbottom = top + height;\n\n\t\t\tlet buffer = writeDataRLE(tempBuffer, imageData, width, height, [0])!;\n\n\t\t\tif (RAW_IMAGE_DATA && (layer as any).maskDataRaw) {\n\t\t\t\t// console.log('written raw layer image data');\n\t\t\t\tbuffer = (layer as any).maskDataRaw;\n\t\t\t}\n\n\t\t\tlayerData.mask = { top, left, right, bottom };\n\t\t\tlayerData.channels.push({\n\t\t\t\tchannelId: ChannelID.UserMask,\n\t\t\t\tcompression: Compression.RleCompressed,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tlength: 2 + buffer.length,\n\t\t\t});\n\t\t} else {\n\t\t\tlayerData.mask = { top: 0, left: 0, right: 0, bottom: 0 };\n\t\t\tlayerData.channels.push({\n\t\t\t\tchannelId: ChannelID.UserMask,\n\t\t\t\tcompression: Compression.RawData,\n\t\t\t\tbuffer: new Uint8Array(0),\n\t\t\t\tlength: 0,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn layerData;\n}\n\nfunction getLayerDimentions({ canvas, imageData }: Layer): { width: number; height: number; } {\n\treturn imageData || canvas || { width: 0, height: 0 };\n}\n\nfunction cropImageData(data: ImageData, left: number, top: number, width: number, height: number) {\n\tconst croppedData = createImageData(width, height);\n\tconst srcData = data.data;\n\tconst dstData = croppedData.data;\n\n\tfor (let y = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tlet src = ((x + left) + (y + top) * width) * 4;\n\t\t\tlet dst = (x + y * width) * 4;\n\t\t\tdstData[dst] = srcData[src];\n\t\t\tdstData[dst + 1] = srcData[src + 1];\n\t\t\tdstData[dst + 2] = srcData[src + 2];\n\t\t\tdstData[dst + 3] = srcData[src + 3];\n\t\t}\n\t}\n\n\treturn croppedData;\n}\n\nfunction getLayerChannels(\n\ttempBuffer: Uint8Array, layer: Layer, background: boolean, options: WriteOptions\n): LayerChannelData {\n\tlet { top = 0, left = 0, right = 0, bottom = 0 } = layer;\n\tlet channels: ChannelData[] = [\n\t\t{ channelId: ChannelID.Transparency, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Red, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Green, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Blue, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t];\n\n\tlet { width, height } = getLayerDimentions(layer);\n\n\tif (!(layer.canvas || layer.imageData) || !width || !height) {\n\t\tright = left;\n\t\tbottom = top;\n\t\treturn { layer, top, left, right, bottom, channels };\n\t}\n\n\tright = left + width;\n\tbottom = top + height;\n\n\tlet data = layer.imageData || layer.canvas!.getContext('2d')!.getImageData(0, 0, width, height);\n\n\tif (options.trimImageData) {\n\t\tconst trimmed = trimData(data);\n\n\t\tif (trimmed.left !== 0 || trimmed.top !== 0 || trimmed.right !== data.width || trimmed.bottom !== data.height) {\n\t\t\tleft += trimmed.left;\n\t\t\ttop += trimmed.top;\n\t\t\tright -= (data.width - trimmed.right);\n\t\t\tbottom -= (data.height - trimmed.bottom);\n\t\t\twidth = right - left;\n\t\t\theight = bottom - top;\n\n\t\t\tif (!width || !height) {\n\t\t\t\treturn { layer, top, left, right, bottom, channels };\n\t\t\t}\n\n\t\t\tif (layer.imageData) {\n\t\t\t\tdata = cropImageData(data, trimmed.left, trimmed.top, width, height);\n\t\t\t} else {\n\t\t\t\tdata = layer.canvas!.getContext('2d')!.getImageData(trimmed.left, trimmed.top, width, height);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst channelIds = [\n\t\tChannelID.Red,\n\t\tChannelID.Green,\n\t\tChannelID.Blue,\n\t];\n\n\tif (!background || options.noBackground || layer.mask || hasAlpha(data) || (RAW_IMAGE_DATA && (layer as any).imageDataRaw?.['-1'])) {\n\t\tchannelIds.unshift(ChannelID.Transparency);\n\t}\n\n\tchannels = channelIds.map(channel => {\n\t\tconst offset = offsetForChannel(channel);\n\t\tlet buffer = writeDataRLE(tempBuffer, data, width, height, [offset])!;\n\n\t\tif (RAW_IMAGE_DATA && (layer as any).imageDataRaw) {\n\t\t\t// console.log('written raw layer image data');\n\t\t\tbuffer = (layer as any).imageDataRaw[channel];\n\t\t}\n\n\t\treturn {\n\t\t\tchannelId: channel,\n\t\t\tcompression: Compression.RleCompressed,\n\t\t\tbuffer: buffer,\n\t\t\tlength: 2 + buffer.length,\n\t\t};\n\t});\n\n\treturn { layer, top, left, right, bottom, channels };\n}\n\nfunction isRowEmpty({ data, width }: PixelData, y: number, left: number, right: number) {\n\tconst start = ((y * width + left) * 4 + 3) | 0;\n\tconst end = (start + (right - left) * 4) | 0;\n\n\tfor (let i = start; i < end; i = (i + 4) | 0) {\n\t\tif (data[i] !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction isColEmpty({ data, width }: PixelData, x: number, top: number, bottom: number) {\n\tconst stride = (width * 4) | 0;\n\tconst start = (top * stride + x * 4 + 3) | 0;\n\n\tfor (let y = top, i = start; y < bottom; y++, i = (i + stride) | 0) {\n\t\tif (data[i] !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction trimData(data: PixelData) {\n\tlet top = 0;\n\tlet left = 0;\n\tlet right = data.width;\n\tlet bottom = data.height;\n\n\twhile (top < bottom && isRowEmpty(data, top, left, right))\n\t\ttop++;\n\twhile (bottom > top && isRowEmpty(data, bottom - 1, left, right))\n\t\tbottom--;\n\twhile (left < right && isColEmpty(data, left, top, bottom))\n\t\tleft++;\n\twhile (right > left && isColEmpty(data, right - 1, top, bottom))\n\t\tright--;\n\n\treturn { top, left, right, bottom };\n}\n\nexport function writeColor(writer: PsdWriter, color: Color | undefined) {\n\tif (!color) {\n\t\twriteUint16(writer, ColorSpace.RGB);\n\t\twriteZeros(writer, 8);\n\t} else if ('r' in color) {\n\t\twriteUint16(writer, ColorSpace.RGB);\n\t\twriteUint16(writer, Math.round(color.r * 257));\n\t\twriteUint16(writer, Math.round(color.g * 257));\n\t\twriteUint16(writer, Math.round(color.b * 257));\n\t\twriteUint16(writer, 0);\n\t} else if ('l' in color) {\n\t\twriteUint16(writer, ColorSpace.Lab);\n\t\twriteUint16(writer, Math.round(color.l * 100));\n\t\twriteUint16(writer, Math.round(color.a * 100));\n\t\twriteUint16(writer, Math.round(color.b * 100));\n\t\twriteUint16(writer, 0);\n\t} else if ('h' in color) {\n\t\twriteUint16(writer, ColorSpace.HSB);\n\t\twriteUint16(writer, Math.round(color.h));\n\t\twriteUint16(writer, Math.round(color.s));\n\t\twriteUint16(writer, Math.round(color.b));\n\t\twriteUint16(writer, 0);\n\t} else if ('c' in color) {\n\t\twriteUint16(writer, ColorSpace.CMYK);\n\t\twriteUint16(writer, Math.round(color.c));\n\t\twriteUint16(writer, Math.round(color.m));\n\t\twriteUint16(writer, Math.round(color.y));\n\t\twriteUint16(writer, Math.round(color.k));\n\t} else {\n\t\twriteUint16(writer, ColorSpace.Grayscale);\n\t\twriteUint16(writer, Math.round(color.k));\n\t\twriteZeros(writer, 6);\n\t}\n}\n","import { fromByteArray } from 'base64-js';\nimport { Layer, BlendMode, LayerColor } from './psd';\n\nexport const fromBlendMode: { [key: string]: string } = {};\nexport const toBlendMode: { [key: string]: BlendMode } = {\n\t'pass': 'pass through',\n\t'norm': 'normal',\n\t'diss': 'dissolve',\n\t'dark': 'darken',\n\t'mul ': 'multiply',\n\t'idiv': 'color burn',\n\t'lbrn': 'linear burn',\n\t'dkCl': 'darker color',\n\t'lite': 'lighten',\n\t'scrn': 'screen',\n\t'div ': 'color dodge',\n\t'lddg': 'linear dodge',\n\t'lgCl': 'lighter color',\n\t'over': 'overlay',\n\t'sLit': 'soft light',\n\t'hLit': 'hard light',\n\t'vLit': 'vivid light',\n\t'lLit': 'linear light',\n\t'pLit': 'pin light',\n\t'hMix': 'hard mix',\n\t'diff': 'difference',\n\t'smud': 'exclusion',\n\t'fsub': 'subtract',\n\t'fdiv': 'divide',\n\t'hue ': 'hue',\n\t'sat ': 'saturation',\n\t'colr': 'color',\n\t'lum ': 'luminosity',\n};\n\nObject.keys(toBlendMode).forEach(key => fromBlendMode[toBlendMode[key]] = key);\n\nexport const layerColors: LayerColor[] = [\n\t'none', 'red', 'orange', 'yellow', 'green', 'blue', 'violet', 'gray'\n];\n\nexport interface Dict {\n\t[key: string]: string;\n}\n\nexport function revMap(map: Dict) {\n\tconst result: Dict = {};\n\tObject.keys(map).forEach(key => result[map[key]] = key);\n\treturn result;\n}\n\nexport function createEnum<T>(prefix: string, def: string, map: Dict) {\n\tconst rev = revMap(map);\n\tconst decode = (val: string): T => {\n\t\tconst value = val.split('.')[1];\n\t\tif (value && !rev[value]) throw new Error(`Unrecognized value for enum: ${val}`);\n\t\treturn (rev[value] as any) || def;\n\t};\n\tconst encode = (val: T | undefined): string => {\n\t\tif (val && !map[val as any]) throw new Error(`Invalid value for enum: ${val}`);\n\t\treturn `${prefix}.${map[val as any] || map[def]}`;\n\t};\n\treturn { decode, encode };\n}\n\nexport const enum ColorSpace {\n\tRGB = 0,\n\tHSB = 1,\n\tCMYK = 2,\n\tLab = 7,\n\tGrayscale = 8,\n}\n\nexport const enum LayerMaskFlags {\n\tPositionRelativeToLayer = 1,\n\tLayerMaskDisabled = 2,\n\tInvertLayerMaskWhenBlending = 4, // obsolete\n\tLayerMaskFromRenderingOtherData = 8,\n\tMaskHasParametersAppliedToIt = 16,\n}\n\nexport const enum MaskParams {\n\tUserMaskDensity = 1,\n\tUserMaskFeather = 2,\n\tVectorMaskDensity = 4,\n\tVectorMaskFeather = 8,\n}\n\nexport const enum ChannelID {\n\tRed = 0,\n\tGreen = 1,\n\tBlue = 2,\n\tTransparency = -1,\n\tUserMask = -2,\n\tRealUserMask = -3,\n}\n\nexport const enum Compression {\n\tRawData = 0,\n\tRleCompressed = 1,\n\tZipWithoutPrediction = 2,\n\tZipWithPrediction = 3,\n}\n\nexport interface ChannelData {\n\tchannelId: ChannelID;\n\tcompression: Compression;\n\tbuffer: Uint8Array | undefined;\n\tlength: number;\n}\n\nexport interface Bounds {\n\ttop: number;\n\tleft: number;\n\tright: number;\n\tbottom: number;\n}\n\nexport interface LayerChannelData {\n\tlayer: Layer;\n\tchannels: ChannelData[];\n\ttop: number;\n\tleft: number;\n\tright: number;\n\tbottom: number;\n\tmask?: Bounds;\n}\n\nexport type PixelArray = Uint8ClampedArray | Uint8Array;\n\nexport interface PixelData {\n\tdata: PixelArray;\n\twidth: number;\n\theight: number;\n}\n\nexport function offsetForChannel(channelId: ChannelID) {\n\tswitch (channelId) {\n\t\tcase ChannelID.Red: return 0;\n\t\tcase ChannelID.Green: return 1;\n\t\tcase ChannelID.Blue: return 2;\n\t\tcase ChannelID.Transparency: return 3;\n\t\tdefault: return channelId + 1;\n\t}\n}\n\nexport function clamp(value: number, min: number, max: number) {\n\treturn value < min ? min : (value > max ? max : value);\n}\n\nexport function hasAlpha(data: PixelData) {\n\tconst size = data.width * data.height * 4;\n\n\tfor (let i = 3; i < size; i += 4) {\n\t\tif (data.data[i] !== 255) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function resetImageData({ width, height, data }: PixelData) {\n\tconst size = (width * height) | 0;\n\tconst buffer = new Uint32Array(data.buffer);\n\n\tfor (let p = 0; p < size; p = (p + 1) | 0) {\n\t\tbuffer[p] = 0xff000000;\n\t}\n}\n\nexport function decodeBitmap(input: PixelArray, output: PixelArray, width: number, height: number) {\n\tfor (let y = 0, p = 0, o = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width;) {\n\t\t\tlet b = input[o++];\n\n\t\t\tfor (let i = 0; i < 8 && x < width; i++, x++) {\n\t\t\t\tconst v = b & 0x80 ? 0 : 255;\n\t\t\t\tb = b << 1;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = 255;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function writeDataRaw(data: PixelData, offset: number, width: number, height: number) {\n\tif (!width || !height)\n\t\treturn undefined;\n\n\tconst array = new Uint8Array(width * height);\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tarray[i] = data.data[i * 4 + offset];\n\t}\n\n\treturn array;\n}\n\nexport function writeDataRLE(buffer: Uint8Array, { data }: PixelData, width: number, height: number, offsets: number[]) {\n\tif (!width || !height)\n\t\treturn undefined;\n\n\tconst stride = (4 * width) | 0;\n\n\tlet ol = 0;\n\tlet o = (offsets.length * 2 * height) | 0;\n\n\tfor (const offset of offsets) {\n\t\tfor (let y = 0, p = offset | 0; y < height; y++) {\n\t\t\tconst strideStart = (y * stride) | 0;\n\t\t\tconst strideEnd = (strideStart + stride) | 0;\n\t\t\tconst lastIndex = (strideEnd + offset - 4) | 0;\n\t\t\tconst lastIndex2 = (lastIndex - 4) | 0;\n\t\t\tconst startOffset = o;\n\n\t\t\tfor (p = (strideStart + offset) | 0; p < strideEnd; p = (p + 4) | 0) {\n\t\t\t\tif (p < lastIndex2) {\n\t\t\t\t\tlet value1 = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tlet value2 = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tlet value3 = data[p];\n\n\t\t\t\t\tif (value1 === value2 && value1 === value3) {\n\t\t\t\t\t\tlet count = 3;\n\n\t\t\t\t\t\twhile (count < 128 && p < lastIndex && data[(p + 4) | 0] === value1) {\n\t\t\t\t\t\t\tcount = (count + 1) | 0;\n\t\t\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuffer[o++] = 1 - count;\n\t\t\t\t\t\tbuffer[o++] = value1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst countIndex = o;\n\t\t\t\t\t\tlet writeLast = true;\n\t\t\t\t\t\tlet count = 1;\n\t\t\t\t\t\tbuffer[o++] = 0;\n\t\t\t\t\t\tbuffer[o++] = value1;\n\n\t\t\t\t\t\twhile (p < lastIndex && count < 128) {\n\t\t\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\t\t\tvalue1 = value2;\n\t\t\t\t\t\t\tvalue2 = value3;\n\t\t\t\t\t\t\tvalue3 = data[p];\n\n\t\t\t\t\t\t\tif (value1 === value2 && value1 === value3) {\n\t\t\t\t\t\t\t\tp = (p - 12) | 0;\n\t\t\t\t\t\t\t\twriteLast = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\tbuffer[o++] = value1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (writeLast) {\n\t\t\t\t\t\t\tif (count < 127) {\n\t\t\t\t\t\t\t\tbuffer[o++] = value2;\n\t\t\t\t\t\t\t\tbuffer[o++] = value3;\n\t\t\t\t\t\t\t\tcount += 2;\n\t\t\t\t\t\t\t} else if (count < 128) {\n\t\t\t\t\t\t\t\tbuffer[o++] = value2;\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\tp = (p - 4) | 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tp = (p - 8) | 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuffer[countIndex] = count - 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (p === lastIndex) {\n\t\t\t\t\tbuffer[o++] = 0;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t} else { // p === lastIndex2\n\t\t\t\t\tbuffer[o++] = 1;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst length = o - startOffset;\n\t\t\tbuffer[ol++] = (length >> 8) & 0xff;\n\t\t\tbuffer[ol++] = length & 0xff;\n\t\t}\n\t}\n\n\treturn buffer.slice(0, o);\n}\n\nexport let createCanvas: (width: number, height: number) => HTMLCanvasElement = () => {\n\tthrow new Error('Canvas not initialized, use initializeCanvas method to set up createCanvas method');\n};\n\nexport let createCanvasFromData: (data: Uint8Array) => HTMLCanvasElement = () => {\n\tthrow new Error('Canvas not initialized, use initializeCanvas method to set up createCanvasFromData method');\n};\n\nlet tempCanvas: HTMLCanvasElement | undefined = undefined;\n\nexport let createImageData: (width: number, height: number) => ImageData = (width, height) => {\n\tif (!tempCanvas) tempCanvas = createCanvas(1, 1);\n\treturn tempCanvas.getContext('2d')!.createImageData(width, height);\n};\n\nif (typeof document !== 'undefined') {\n\tcreateCanvas = (width, height) => {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\treturn canvas;\n\t};\n\n\tcreateCanvasFromData = (data) => {\n\t\tconst image = new Image();\n\t\timage.src = 'data:image/jpeg;base64,' + fromByteArray(data);\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\t\tcanvas.getContext('2d')!.drawImage(image, 0, 0);\n\t\treturn canvas;\n\t};\n}\n\nexport function initializeCanvas(\n\tcreateCanvasMethod: (width: number, height: number) => HTMLCanvasElement,\n\tcreateCanvasFromDataMethod?: (data: Uint8Array) => HTMLCanvasElement,\n\tcreateImageDataMethod?: (width: number, height: number) => ImageData\n) {\n\tcreateCanvas = createCanvasMethod;\n\tcreateCanvasFromData = createCanvasFromDataMethod || createCanvasFromData;\n\tcreateImageData = createImageDataMethod || createImageData;\n}\n","import { fromByteArray, toByteArray } from 'base64-js';\nimport { readEffects, writeEffects } from './effectsHelpers';\nimport { clamp, createEnum, layerColors } from './helpers';\nimport {\n\tLayerAdditionalInfo, LayerEffectShadow, LayerEffectsOuterGlow, LayerEffectInnerGlow, LayerEffectBevel,\n\tLayerEffectSolidFill, LayerEffectPatternOverlay, LayerEffectGradientOverlay, LayerEffectSatin, EffectContour,\n\tEffectNoiseGradient, BezierPath, Psd, VectorContent, LayerEffectStroke, ExtraGradientInfo, EffectPattern,\n\tExtraPatternInfo, ReadOptions, BrightnessAdjustment, ExposureAdjustment, VibranceAdjustment,\n\tColorBalanceAdjustment, BlackAndWhiteAdjustment, PhotoFilterAdjustment, ChannelMixerChannel,\n\tChannelMixerAdjustment, PosterizeAdjustment, ThresholdAdjustment, GradientMapAdjustment, CMYK,\n\tSelectiveColorAdjustment, ColorLookupAdjustment, LevelsAdjustmentChannel, LevelsAdjustment,\n\tCurvesAdjustment, CurvesAdjustmentChannel, HueSaturationAdjustment, HueSaturationAdjustmentChannel,\n\tPresetInfo, Color, ColorBalanceValues, WriteOptions, LinkedFile, PlacedLayerType, Warp, EffectSolidGradient, KeyDescriptorItem, BooleanOperation,\n} from './psd';\nimport {\n\tPsdReader, readSignature, readUnicodeString, skipBytes, readUint32, readUint8, readFloat64, readUint16,\n\treadBytes, readInt16, checkSignature, readFloat32, readFixedPointPath32, readSection, readColor, readInt32,\n\treadPascalString,\n} from './psdReader';\nimport {\n\tPsdWriter, writeZeros, writeSignature, writeBytes, writeUint32, writeUint16, writeFloat64, writeUint8,\n\twriteInt16, writeFloat32, writeFixedPointPath32, writeUnicodeString, writeSection, writeUnicodeStringWithPadding,\n\twriteColor, writePascalString, writeInt32,\n} from './psdWriter';\nimport {\n\tAnnt, BESl, BESs, BETE, BlnM, bvlT, ClrS, DesciptorGradient, DescriptorColor, DescriptorGradientContent,\n\tDescriptorPatternContent, DescriptorUnitsValue, DescriptorVectorContent, FrFl, FStl, GrdT, IGSr, Ornt,\n\tparseAngle, parsePercent, parsePercentOrAngle, parseUnits, parseUnitsOrNumber, readVersionAndDescriptor, StrokeDescriptor,\n\tstrokeStyleLineAlignment, strokeStyleLineCapType, strokeStyleLineJoinType, TextDescriptor, textGridding,\n\tunitsAngle, unitsPercent, unitsValue, WarpDescriptor, warpStyle, writeVersionAndDescriptor\n} from './descriptor';\nimport { serializeEngineData, parseEngineData } from './engineData';\nimport { encodeEngineData, decodeEngineData } from './text';\n\nconst MOCK_HANDLERS = false;\n\nexport interface ExtendedWriteOptions extends WriteOptions {\n\tlayerIds: number[];\n}\n\ntype HasMethod = (target: LayerAdditionalInfo) => boolean;\ntype ReadMethod = (reader: PsdReader, target: LayerAdditionalInfo, left: () => number, psd: Psd, options: ReadOptions) => void;\ntype WriteMethod = (writer: PsdWriter, target: LayerAdditionalInfo, psd: Psd, options: ExtendedWriteOptions) => void;\n\nexport interface InfoHandler {\n\tkey: string;\n\thas: HasMethod;\n\tread: ReadMethod;\n\twrite: WriteMethod;\n}\n\nexport const infoHandlers: InfoHandler[] = [];\nexport const infoHandlersMap: { [key: string]: InfoHandler } = {};\n\nfunction addHandler(key: string, has: HasMethod, read: ReadMethod, write: WriteMethod) {\n\tconst handler: InfoHandler = { key, has, read, write };\n\tinfoHandlers.push(handler);\n\tinfoHandlersMap[handler.key] = handler;\n}\n\nfunction addHandlerAlias(key: string, target: string) {\n\tinfoHandlersMap[key] = infoHandlersMap[target];\n}\n\nfunction hasKey(key: keyof LayerAdditionalInfo) {\n\treturn (target: LayerAdditionalInfo) => target[key] !== undefined;\n}\n\naddHandler(\n\t'TySh',\n\thasKey('text'),\n\t(reader, target, leftBytes) => {\n\t\tif (readInt16(reader) !== 1) throw new Error(`Invalid TySh version`);\n\n\t\tconst transform: number[] = [];\n\t\tfor (let i = 0; i < 6; i++) transform.push(readFloat64(reader));\n\n\t\tif (readInt16(reader) !== 50) throw new Error(`Invalid TySh text version`);\n\t\tconst text: TextDescriptor = readVersionAndDescriptor(reader);\n\n\t\tif (readInt16(reader) !== 1) throw new Error(`Invalid TySh warp version`);\n\t\tconst warp: WarpDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.text = {\n\t\t\ttransform,\n\t\t\tleft: readFloat32(reader),\n\t\t\ttop: readFloat32(reader),\n\t\t\tright: readFloat32(reader),\n\t\t\tbottom: readFloat32(reader),\n\t\t\ttext: text['Txt '].replace(/\\r/g, '\\n'),\n\t\t\tindex: text.TextIndex || 0,\n\t\t\tgridding: textGridding.decode(text.textGridding),\n\t\t\tantiAlias: Annt.decode(text.AntA),\n\t\t\torientation: Ornt.decode(text.Ornt),\n\t\t\twarp: {\n\t\t\t\tstyle: warpStyle.decode(warp.warpStyle),\n\t\t\t\tvalue: warp.warpValue || 0,\n\t\t\t\tperspective: warp.warpPerspective || 0,\n\t\t\t\tperspectiveOther: warp.warpPerspectiveOther || 0,\n\t\t\t\trotate: Ornt.decode(warp.warpRotate),\n\t\t\t},\n\t\t};\n\n\t\tif (text.EngineData) {\n\t\t\tconst engineData = decodeEngineData(parseEngineData(text.EngineData));\n\n\t\t\t// const before = parseEngineData(text.EngineData);\n\t\t\t// const after = encodeEngineData(engineData);\n\t\t\t// require('fs').writeFileSync('before.txt', require('util').inspect(before, false, 99, false), 'utf8');\n\t\t\t// require('fs').writeFileSync('after.txt', require('util').inspect(after, false, 99, false), 'utf8');\n\n\t\t\t// console.log(require('util').inspect(parseEngineData(text.EngineData), false, 99, true));\n\t\t\ttarget.text = { ...target.text, ...engineData };\n\t\t\t// console.log(require('util').inspect(target.text, false, 99, true));\n\t\t}\n\n\t\tskipBytes(reader, leftBytes());\n\t},\n\t(writer, target) => {\n\t\tconst text = target.text!;\n\t\tconst warp = text.warp || {};\n\t\tconst transform = text.transform || [1, 0, 0, 1, 0, 0];\n\n\t\tconst textDescriptor: TextDescriptor = {\n\t\t\t'Txt ': (text.text || '').replace(/\\r?\\n/g, '\\r'),\n\t\t\ttextGridding: textGridding.encode(text.gridding),\n\t\t\tOrnt: Ornt.encode(text.orientation),\n\t\t\tAntA: Annt.encode(text.antiAlias),\n\t\t\tTextIndex: text.index || 0,\n\t\t\tEngineData: serializeEngineData(encodeEngineData(text)),\n\t\t};\n\n\t\twriteInt16(writer, 1); // version\n\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\twriteFloat64(writer, transform[i]);\n\t\t}\n\n\t\twriteInt16(writer, 50); // text version\n\t\twriteVersionAndDescriptor(writer, '', 'TxLr', textDescriptor);\n\n\t\twriteInt16(writer, 1); // warp version\n\t\twriteVersionAndDescriptor(writer, '', 'warp', encodeWarp(warp));\n\n\t\twriteFloat32(writer, text.left!);\n\t\twriteFloat32(writer, text.top!);\n\t\twriteFloat32(writer, text.right!);\n\t\twriteFloat32(writer, text.bottom!);\n\n\t\t// writeZeros(writer, 2);\n\t},\n);\n\n// vector fills\n\naddHandler(\n\t'SoCo',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\ttarget.vectorFill.type === 'color',\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'GdFl',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\t(target.vectorFill.type === 'solid' || target.vectorFill.type === 'noise'),\n\t(reader, target, left) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'PtFl',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\ttarget.vectorFill.type === 'pattern',\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'vscg',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke !== undefined,\n\t(reader, target, left) => {\n\t\treadSignature(reader); // key\n\t\tconst desc = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(desc);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor, key } = serializeVectorContent(target.vectorFill!);\n\t\twriteSignature(writer, key);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\nfunction readBezierKnot(reader: PsdReader, width: number, height: number) {\n\tconst y0 = readFixedPointPath32(reader) * height;\n\tconst x0 = readFixedPointPath32(reader) * width;\n\tconst y1 = readFixedPointPath32(reader) * height;\n\tconst x1 = readFixedPointPath32(reader) * width;\n\tconst y2 = readFixedPointPath32(reader) * height;\n\tconst x2 = readFixedPointPath32(reader) * width;\n\treturn [x0, y0, x1, y1, x2, y2];\n}\n\nfunction writeBezierKnot(writer: PsdWriter, points: number[], width: number, height: number) {\n\twriteFixedPointPath32(writer, points[1] / height); // y0\n\twriteFixedPointPath32(writer, points[0] / width); // x0\n\twriteFixedPointPath32(writer, points[3] / height); // y1\n\twriteFixedPointPath32(writer, points[2] / width); // x1\n\twriteFixedPointPath32(writer, points[5] / height); // y2\n\twriteFixedPointPath32(writer, points[4] / width); // x2\n}\n\nconst booleanOperations: BooleanOperation[] = ['exclude', 'combine', 'subtract', 'intersect'];\n\naddHandler(\n\t'vmsk',\n\thasKey('vectorMask'),\n\t(reader, target, left, { width, height }) => {\n\t\tif (readUint32(reader) !== 3) throw new Error('Invalid vmsk version');\n\n\t\ttarget.vectorMask = { paths: [] };\n\t\tconst vectorMask = target.vectorMask;\n\n\t\tconst flags = readUint32(reader);\n\t\tvectorMask.invert = (flags & 1) !== 0;\n\t\tvectorMask.notLink = (flags & 2) !== 0;\n\t\tvectorMask.disable = (flags & 4) !== 0;\n\n\t\tconst paths = vectorMask.paths;\n\t\tlet path: BezierPath | undefined = undefined;\n\n\t\twhile (left() >= 26) {\n\t\t\tconst selector = readUint16(reader);\n\n\t\t\tswitch (selector) {\n\t\t\t\tcase 0: // Closed subpath length record\n\t\t\t\tcase 3: { // Open subpath length record\n\t\t\t\t\treadUint16(reader); // count\n\t\t\t\t\tconst boolOp = readUint16(reader);\n\t\t\t\t\treadUint16(reader); // always 1 ?\n\t\t\t\t\tskipBytes(reader, 18);\n\t\t\t\t\tpath = { open: selector === 3, operation: booleanOperations[boolOp], knots: [] };\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 1: // Closed subpath Bezier knot, linked\n\t\t\t\tcase 2: // Closed subpath Bezier knot, unlinked\n\t\t\t\tcase 4: // Open subpath Bezier knot, linked\n\t\t\t\tcase 5: // Open subpath Bezier knot, unlinked\n\t\t\t\t\tpath!.knots.push({ linked: (selector === 1 || selector === 4), points: readBezierKnot(reader, width, height) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6: // Path fill rule record\n\t\t\t\t\tskipBytes(reader, 24);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7: { // Clipboard record\n\t\t\t\t\t// TODO: check if these need to be multiplied by document size\n\t\t\t\t\tconst top = readFixedPointPath32(reader);\n\t\t\t\t\tconst left = readFixedPointPath32(reader);\n\t\t\t\t\tconst bottom = readFixedPointPath32(reader);\n\t\t\t\t\tconst right = readFixedPointPath32(reader);\n\t\t\t\t\tconst resolution = readFixedPointPath32(reader);\n\t\t\t\t\tskipBytes(reader, 4);\n\t\t\t\t\tvectorMask.clipboard = { top, left, bottom, right, resolution };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 8: // Initial fill rule record\n\t\t\t\t\tvectorMask.fillStartsWithAllPixels = !!readUint16(reader);\n\t\t\t\t\tskipBytes(reader, 22);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: throw new Error('Invalid vmsk section');\n\t\t\t}\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, { width, height }) => {\n\t\tconst vectorMask = target.vectorMask!;\n\t\tconst flags =\n\t\t\t(vectorMask.invert ? 1 : 0) |\n\t\t\t(vectorMask.notLink ? 2 : 0) |\n\t\t\t(vectorMask.disable ? 4 : 0);\n\n\t\twriteUint32(writer, 3); // version\n\t\twriteUint32(writer, flags);\n\n\t\t// initial entry\n\t\twriteUint16(writer, 6);\n\t\twriteZeros(writer, 24);\n\n\t\tconst clipboard = vectorMask.clipboard;\n\t\tif (clipboard) {\n\t\t\twriteUint16(writer, 7);\n\t\t\twriteFixedPointPath32(writer, clipboard.top);\n\t\t\twriteFixedPointPath32(writer, clipboard.left);\n\t\t\twriteFixedPointPath32(writer, clipboard.bottom);\n\t\t\twriteFixedPointPath32(writer, clipboard.right);\n\t\t\twriteFixedPointPath32(writer, clipboard.resolution);\n\t\t\twriteZeros(writer, 4);\n\t\t}\n\n\t\tif (vectorMask.fillStartsWithAllPixels !== undefined) {\n\t\t\twriteUint16(writer, 8);\n\t\t\twriteUint16(writer, vectorMask.fillStartsWithAllPixels ? 1 : 0);\n\t\t\twriteZeros(writer, 22);\n\t\t}\n\n\t\tfor (const path of vectorMask.paths) {\n\t\t\twriteUint16(writer, path.open ? 3 : 0);\n\t\t\twriteUint16(writer, path.knots.length);\n\t\t\twriteUint16(writer, Math.abs(booleanOperations.indexOf(path.operation))); // default to 1 if not found\n\t\t\twriteUint16(writer, 1);\n\t\t\twriteZeros(writer, 18); // TODO: these are sometimes non-zero\n\n\t\t\tconst linkedKnot = path.open ? 4 : 1;\n\t\t\tconst unlinkedKnot = path.open ? 5 : 2;\n\n\t\t\tfor (const { linked, points } of path.knots) {\n\t\t\t\twriteUint16(writer, linked ? linkedKnot : unlinkedKnot);\n\t\t\t\twriteBezierKnot(writer, points, width, height);\n\t\t\t}\n\t\t}\n\t},\n);\n\n// TODO: need to write vmsk if has outline ?\naddHandlerAlias('vsms', 'vmsk');\n// addHandlerAlias('vmsk', 'vsms');\n\ninterface VogkDescriptor {\n\tkeyDescriptorList: {\n\t\tkeyShapeInvalidated?: boolean;\n\t\tkeyOriginType?: number;\n\t\tkeyOriginResolution?: number;\n\t\tkeyOriginRRectRadii?: {\n\t\t\tunitValueQuadVersion: number;\n\t\t\ttopRight: DescriptorUnitsValue;\n\t\t\ttopLeft: DescriptorUnitsValue;\n\t\t\tbottomLeft: DescriptorUnitsValue;\n\t\t\tbottomRight: DescriptorUnitsValue;\n\t\t};\n\t\tkeyOriginShapeBBox?: {\n\t\t\tunitValueQuadVersion: number;\n\t\t\t'Top ': DescriptorUnitsValue;\n\t\t\tLeft: DescriptorUnitsValue;\n\t\t\tBtom: DescriptorUnitsValue;\n\t\t\tRght: DescriptorUnitsValue;\n\t\t};\n\t\tkeyOriginIndex: number;\n\t}[];\n}\n\naddHandler(\n\t'vogk',\n\thasKey('vectorOrigination'),\n\t(reader, target, left) => {\n\t\tif (readInt32(reader) !== 1) throw new Error(`Invalid vogk version`);\n\t\tconst desc = readVersionAndDescriptor(reader) as VogkDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\t\ttarget.vectorOrigination = { keyDescriptorList: [] };\n\n\t\tfor (const i of desc.keyDescriptorList) {\n\t\t\tconst item: KeyDescriptorItem = {};\n\n\t\t\tif (i.keyShapeInvalidated != null) item.keyShapeInvalidated = i.keyShapeInvalidated;\n\t\t\tif (i.keyOriginType != null) item.keyOriginType = i.keyOriginType;\n\t\t\tif (i.keyOriginResolution != null) item.keyOriginResolution = i.keyOriginResolution;\n\t\t\tif (i.keyOriginShapeBBox != null) {\n\t\t\t\titem.keyOriginShapeBoundingBox = {\n\t\t\t\t\ttop: parseUnits(i.keyOriginShapeBBox['Top ']),\n\t\t\t\t\tleft: parseUnits(i.keyOriginShapeBBox.Left),\n\t\t\t\t\tbottom: parseUnits(i.keyOriginShapeBBox.Btom),\n\t\t\t\t\tright: parseUnits(i.keyOriginShapeBBox.Rght),\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (i.keyOriginRRectRadii != null) {\n\t\t\t\titem.keyOriginRRectRadii = {\n\t\t\t\t\ttopRight: parseUnits(i.keyOriginRRectRadii.topRight),\n\t\t\t\t\ttopLeft: parseUnits(i.keyOriginRRectRadii.topLeft),\n\t\t\t\t\tbottomLeft: parseUnits(i.keyOriginRRectRadii.bottomLeft),\n\t\t\t\t\tbottomRight: parseUnits(i.keyOriginRRectRadii.bottomRight),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttarget.vectorOrigination.keyDescriptorList.push(item);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\ttarget;\n\t\tconst orig = target.vectorOrigination!;\n\t\tconst desc: VogkDescriptor = { keyDescriptorList: [] };\n\n\t\tfor (let i = 0; i < orig.keyDescriptorList.length; i++) {\n\t\t\tconst item = orig.keyDescriptorList[i];\n\n\t\t\tif (item.keyShapeInvalidated) {\n\t\t\t\tdesc.keyDescriptorList.push({ keyShapeInvalidated: true, keyOriginIndex: i });\n\t\t\t} else {\n\t\t\t\tdesc.keyDescriptorList.push({\n\t\t\t\t\tkeyOriginType: item.keyOriginType ?? 4,\n\t\t\t\t\tkeyOriginResolution: item.keyOriginResolution ?? 72,\n\t\t\t\t} as any);\n\n\t\t\t\tconst out = desc.keyDescriptorList[desc.keyDescriptorList.length - 1];\n\n\t\t\t\tif (item.keyOriginRRectRadii) {\n\t\t\t\t\tout.keyOriginRRectRadii = {\n\t\t\t\t\t\tunitValueQuadVersion: 1,\n\t\t\t\t\t\ttopRight: unitsValue(item.keyOriginRRectRadii.topRight, 'topRight'),\n\t\t\t\t\t\ttopLeft: unitsValue(item.keyOriginRRectRadii.topLeft, 'topLeft'),\n\t\t\t\t\t\tbottomLeft: unitsValue(item.keyOriginRRectRadii.bottomLeft, 'bottomLeft'),\n\t\t\t\t\t\tbottomRight: unitsValue(item.keyOriginRRectRadii.bottomRight, 'bottomRight'),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (item.keyOriginShapeBoundingBox) {\n\t\t\t\t\tout.keyOriginShapeBBox = {\n\t\t\t\t\t\tunitValueQuadVersion: 1,\n\t\t\t\t\t\t'Top ': unitsValue(item.keyOriginShapeBoundingBox.top, 'top'),\n\t\t\t\t\t\tLeft: unitsValue(item.keyOriginShapeBoundingBox.left, 'left'),\n\t\t\t\t\t\tBtom: unitsValue(item.keyOriginShapeBoundingBox.bottom, 'bottom'),\n\t\t\t\t\t\tRght: unitsValue(item.keyOriginShapeBoundingBox.right, 'right'),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tout.keyOriginIndex = i;\n\t\t\t}\n\t\t}\n\n\t\twriteInt32(writer, 1); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t}\n);\n\naddHandler(\n\t'luni',\n\thasKey('name'),\n\t(reader, target, left) => {\n\t\ttarget.name = readUnicodeString(reader);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteUnicodeString(writer, target.name!);\n\t\t// writeUint16(writer, 0); // padding (but not extending string length)\n\t},\n);\n\naddHandler(\n\t'lnsr',\n\thasKey('nameSource'),\n\t(reader, target) => target.nameSource = readSignature(reader),\n\t(writer, target) => writeSignature(writer, target.nameSource!),\n);\n\naddHandler(\n\t'lyid',\n\thasKey('id'),\n\t(reader, target) => target.id = readUint32(reader),\n\t(writer, target, _psd, options) => {\n\t\tlet id = target.id!;\n\t\twhile (options.layerIds.indexOf(id) !== -1) id += 100; // make sure we don't have duplicate layer ids\n\t\twriteUint32(writer, id);\n\t\toptions.layerIds.push(id);\n\t},\n);\n\naddHandler(\n\t'lsct',\n\thasKey('sectionDivider'),\n\t(reader, target, left) => {\n\t\ttarget.sectionDivider = { type: readUint32(reader) };\n\n\t\tif (left()) {\n\t\t\tcheckSignature(reader, '8BIM');\n\t\t\ttarget.sectionDivider.key = readSignature(reader);\n\t\t}\n\n\t\tif (left()) {\n\t\t\t// 0 = normal\n\t\t\t// 1 = scene group, affects the animation timeline.\n\t\t\ttarget.sectionDivider.subType = readUint32(reader);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, target.sectionDivider!.type);\n\n\t\tif (target.sectionDivider!.key) {\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, target.sectionDivider!.key);\n\n\t\t\tif (target.sectionDivider!.subType !== undefined) {\n\t\t\t\twriteUint32(writer, target.sectionDivider!.subType);\n\t\t\t}\n\t\t}\n\t},\n);\n\naddHandler(\n\t'clbl',\n\thasKey('blendClippendElements'),\n\t(reader, target) => {\n\t\ttarget.blendClippendElements = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.blendClippendElements ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'infx',\n\thasKey('blendInteriorElements'),\n\t(reader, target) => {\n\t\ttarget.blendInteriorElements = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.blendInteriorElements ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'knko',\n\thasKey('knockout'),\n\t(reader, target) => {\n\t\ttarget.knockout = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.knockout ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'lspf',\n\thasKey('protected'),\n\t(reader, target) => {\n\t\tconst flags = readUint32(reader);\n\t\ttarget.protected = {\n\t\t\ttransparency: (flags & 0x01) !== 0,\n\t\t\tcomposite: (flags & 0x02) !== 0,\n\t\t\tposition: (flags & 0x04) !== 0,\n\t\t};\n\n\t\tif (flags & 0x08) target.protected.artboards = true;\n\t},\n\t(writer, target) => {\n\t\tconst flags =\n\t\t\t(target.protected!.transparency ? 0x01 : 0) |\n\t\t\t(target.protected!.composite ? 0x02 : 0) |\n\t\t\t(target.protected!.position ? 0x04 : 0) |\n\t\t\t(target.protected!.artboards ? 0x08 : 0);\n\n\t\twriteUint32(writer, flags);\n\t},\n);\n\naddHandler(\n\t'lclr',\n\thasKey('layerColor'),\n\t(reader, target) => {\n\t\tconst color = readUint16(reader);\n\t\tskipBytes(reader, 6);\n\t\ttarget.layerColor = layerColors[color];\n\t},\n\t(writer, target) => {\n\t\tconst index = layerColors.indexOf(target.layerColor!);\n\t\twriteUint16(writer, index === -1 ? 0 : index);\n\t\twriteZeros(writer, 6);\n\t},\n);\n\ninterface CustomDescriptor {\n\tlayerTime?: number;\n}\n\ninterface FrameListDescriptor {\n\tLaID: number;\n\tLaSt: {\n\t\tenab?: boolean;\n\t\tIMsk?: { Ofst: { Hrzn: number; Vrtc: number; } };\n\t\tVMsk?: { Ofst: { Hrzn: number; Vrtc: number; } };\n\t\tFXRf?: { Hrzn: number; Vrtc: number; };\n\t\tFrLs: number[];\n\t}[];\n}\n\naddHandler(\n\t'shmd',\n\thasKey('timestamp'),\n\t(reader, target, left, _, options) => {\n\t\tconst count = readUint32(reader);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tcheckSignature(reader, '8BIM');\n\t\t\tconst key = readSignature(reader);\n\t\t\treadUint8(reader); // copy\n\t\t\tskipBytes(reader, 3);\n\n\t\t\treadSection(reader, 1, left => {\n\t\t\t\tif (key === 'cust') {\n\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as CustomDescriptor;\n\t\t\t\t\tif (desc.layerTime !== undefined) target.timestamp = desc.layerTime;\n\t\t\t\t} else if (key === 'mlst') {\n\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as FrameListDescriptor;\n\t\t\t\t\toptions.logDevFeatures && console.log('mlst', desc);\n\t\t\t\t\t// options.logDevFeatures && console.log('mlst', require('util').inspect(desc, false, 99, true));\n\t\t\t\t} else if (key === 'mdyn') {\n\t\t\t\t\t// frame flags\n\t\t\t\t\tconst unknown = readUint16(reader);\n\t\t\t\t\tconst propagate = readUint8(reader);\n\t\t\t\t\tconst flags = readUint8(reader);\n\t\t\t\t\tconst unifyLayerPosition = (flags & 1) !== 0;\n\t\t\t\t\tconst unifyLayerStyle = (flags & 2) !== 0;\n\t\t\t\t\tconst unifyLayerVisibility = (flags & 4) !== 0;\n\t\t\t\t\toptions.logDevFeatures && console.log(\n\t\t\t\t\t\t'mdyn', 'unknown:', unknown, 'propagate:', propagate,\n\t\t\t\t\t\t'flags:', flags, { unifyLayerPosition, unifyLayerStyle, unifyLayerVisibility });\n\n\t\t\t\t\t// const desc = readVersionAndDescriptor(reader) as FrameListDescriptor;\n\t\t\t\t\t// console.log('mdyn', require('util').inspect(desc, false, 99, true));\n\t\t\t\t} else {\n\t\t\t\t\toptions.logDevFeatures && console.log('Unhandled metadata', key);\n\t\t\t\t}\n\n\t\t\t\tskipBytes(reader, left());\n\t\t\t});\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst desc: CustomDescriptor = {\n\t\t\tlayerTime: target.timestamp!,\n\t\t};\n\n\t\twriteUint32(writer, 1); // count\n\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'cust');\n\t\twriteUint8(writer, 0); // copy (always false)\n\t\twriteZeros(writer, 3);\n\t\twriteSection(writer, 2, () => writeVersionAndDescriptor(writer, '', 'metadata', desc), true);\n\t},\n);\n\naddHandler(\n\t'vstk',\n\thasKey('vectorStroke'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as StrokeDescriptor;\n\t\ttarget.vectorStroke = {\n\t\t\tstrokeEnabled: desc.strokeEnabled,\n\t\t\tfillEnabled: desc.fillEnabled,\n\t\t\tlineWidth: parseUnits(desc.strokeStyleLineWidth),\n\t\t\tlineDashOffset: parseUnits(desc.strokeStyleLineDashOffset),\n\t\t\tmiterLimit: desc.strokeStyleMiterLimit,\n\t\t\tlineCapType: strokeStyleLineCapType.decode(desc.strokeStyleLineCapType),\n\t\t\tlineJoinType: strokeStyleLineJoinType.decode(desc.strokeStyleLineJoinType),\n\t\t\tlineAlignment: strokeStyleLineAlignment.decode(desc.strokeStyleLineAlignment),\n\t\t\tscaleLock: desc.strokeStyleScaleLock,\n\t\t\tstrokeAdjust: desc.strokeStyleStrokeAdjust,\n\t\t\tlineDashSet: desc.strokeStyleLineDashSet.map(parseUnits),\n\t\t\tblendMode: BlnM.decode(desc.strokeStyleBlendMode),\n\t\t\topacity: parsePercent(desc.strokeStyleOpacity),\n\t\t\tcontent: parseVectorContent(desc.strokeStyleContent),\n\t\t\tresolution: desc.strokeStyleResolution,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst stroke = target.vectorStroke!;\n\t\tconst descriptor: StrokeDescriptor = {\n\t\t\tstrokeStyleVersion: 2,\n\t\t\tstrokeEnabled: !!stroke.strokeEnabled,\n\t\t\tfillEnabled: !!stroke.fillEnabled,\n\t\t\tstrokeStyleLineWidth: stroke.lineWidth || { value: 3, units: 'Points' },\n\t\t\tstrokeStyleLineDashOffset: stroke.lineDashOffset || { value: 0, units: 'Points' },\n\t\t\tstrokeStyleMiterLimit: stroke.miterLimit ?? 100,\n\t\t\tstrokeStyleLineCapType: strokeStyleLineCapType.encode(stroke.lineCapType),\n\t\t\tstrokeStyleLineJoinType: strokeStyleLineJoinType.encode(stroke.lineJoinType),\n\t\t\tstrokeStyleLineAlignment: strokeStyleLineAlignment.encode(stroke.lineAlignment),\n\t\t\tstrokeStyleScaleLock: !!stroke.scaleLock,\n\t\t\tstrokeStyleStrokeAdjust: !!stroke.strokeAdjust,\n\t\t\tstrokeStyleLineDashSet: stroke.lineDashSet || [],\n\t\t\tstrokeStyleBlendMode: BlnM.encode(stroke.blendMode),\n\t\t\tstrokeStyleOpacity: unitsPercent(stroke.opacity ?? 1),\n\t\t\tstrokeStyleContent: serializeVectorContent(\n\t\t\t\tstroke.content || { type: 'color', color: { r: 0, g: 0, b: 0 } }).descriptor,\n\t\t\tstrokeStyleResolution: stroke.resolution ?? 72,\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'strokeStyle', descriptor);\n\t},\n);\n\ninterface ArtbDescriptor {\n\tartboardRect: { 'Top ': number; Left: number; Btom: number; Rght: number; };\n\tguideIndeces: any[];\n\tartboardPresetName: string;\n\t'Clr ': DescriptorColor;\n\tartboardBackgroundType: number;\n}\n\naddHandler(\n\t'artb', // per-layer arboard info\n\thasKey('artboard'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as ArtbDescriptor;\n\t\ttarget.artboard = {\n\t\t\trect: { top: desc.artboardRect['Top '], left: desc.artboardRect.Left, bottom: desc.artboardRect.Btom, right: desc.artboardRect.Rght },\n\t\t\tguideIndices: desc.guideIndeces,\n\t\t\tpresetName: desc.artboardPresetName,\n\t\t\tcolor: parseColor(desc['Clr ']),\n\t\t\tbackgroundType: desc.artboardBackgroundType,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst artb = target.artboard!;\n\t\tconst desc: ArtbDescriptor = {\n\t\t\tartboardRect: { 'Top ': artb.rect.top, Left: artb.rect.left, Btom: artb.rect.bottom, Rght: artb.rect.right },\n\t\t\tguideIndeces: artb.guideIndices || [],\n\t\t\tartboardPresetName: artb.presetName || '',\n\t\t\t'Clr ': serializeColor(artb.color),\n\t\t\tartboardBackgroundType: artb.backgroundType ?? 1,\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'artboard', desc);\n\t},\n);\n\naddHandler(\n\t'sn2P',\n\thasKey('usingAlignedRendering'),\n\t(reader, target) => target.usingAlignedRendering = !!readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.usingAlignedRendering ? 1 : 0),\n);\n\nconst placedLayerTypes: PlacedLayerType[] = ['unknown', 'vector', 'raster', 'image stack'];\n\nfunction parseWarp(warp: WarpDescriptor): Warp {\n\treturn {\n\t\tstyle: warpStyle.decode(warp.warpStyle),\n\t\tvalue: warp.warpValue || 0,\n\t\tperspective: warp.warpPerspective || 0,\n\t\tperspectiveOther: warp.warpPerspectiveOther || 0,\n\t\trotate: Ornt.decode(warp.warpRotate),\n\t\tbounds: warp.bounds && {\n\t\t\ttop: parseUnitsOrNumber(warp.bounds['Top ']),\n\t\t\tleft: parseUnitsOrNumber(warp.bounds.Left),\n\t\t\tbottom: parseUnitsOrNumber(warp.bounds.Btom),\n\t\t\tright: parseUnitsOrNumber(warp.bounds.Rght),\n\t\t},\n\t\tuOrder: warp.uOrder,\n\t\tvOrder: warp.vOrder,\n\t\tcustomEnvelopeWarp: warp.customEnvelopeWarp && {\n\t\t\tmeshPoints: warp.customEnvelopeWarp.meshPoints.map(pt => ({\n\t\t\t\ttype: pt.type === 'Hrzn' ? 'horizontal' : 'vertical',\n\t\t\t\tvalues: pt.values,\n\t\t\t})),\n\t\t},\n\t};\n}\n\nfunction encodeWarp(warp: Warp): WarpDescriptor {\n\tconst desc: WarpDescriptor = {\n\t\twarpStyle: warpStyle.encode(warp.style),\n\t\twarpValue: warp.value || 0,\n\t\twarpPerspective: warp.perspective || 0,\n\t\twarpPerspectiveOther: warp.perspectiveOther || 0,\n\t\twarpRotate: Ornt.encode(warp.rotate),\n\t\tbounds: {\n\t\t\t'Top ': unitsValue(warp.bounds?.top || { units: 'Pixels', value: 0 }, 'bounds.top'),\n\t\t\tLeft: unitsValue(warp.bounds?.left || { units: 'Pixels', value: 0 }, 'bounds.left'),\n\t\t\tBtom: unitsValue(warp.bounds?.bottom || { units: 'Pixels', value: 0 }, 'bounds.bottom'),\n\t\t\tRght: unitsValue(warp.bounds?.right || { units: 'Pixels', value: 0 }, 'bounds.right'),\n\t\t},\n\t\tuOrder: warp.uOrder || 0,\n\t\tvOrder: warp.vOrder || 0,\n\t};\n\n\tif (warp.customEnvelopeWarp) {\n\t\tdesc.customEnvelopeWarp = {\n\t\t\tmeshPoints: (warp.customEnvelopeWarp.meshPoints || []).map(pt => ({\n\t\t\t\ttype: pt.type === 'horizontal' ? 'Hrzn' : 'Vrtc',\n\t\t\t\tvalues: pt.values,\n\t\t\t})),\n\t\t};\n\t}\n\n\treturn desc;\n}\n\naddHandler(\n\t'PlLd',\n\thasKey('placedLayer'),\n\t(reader, target, left) => {\n\t\tif (readSignature(reader) !== 'plcL') throw new Error(`Invalid PlLd signature`);\n\t\tif (readInt32(reader) !== 3) throw new Error(`Invalid PlLd version`);\n\t\tconst id = readPascalString(reader, 1);\n\t\treadInt32(reader); // pageNumber\n\t\treadInt32(reader); // totalPages, TODO: check how this works ?\n\t\treadInt32(reader); // anitAliasPolicy 16\n\t\tconst placedLayerType = readInt32(reader); // 0 = unknown, 1 = vector, 2 = raster, 3 = image stack\n\t\tif (!placedLayerTypes[placedLayerType]) throw new Error('Invalid PlLd type');\n\t\tconst transform: number[] = [];\n\t\tfor (let i = 0; i < 8; i++) transform.push(readFloat64(reader)); // x, y of 4 corners of the transform\n\t\tconst warpVersion = readInt32(reader);\n\t\tif (warpVersion !== 0) throw new Error(`Invalid Warp version ${warpVersion}`);\n\t\tconst warp: WarpDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.placedLayer = target.placedLayer || { // skip if SoLd already set it\n\t\t\tid,\n\t\t\ttype: placedLayerTypes[placedLayerType],\n\t\t\t// pageNumber,\n\t\t\t// totalPages,\n\t\t\ttransform,\n\t\t\twarp: parseWarp(warp),\n\t\t};\n\n\t\t// console.log('PlLd warp', require('util').inspect(warp, false, 99, true));\n\t\t// console.log('PlLd', require('util').inspect(target.placedLayer, false, 99, true));\n\n\t\tskipBytes(reader, left()); // HACK\n\t},\n\t(writer, target) => {\n\t\tconst placed = target.placedLayer!;\n\t\twriteSignature(writer, 'plcL');\n\t\twriteInt32(writer, 3); // version\n\t\twritePascalString(writer, placed.id, 1);\n\t\twriteInt32(writer, 1); // pageNumber\n\t\twriteInt32(writer, 1); // totalPages\n\t\twriteInt32(writer, 16); // anitAliasPolicy\n\t\tif (placedLayerTypes.indexOf(placed.type) === -1) throw new Error('Invalid placedLayer type');\n\t\twriteInt32(writer, placedLayerTypes.indexOf(placed.type));\n\t\tfor (let i = 0; i < 8; i++) writeFloat64(writer, placed.transform[i]);\n\t\twriteInt32(writer, 0); // warp version\n\t\twriteVersionAndDescriptor(writer, '', 'warp', encodeWarp(placed.warp || {}));\n\t},\n);\n\ninterface SoLdDescriptor {\n\tIdnt: string;\n\tplaced: string;\n\tPgNm: number;\n\ttotalPages: number;\n\tCrop?: number;\n\tframeStep: { numerator: number; denominator: number; };\n\tduration: { numerator: number; denominator: number; };\n\tframeCount: number;\n\tAnnt: number;\n\tType: number;\n\tTrnf: number[];\n\tnonAffineTransform: number[];\n\twarp: WarpDescriptor;\n\t'Sz  ': { Wdth: number; Hght: number; };\n\tRslt: DescriptorUnitsValue;\n\tcomp?: number;\n\tcompInfo?: { compID: number; originalCompID: number; };\n}\n\naddHandler(\n\t'SoLd',\n\thasKey('placedLayer'),\n\t(reader, target, left) => {\n\t\tif (readSignature(reader) !== 'soLD') throw new Error(`Invalid SoLd type`);\n\t\tif (readInt32(reader) !== 4) throw new Error(`Invalid SoLd version`);\n\t\tconst desc: SoLdDescriptor = readVersionAndDescriptor(reader);\n\t\t// console.log('SoLd', require('util').inspect(desc, false, 99, true));\n\t\t// console.log('SoLd.warp', require('util').inspect(desc.warp, false, 99, true));\n\n\t\ttarget.placedLayer = {\n\t\t\tid: desc.Idnt,\n\t\t\tplaced: desc.placed,\n\t\t\ttype: placedLayerTypes[desc.Type],\n\t\t\t// pageNumber: info.PgNm,\n\t\t\t// totalPages: info.totalPages,\n\t\t\t// frameStep: info.frameStep,\n\t\t\t// duration: info.duration,\n\t\t\t// frameCount: info.frameCount,\n\t\t\ttransform: desc.Trnf,\n\t\t\twidth: desc['Sz  '].Wdth,\n\t\t\theight: desc['Sz  '].Hght,\n\t\t\tresolution: parseUnits(desc.Rslt),\n\t\t\twarp: parseWarp(desc.warp),\n\t\t};\n\n\t\tif (desc.Crop) target.placedLayer.crop = desc.Crop;\n\t\tif (desc.comp) target.placedLayer.comp = desc.comp;\n\t\tif (desc.compInfo) target.placedLayer.compInfo = desc.compInfo;\n\n\t\tskipBytes(reader, left()); // HACK\n\t},\n\t(writer, target) => {\n\t\twriteSignature(writer, 'soLD');\n\t\twriteInt32(writer, 4); // version\n\n\t\tconst placed = target.placedLayer!;\n\t\tconst desc: SoLdDescriptor = {\n\t\t\tIdnt: placed.id,\n\t\t\tplaced: placed.placed ?? placed.id, // ???\n\t\t\tPgNm: 1,\n\t\t\ttotalPages: 1,\n\t\t\t...(placed.crop ? { Crop: placed.crop } : {}),\n\t\t\tframeStep: {\n\t\t\t\tnumerator: 0,\n\t\t\t\tdenominator: 600\n\t\t\t},\n\t\t\tduration: {\n\t\t\t\tnumerator: 0,\n\t\t\t\tdenominator: 600\n\t\t\t},\n\t\t\tframeCount: 1,\n\t\t\tAnnt: 16,\n\t\t\tType: placedLayerTypes.indexOf(placed.type),\n\t\t\tTrnf: placed.transform,\n\t\t\tnonAffineTransform: placed.transform,\n\t\t\twarp: encodeWarp(placed.warp || {}),\n\t\t\t'Sz  ': {\n\t\t\t\tWdth: placed.width || 0, // TODO: find size ?\n\t\t\t\tHght: placed.height || 0, // TODO: find size ?\n\t\t\t},\n\t\t\tRslt: placed.resolution ? unitsValue(placed.resolution, 'resolution') : { units: 'Density', value: 72 }\n\t\t};\n\n\t\tif (placed.comp) desc.comp = placed.comp;\n\t\tif (placed.compInfo) desc.compInfo = placed.compInfo;\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'fxrp',\n\thasKey('referencePoint'),\n\t(reader, target) => {\n\t\ttarget.referencePoint = {\n\t\t\tx: readFloat64(reader),\n\t\t\ty: readFloat64(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\twriteFloat64(writer, target.referencePoint!.x);\n\t\twriteFloat64(writer, target.referencePoint!.y);\n\t},\n);\n\nif (MOCK_HANDLERS) {\n\taddHandler(\n\t\t'Patt',\n\t\ttarget => (target as any)._Patt !== undefined,\n\t\t(reader, target, left) => {\n\t\t\t// console.log('additional info: Patt');\n\t\t\t(target as any)._Patt = readBytes(reader, left());\n\t\t},\n\t\t(writer, target) => false && writeBytes(writer, (target as any)._Patt),\n\t);\n} else {\n\taddHandler(\n\t\t'Patt', // TODO: handle also Pat2 & Pat3\n\t\ttarget => !target,\n\t\t(reader, _target, left) => {\n\t\t\tif (!left()) return;\n\n\t\t\tskipBytes(reader, left()); return; // not supported yet\n\n\t\t\t// if (!target.patterns) target.patterns = [];\n\t\t\t// target.patterns.push(readPattern(reader));\n\t\t\t// skipBytes(reader, left());\n\t\t},\n\t\t(_writer, _target) => {\n\t\t},\n\t);\n}\n\ninterface FileOpenDescriptor {\n\tcompInfo: { compID: number; originalCompID: number; };\n}\n\naddHandler(\n\t'lnk2',\n\t(target: any) => !!(target as Psd).linkedFiles && (target as Psd).linkedFiles!.length > 0,\n\t(reader, target, left, _, options) => {\n\t\tconst psd = target as Psd;\n\t\tpsd.linkedFiles = [];\n\n\t\twhile (left() > 8) {\n\t\t\tlet size = readLength64(reader); // size\n\t\t\tconst startOffset = reader.offset;\n\t\t\tconst type = readSignature(reader) as 'liFD' | 'liFE' | 'liFA';\n\t\t\tconst version = readInt32(reader);\n\t\t\tconst id = readPascalString(reader, 1);\n\t\t\tconst name = readUnicodeString(reader);\n\t\t\tconst fileType = readSignature(reader).trim(); // '    ' if empty\n\t\t\tconst fileCreator = readSignature(reader).trim(); // '    ' or '\\0\\0\\0\\0' if empty\n\t\t\tconst dataSize = readLength64(reader);\n\t\t\tconst hasFileOpenDescriptor = readUint8(reader);\n\t\t\tconst fileOpenDescriptor = hasFileOpenDescriptor ? readVersionAndDescriptor(reader) as FileOpenDescriptor : undefined;\n\t\t\tconst linkedFileDescriptor = type === 'liFE' ? readVersionAndDescriptor(reader) : undefined;\n\t\t\tconst file: LinkedFile = { id, name, data: undefined };\n\n\t\t\tif (fileType) file.type = fileType;\n\t\t\tif (fileCreator) file.creator = fileCreator;\n\t\t\tif (fileOpenDescriptor) file.descriptor = fileOpenDescriptor;\n\n\t\t\tif (type === 'liFE' && version > 3) {\n\t\t\t\tconst year = readInt32(reader);\n\t\t\t\tconst month = readUint8(reader);\n\t\t\t\tconst day = readUint8(reader);\n\t\t\t\tconst hour = readUint8(reader);\n\t\t\t\tconst minute = readUint8(reader);\n\t\t\t\tconst seconds = readFloat64(reader);\n\t\t\t\tconst wholeSeconds = Math.floor(seconds);\n\t\t\t\tconst ms = (seconds - wholeSeconds) * 1000;\n\t\t\t\tfile.time = new Date(year, month, day, hour, minute, wholeSeconds, ms);\n\t\t\t}\n\n\t\t\tconst fileSize = type === 'liFE' ? readLength64(reader) : 0;\n\t\t\tif (type === 'liFA') skipBytes(reader, 8);\n\t\t\tif (type === 'liFD') file.data = readBytes(reader, dataSize);\n\t\t\tif (version >= 5) file.childDocumentID = readUnicodeString(reader);\n\t\t\tif (version >= 6) file.assetModTime = readFloat64(reader);\n\t\t\tif (version >= 7) file.assetLockedState = readUint8(reader);\n\t\t\tif (type === 'liFE') file.data = readBytes(reader, fileSize);\n\n\t\t\tif (options.skipLinkedFilesData) file.data = undefined;\n\n\t\t\tpsd.linkedFiles.push(file);\n\t\t\tlinkedFileDescriptor;\n\n\t\t\twhile (size % 4) size++;\n\t\t\treader.offset = startOffset + size;\n\t\t}\n\n\t\tskipBytes(reader, left()); // ?\n\t},\n\t(writer, target) => {\n\t\tconst psd = target as Psd;\n\n\t\tfor (const file of psd.linkedFiles!) {\n\t\t\tlet version = 2;\n\n\t\t\tif (file.assetLockedState != null) version = 7;\n\t\t\telse if (file.assetModTime != null) version = 6;\n\t\t\telse if (file.childDocumentID != null) version = 5;\n\t\t\t// TODO: else if (file.time != null) version = 3; (only for liFE)\n\n\t\t\twriteUint32(writer, 0);\n\t\t\twriteUint32(writer, 0); // size\n\t\t\tconst sizeOffset = writer.offset;\n\t\t\twriteSignature(writer, file.data ? 'liFD' : 'liFA');\n\t\t\twriteInt32(writer, version);\n\t\t\twritePascalString(writer, file.id || '', 1);\n\t\t\twriteUnicodeStringWithPadding(writer, file.name || '');\n\t\t\twriteSignature(writer, file.type ? `${file.type}    `.substr(0, 4) : '    ');\n\t\t\twriteSignature(writer, file.creator ? `${file.creator}    `.substr(0, 4) : '\\0\\0\\0\\0');\n\t\t\twriteLength64(writer, file.data ? file.data.byteLength : 0);\n\n\t\t\tif (file.descriptor && file.descriptor.compInfo) {\n\t\t\t\tconst desc: FileOpenDescriptor = {\n\t\t\t\t\tcompInfo: file.descriptor.compInfo,\n\t\t\t\t};\n\n\t\t\t\twriteUint8(writer, 1);\n\t\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t\t} else {\n\t\t\t\twriteUint8(writer, 0);\n\t\t\t}\n\n\t\t\tif (file.data) writeBytes(writer, file.data);\n\t\t\telse writeLength64(writer, 0);\n\t\t\tif (version >= 5) writeUnicodeStringWithPadding(writer, file.childDocumentID || '');\n\t\t\tif (version >= 6) writeFloat64(writer, file.assetModTime || 0);\n\t\t\tif (version >= 7) writeUint8(writer, file.assetLockedState || 0);\n\n\t\t\tlet size = writer.offset - sizeOffset;\n\t\t\twriter.view.setUint32(sizeOffset - 4, size, false); // write size\n\n\t\t\twhile (size % 4) {\n\t\t\t\tsize++;\n\t\t\t\twriteUint8(writer, 0);\n\t\t\t}\n\t\t}\n\t},\n);\naddHandlerAlias('lnkD', 'lnk2');\naddHandlerAlias('lnk3', 'lnk2');\n\n// this seems to just be zero size block, ignore it\naddHandler(\n\t'lnkE',\n\ttarget => (target as any)._lnkE !== undefined,\n\t(reader, target, left, _psds, options) => {\n\t\tif (options.logMissingFeatures && left()) {\n\t\t\tconsole.log(`Non-empty lnkE layer info (${left()} bytes)`);\n\t\t}\n\n\t\tif (MOCK_HANDLERS) {\n\t\t\t(target as any)._lnkE = readBytes(reader, left());\n\t\t}\n\t},\n\t(writer, target) => MOCK_HANDLERS && writeBytes(writer, (target as any)._lnkE),\n);\n\ninterface ExtensionDesc {\n\tgeneratorSettings: {\n\t\tgenerator_45_assets: { json: string; };\n\t\tlayerTime: number;\n\t};\n}\n\n// extension settings ?, ignore it\naddHandler(\n\t'extn',\n\ttarget => (target as any)._extn !== undefined,\n\t(reader, target) => {\n\t\tconst desc: ExtensionDesc = readVersionAndDescriptor(reader);\n\n\t\tif (MOCK_HANDLERS) {\n\t\t\t(target as any)._ext = desc;\n\t\t}\n\t},\n\t(_writer, _target) => {\n\t\t// TODO: need to add correct types for desc fields (resources/src.psd)\n\t\t// if (MOCK_HANDLERS) writeVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'pths',\n\thasKey('pathList'),\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.pathList = []; // TODO: read paths (find example with non-empty list)\n\n\t\tdescriptor;\n\t\t// console.log('pths', descriptor); // TODO: remove this\n\t},\n\t(writer, _target) => {\n\t\tconst descriptor = {\n\t\t\tpathList: [], // TODO: write paths\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'pathsDataClass', descriptor);\n\t},\n);\n\naddHandler(\n\t'lyvr',\n\thasKey('version'),\n\t(reader, target) => target.version = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.version!),\n);\n\naddHandler(\n\t'lrFX',\n\thasKey('effects'),\n\t(reader, target, left) => {\n\t\tif (!target.effects) {\n\t\t\ttarget.effects = readEffects(reader);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteEffects(writer, target.effects!);\n\t},\n);\n\nfunction adjustmentType(type: string) {\n\treturn (target: LayerAdditionalInfo) => !!target.adjustment && target.adjustment.type === type;\n}\n\naddHandler(\n\t'brit',\n\tadjustmentType('brightness/contrast'),\n\t(reader, target, left) => {\n\t\tif (!target.adjustment) { // ignore if got one from CgEd block\n\t\t\ttarget.adjustment = {\n\t\t\t\ttype: 'brightness/contrast',\n\t\t\t\tbrightness: readInt16(reader),\n\t\t\t\tcontrast: readInt16(reader),\n\t\t\t\tmeanValue: readInt16(reader),\n\t\t\t\tlabColorOnly: !!readUint8(reader),\n\t\t\t\tuseLegacy: true,\n\t\t\t};\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as BrightnessAdjustment;\n\t\twriteInt16(writer, info.brightness || 0);\n\t\twriteInt16(writer, info.contrast || 0);\n\t\twriteInt16(writer, info.meanValue ?? 127);\n\t\twriteUint8(writer, info.labColorOnly ? 1 : 0);\n\t\twriteZeros(writer, 1);\n\t},\n);\n\nfunction readLevelsChannel(reader: PsdReader): LevelsAdjustmentChannel {\n\tconst shadowInput = readInt16(reader);\n\tconst highlightInput = readInt16(reader);\n\tconst shadowOutput = readInt16(reader);\n\tconst highlightOutput = readInt16(reader);\n\tconst midtoneInput = readInt16(reader) / 100;\n\treturn { shadowInput, highlightInput, shadowOutput, highlightOutput, midtoneInput };\n}\n\nfunction writeLevelsChannel(writer: PsdWriter, channel: LevelsAdjustmentChannel) {\n\twriteInt16(writer, channel.shadowInput);\n\twriteInt16(writer, channel.highlightInput);\n\twriteInt16(writer, channel.shadowOutput);\n\twriteInt16(writer, channel.highlightOutput);\n\twriteInt16(writer, Math.round(channel.midtoneInput * 100));\n}\n\naddHandler(\n\t'levl',\n\tadjustmentType('levels'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 2) throw new Error('Invalid levl version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'levels',\n\t\t\trgb: readLevelsChannel(reader),\n\t\t\tred: readLevelsChannel(reader),\n\t\t\tgreen: readLevelsChannel(reader),\n\t\t\tblue: readLevelsChannel(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as LevelsAdjustment;\n\t\tconst defaultChannel = {\n\t\t\tshadowInput: 0,\n\t\t\thighlightInput: 255,\n\t\t\tshadowOutput: 0,\n\t\t\thighlightOutput: 255,\n\t\t\tmidtoneInput: 1,\n\t\t};\n\n\t\twriteUint16(writer, 2); // version\n\t\twriteLevelsChannel(writer, info.rgb || defaultChannel);\n\t\twriteLevelsChannel(writer, info.red || defaultChannel);\n\t\twriteLevelsChannel(writer, info.blue || defaultChannel);\n\t\twriteLevelsChannel(writer, info.green || defaultChannel);\n\t\tfor (let i = 0; i < 59; i++) writeLevelsChannel(writer, defaultChannel);\n\t},\n);\n\nfunction readCurveChannel(reader: PsdReader) {\n\tconst nodes = readUint16(reader);\n\tconst channel: CurvesAdjustmentChannel = [];\n\n\tfor (let j = 0; j < nodes; j++) {\n\t\tconst output = readInt16(reader);\n\t\tconst input = readInt16(reader);\n\t\tchannel.push({ input, output });\n\t}\n\n\treturn channel;\n}\n\nfunction writeCurveChannel(writer: PsdWriter, channel: CurvesAdjustmentChannel) {\n\twriteUint16(writer, channel.length);\n\n\tfor (const n of channel) {\n\t\twriteUint16(writer, n.output);\n\t\twriteUint16(writer, n.input);\n\t}\n}\n\naddHandler(\n\t'curv',\n\tadjustmentType('curves'),\n\t(reader, target, left) => {\n\t\treadUint8(reader);\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid curv version');\n\t\treadUint16(reader);\n\t\tconst channels = readUint16(reader);\n\t\tconst info: CurvesAdjustment = { type: 'curves' };\n\n\t\tif (channels & 1) info.rgb = readCurveChannel(reader);\n\t\tif (channels & 2) info.red = readCurveChannel(reader);\n\t\tif (channels & 4) info.green = readCurveChannel(reader);\n\t\tif (channels & 8) info.blue = readCurveChannel(reader);\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\t...info,\n\t\t};\n\n\t\t// ignoring, duplicate information\n\t\t// checkSignature(reader, 'Crv ');\n\n\t\t// const cVersion = readUint16(reader);\n\t\t// readUint16(reader);\n\t\t// const channelCount = readUint16(reader);\n\n\t\t// for (let i = 0; i < channelCount; i++) {\n\t\t// \tconst index = readUint16(reader);\n\t\t// \tconst nodes = readUint16(reader);\n\n\t\t// \tfor (let j = 0; j < nodes; j++) {\n\t\t// \t\tconst output = readInt16(reader);\n\t\t// \t\tconst input = readInt16(reader);\n\t\t// \t}\n\t\t// }\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as CurvesAdjustment;\n\t\tconst { rgb, red, green, blue } = info;\n\t\tlet channels = 0;\n\t\tlet channelCount = 0;\n\n\t\tif (rgb && rgb.length) { channels |= 1; channelCount++; }\n\t\tif (red && red.length) { channels |= 2; channelCount++; }\n\t\tif (green && green.length) { channels |= 4; channelCount++; }\n\t\tif (blue && blue.length) { channels |= 8; channelCount++; }\n\n\t\twriteUint8(writer, 0);\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, 0);\n\t\twriteUint16(writer, channels);\n\n\t\tif (rgb && rgb.length) writeCurveChannel(writer, rgb);\n\t\tif (red && red.length) writeCurveChannel(writer, red);\n\t\tif (green && green.length) writeCurveChannel(writer, green);\n\t\tif (blue && blue.length) writeCurveChannel(writer, blue);\n\n\t\twriteSignature(writer, 'Crv ');\n\t\twriteUint16(writer, 4); // version\n\t\twriteUint16(writer, 0);\n\t\twriteUint16(writer, channelCount);\n\n\t\tif (rgb && rgb.length) { writeUint16(writer, 0); writeCurveChannel(writer, rgb); }\n\t\tif (red && red.length) { writeUint16(writer, 1); writeCurveChannel(writer, red); }\n\t\tif (green && green.length) { writeUint16(writer, 2); writeCurveChannel(writer, green); }\n\t\tif (blue && blue.length) { writeUint16(writer, 3); writeCurveChannel(writer, blue); }\n\n\t\twriteZeros(writer, 2);\n\t},\n);\n\naddHandler(\n\t'expA',\n\tadjustmentType('exposure'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid expA version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'exposure',\n\t\t\texposure: readFloat32(reader),\n\t\t\toffset: readFloat32(reader),\n\t\t\tgamma: readFloat32(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ExposureAdjustment;\n\t\twriteUint16(writer, 1); // version\n\t\twriteFloat32(writer, info.exposure!);\n\t\twriteFloat32(writer, info.offset!);\n\t\twriteFloat32(writer, info.gamma!);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\ninterface VibranceDescriptor {\n\tvibrance?: number;\n\tStrt?: number;\n}\n\naddHandler(\n\t'vibA',\n\tadjustmentType('vibrance'),\n\t(reader, target, left) => {\n\t\tconst desc: VibranceDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = { type: 'vibrance' };\n\t\tif (desc.vibrance !== undefined) target.adjustment.vibrance = desc.vibrance;\n\t\tif (desc.Strt !== undefined) target.adjustment.saturation = desc.Strt;\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as VibranceAdjustment;\n\t\tconst desc: VibranceDescriptor = {};\n\t\tif (info.vibrance !== undefined) desc.vibrance = info.vibrance;\n\t\tif (info.saturation !== undefined) desc.Strt = info.saturation;\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\nfunction readHueChannel(reader: PsdReader): HueSaturationAdjustmentChannel {\n\treturn {\n\t\ta: readInt16(reader),\n\t\tb: readInt16(reader),\n\t\tc: readInt16(reader),\n\t\td: readInt16(reader),\n\t\thue: readInt16(reader),\n\t\tsaturation: readInt16(reader),\n\t\tlightness: readInt16(reader),\n\t};\n}\n\nfunction writeHueChannel(writer: PsdWriter, channel: HueSaturationAdjustmentChannel | undefined) {\n\tconst c = channel || {} as Partial<HueSaturationAdjustmentChannel>;\n\twriteInt16(writer, c.a || 0);\n\twriteInt16(writer, c.b || 0);\n\twriteInt16(writer, c.c || 0);\n\twriteInt16(writer, c.d || 0);\n\twriteInt16(writer, c.hue || 0);\n\twriteInt16(writer, c.saturation || 0);\n\twriteInt16(writer, c.lightness || 0);\n}\n\naddHandler(\n\t'hue2',\n\tadjustmentType('hue/saturation'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 2) throw new Error('Invalid hue2 version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'hue/saturation',\n\t\t\tmaster: readHueChannel(reader),\n\t\t\treds: readHueChannel(reader),\n\t\t\tyellows: readHueChannel(reader),\n\t\t\tgreens: readHueChannel(reader),\n\t\t\tcyans: readHueChannel(reader),\n\t\t\tblues: readHueChannel(reader),\n\t\t\tmagentas: readHueChannel(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as HueSaturationAdjustment;\n\n\t\twriteUint16(writer, 2); // version\n\t\twriteHueChannel(writer, info.master);\n\t\twriteHueChannel(writer, info.reds);\n\t\twriteHueChannel(writer, info.yellows);\n\t\twriteHueChannel(writer, info.greens);\n\t\twriteHueChannel(writer, info.cyans);\n\t\twriteHueChannel(writer, info.blues);\n\t\twriteHueChannel(writer, info.magentas);\n\t},\n);\n\nfunction readColorBalance(reader: PsdReader): ColorBalanceValues {\n\treturn {\n\t\tcyanRed: readInt16(reader),\n\t\tmagentaGreen: readInt16(reader),\n\t\tyellowBlue: readInt16(reader),\n\t};\n}\n\nfunction writeColorBalance(writer: PsdWriter, value: Partial<ColorBalanceValues>) {\n\twriteInt16(writer, value.cyanRed || 0);\n\twriteInt16(writer, value.magentaGreen || 0);\n\twriteInt16(writer, value.yellowBlue || 0);\n}\n\naddHandler(\n\t'blnc',\n\tadjustmentType('color balance'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'color balance',\n\t\t\tshadows: readColorBalance(reader),\n\t\t\tmidtones: readColorBalance(reader),\n\t\t\thighlights: readColorBalance(reader),\n\t\t\tpreserveLuminosity: !!readUint8(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ColorBalanceAdjustment;\n\t\twriteColorBalance(writer, info.shadows || {});\n\t\twriteColorBalance(writer, info.midtones || {});\n\t\twriteColorBalance(writer, info.highlights || {});\n\t\twriteUint8(writer, info.preserveLuminosity ? 1 : 0);\n\t\twriteZeros(writer, 1);\n\t},\n);\n\ninterface BlackAndWhiteDescriptor {\n\t'Rd  ': number;\n\tYllw: number;\n\t'Grn ': number;\n\t'Cyn ': number;\n\t'Bl  ': number;\n\tMgnt: number;\n\tuseTint: boolean;\n\ttintColor?: DescriptorColor;\n\tbwPresetKind: number;\n\tblackAndWhitePresetFileName: string;\n}\n\naddHandler(\n\t'blwh',\n\tadjustmentType('black & white'),\n\t(reader, target, left) => {\n\t\tconst desc: BlackAndWhiteDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = {\n\t\t\ttype: 'black & white',\n\t\t\treds: desc['Rd  '],\n\t\t\tyellows: desc.Yllw,\n\t\t\tgreens: desc['Grn '],\n\t\t\tcyans: desc['Cyn '],\n\t\t\tblues: desc['Bl  '],\n\t\t\tmagentas: desc.Mgnt,\n\t\t\tuseTint: !!desc.useTint,\n\t\t\tpresetKind: desc.bwPresetKind,\n\t\t\tpresetFileName: desc.blackAndWhitePresetFileName,\n\t\t};\n\n\t\tif (desc.tintColor !== undefined) target.adjustment.tintColor = parseColor(desc.tintColor);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as BlackAndWhiteAdjustment;\n\t\tconst desc: BlackAndWhiteDescriptor = {\n\t\t\t'Rd  ': info.reds || 0,\n\t\t\tYllw: info.yellows || 0,\n\t\t\t'Grn ': info.greens || 0,\n\t\t\t'Cyn ': info.cyans || 0,\n\t\t\t'Bl  ': info.blues || 0,\n\t\t\tMgnt: info.magentas || 0,\n\t\t\tuseTint: !!info.useTint,\n\t\t\ttintColor: serializeColor(info.tintColor),\n\t\t\tbwPresetKind: info.presetKind || 0,\n\t\t\tblackAndWhitePresetFileName: info.presetFileName || '',\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'phfl',\n\tadjustmentType('photo filter'),\n\t(reader, target, left) => {\n\t\tconst version = readUint16(reader);\n\t\tif (version !== 2 && version !== 3) throw new Error('Invalid phfl version');\n\n\t\tlet color: Color;\n\n\t\tif (version === 2) {\n\t\t\tcolor = readColor(reader);\n\t\t} else { // version 3\n\t\t\t// TODO: test this, this is probably wrong\n\t\t\tcolor = {\n\t\t\t\tl: readInt32(reader) / 100,\n\t\t\t\ta: readInt32(reader) / 100,\n\t\t\t\tb: readInt32(reader) / 100,\n\t\t\t};\n\t\t}\n\n\t\ttarget.adjustment = {\n\t\t\ttype: 'photo filter',\n\t\t\tcolor,\n\t\t\tdensity: readUint32(reader) / 100,\n\t\t\tpreserveLuminosity: !!readUint8(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as PhotoFilterAdjustment;\n\t\twriteUint16(writer, 2); // version\n\t\twriteColor(writer, info.color || { l: 0, a: 0, b: 0 });\n\t\twriteUint32(writer, (info.density || 0) * 100);\n\t\twriteUint8(writer, info.preserveLuminosity ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\nfunction readMixrChannel(reader: PsdReader): ChannelMixerChannel {\n\tconst red = readInt16(reader);\n\tconst green = readInt16(reader);\n\tconst blue = readInt16(reader);\n\tskipBytes(reader, 2);\n\tconst constant = readInt16(reader);\n\treturn { red, green, blue, constant };\n}\n\nfunction writeMixrChannel(writer: PsdWriter, channel: ChannelMixerChannel | undefined) {\n\tconst c = channel || {} as Partial<ChannelMixerChannel>;\n\twriteInt16(writer, c.red!);\n\twriteInt16(writer, c.green!);\n\twriteInt16(writer, c.blue!);\n\twriteZeros(writer, 2);\n\twriteInt16(writer, c.constant!);\n}\n\naddHandler(\n\t'mixr',\n\tadjustmentType('channel mixer'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid mixr version');\n\n\t\tconst adjustment: ChannelMixerAdjustment = target.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'channel mixer',\n\t\t\tmonochrome: !!readUint16(reader),\n\t\t};\n\n\t\tif (!adjustment.monochrome) {\n\t\t\tadjustment.red = readMixrChannel(reader);\n\t\t\tadjustment.green = readMixrChannel(reader);\n\t\t\tadjustment.blue = readMixrChannel(reader);\n\t\t}\n\n\t\tadjustment.gray = readMixrChannel(reader);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ChannelMixerAdjustment;\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, info.monochrome ? 1 : 0);\n\n\t\tif (info.monochrome) {\n\t\t\twriteMixrChannel(writer, info.gray);\n\t\t\twriteZeros(writer, 3 * 5 * 2);\n\t\t} else {\n\t\t\twriteMixrChannel(writer, info.red);\n\t\t\twriteMixrChannel(writer, info.green);\n\t\t\twriteMixrChannel(writer, info.blue);\n\t\t\twriteMixrChannel(writer, info.gray);\n\t\t}\n\t},\n);\n\nconst colorLookupType = createEnum<'3dlut' | 'abstractProfile' | 'deviceLinkProfile'>('colorLookupType', '3DLUT', {\n\t'3dlut': '3DLUT',\n\tabstractProfile: 'abstractProfile',\n\tdeviceLinkProfile: 'deviceLinkProfile',\n});\n\nconst LUTFormatType = createEnum<'look' | 'cube' | '3dl'>('LUTFormatType', 'look', {\n\tlook: 'LUTFormatLOOK',\n\tcube: 'LUTFormatCUBE',\n\t'3dl': 'LUTFormat3DL',\n});\n\nconst colorLookupOrder = createEnum<'rgb' | 'bgr'>('colorLookupOrder', 'rgb', {\n\trgb: 'rgbOrder',\n\tbgr: 'bgrOrder',\n});\n\ninterface ColorLookupDescriptor {\n\tlookupType?: string;\n\t'Nm  '?: string;\n\tDthr?: boolean;\n\tprofile?: Uint8Array;\n\tLUTFormat?: string;\n\tdataOrder?: string;\n\ttableOrder?: string;\n\tLUT3DFileData?: Uint8Array;\n\tLUT3DFileName?: string;\n}\n\naddHandler(\n\t'clrL',\n\tadjustmentType('color lookup'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid clrL version');\n\n\t\tconst desc: ColorLookupDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = { type: 'color lookup' };\n\t\tconst info = target.adjustment;\n\n\t\tif (desc.lookupType !== undefined) info.lookupType = colorLookupType.decode(desc.lookupType);\n\t\tif (desc['Nm  '] !== undefined) info.name = desc['Nm  '];\n\t\tif (desc.Dthr !== undefined) info.dither = desc.Dthr;\n\t\tif (desc.profile !== undefined) info.profile = desc.profile;\n\t\tif (desc.LUTFormat !== undefined) info.lutFormat = LUTFormatType.decode(desc.LUTFormat);\n\t\tif (desc.dataOrder !== undefined) info.dataOrder = colorLookupOrder.decode(desc.dataOrder);\n\t\tif (desc.tableOrder !== undefined) info.tableOrder = colorLookupOrder.decode(desc.tableOrder);\n\t\tif (desc.LUT3DFileData !== undefined) info.lut3DFileData = desc.LUT3DFileData;\n\t\tif (desc.LUT3DFileName !== undefined) info.lut3DFileName = desc.LUT3DFileName;\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ColorLookupAdjustment;\n\t\tconst desc: ColorLookupDescriptor = {};\n\n\t\tif (info.lookupType !== undefined) desc.lookupType = colorLookupType.encode(info.lookupType);\n\t\tif (info.name !== undefined) desc['Nm  '] = info.name;\n\t\tif (info.dither !== undefined) desc.Dthr = info.dither;\n\t\tif (info.profile !== undefined) desc.profile = info.profile;\n\t\tif (info.lutFormat !== undefined) desc.LUTFormat = LUTFormatType.encode(info.lutFormat);\n\t\tif (info.dataOrder !== undefined) desc.dataOrder = colorLookupOrder.encode(info.dataOrder);\n\t\tif (info.tableOrder !== undefined) desc.tableOrder = colorLookupOrder.encode(info.tableOrder);\n\t\tif (info.lut3DFileData !== undefined) desc.LUT3DFileData = info.lut3DFileData;\n\t\tif (info.lut3DFileName !== undefined) desc.LUT3DFileName = info.lut3DFileName;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'nvrt',\n\tadjustmentType('invert'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = { type: 'invert' };\n\t\tskipBytes(reader, left());\n\t},\n\t() => {\n\t\t// nothing to write here\n\t},\n);\n\naddHandler(\n\t'post',\n\tadjustmentType('posterize'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'posterize',\n\t\t\tlevels: readUint16(reader),\n\t\t};\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as PosterizeAdjustment;\n\t\twriteUint16(writer, info.levels ?? 4);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\naddHandler(\n\t'thrs',\n\tadjustmentType('threshold'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'threshold',\n\t\t\tlevel: readUint16(reader),\n\t\t};\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ThresholdAdjustment;\n\t\twriteUint16(writer, info.level ?? 128);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\nconst grdmColorModels = ['', '', '', 'rgb', 'hsb', '', 'lab'];\n\naddHandler(\n\t'grdm',\n\tadjustmentType('gradient map'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid grdm version');\n\n\t\tconst info: GradientMapAdjustment = {\n\t\t\ttype: 'gradient map',\n\t\t\tgradientType: 'solid',\n\t\t};\n\n\t\tinfo.reverse = !!readUint8(reader);\n\t\tinfo.dither = !!readUint8(reader);\n\t\tinfo.name = readUnicodeString(reader);\n\t\tinfo.colorStops = [];\n\t\tinfo.opacityStops = [];\n\n\t\tconst stopsCount = readUint16(reader);\n\n\t\tfor (let i = 0; i < stopsCount; i++) {\n\t\t\tinfo.colorStops.push({\n\t\t\t\tlocation: readUint32(reader),\n\t\t\t\tmidpoint: readUint32(reader) / 100,\n\t\t\t\tcolor: readColor(reader),\n\t\t\t});\n\t\t\tskipBytes(reader, 2);\n\t\t}\n\n\t\tconst opacityStopsCount = readUint16(reader);\n\n\t\tfor (let i = 0; i < opacityStopsCount; i++) {\n\t\t\tinfo.opacityStops.push({\n\t\t\t\tlocation: readUint32(reader),\n\t\t\t\tmidpoint: readUint32(reader) / 100,\n\t\t\t\topacity: readUint16(reader) / 0xff,\n\t\t\t});\n\t\t}\n\n\t\tconst expansionCount = readUint16(reader);\n\t\tif (expansionCount !== 2) throw new Error('Invalid grdm expansion count');\n\n\t\tconst interpolation = readUint16(reader);\n\t\tinfo.smoothness = interpolation / 4096;\n\n\t\tconst length = readUint16(reader);\n\t\tif (length !== 32) throw new Error('Invalid grdm length');\n\n\t\tinfo.gradientType = readUint16(reader) ? 'noise' : 'solid';\n\t\tinfo.randomSeed = readUint32(reader);\n\t\tinfo.addTransparency = !!readUint16(reader);\n\t\tinfo.restrictColors = !!readUint16(reader);\n\t\tinfo.roughness = readUint32(reader) / 4096;\n\t\tinfo.colorModel = (grdmColorModels[readUint16(reader)] || 'rgb') as 'rgb' | 'hsb' | 'lab';\n\n\t\tinfo.min = [\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t];\n\n\t\tinfo.max = [\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t];\n\n\t\tskipBytes(reader, left());\n\n\t\tfor (const s of info.colorStops) s.location /= interpolation;\n\t\tfor (const s of info.opacityStops) s.location /= interpolation;\n\n\t\ttarget.adjustment = info;\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as GradientMapAdjustment;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint8(writer, info.reverse ? 1 : 0);\n\t\twriteUint8(writer, info.dither ? 1 : 0);\n\t\twriteUnicodeStringWithPadding(writer, info.name || '');\n\t\twriteUint16(writer, info.colorStops && info.colorStops.length || 0);\n\n\t\tconst interpolation = Math.round((info.smoothness ?? 1) * 4096);\n\n\t\tfor (const s of info.colorStops || []) {\n\t\t\twriteUint32(writer, Math.round(s.location * interpolation));\n\t\t\twriteUint32(writer, Math.round(s.midpoint * 100));\n\t\t\twriteColor(writer, s.color);\n\t\t\twriteZeros(writer, 2);\n\t\t}\n\n\t\twriteUint16(writer, info.opacityStops && info.opacityStops.length || 0);\n\n\t\tfor (const s of info.opacityStops || []) {\n\t\t\twriteUint32(writer, Math.round(s.location * interpolation));\n\t\t\twriteUint32(writer, Math.round(s.midpoint * 100));\n\t\t\twriteUint16(writer, Math.round(s.opacity * 0xff));\n\t\t}\n\n\t\twriteUint16(writer, 2); // expansion count\n\t\twriteUint16(writer, interpolation);\n\t\twriteUint16(writer, 32); // length\n\t\twriteUint16(writer, info.gradientType === 'noise' ? 1 : 0);\n\t\twriteUint32(writer, info.randomSeed || 0);\n\t\twriteUint16(writer, info.addTransparency ? 1 : 0);\n\t\twriteUint16(writer, info.restrictColors ? 1 : 0);\n\t\twriteUint32(writer, Math.round((info.roughness ?? 1) * 4096));\n\t\tconst colorModel = grdmColorModels.indexOf(info.colorModel ?? 'rgb');\n\t\twriteUint16(writer, colorModel === -1 ? 3 : colorModel);\n\n\t\tfor (let i = 0; i < 4; i++)\n\t\t\twriteUint16(writer, Math.round((info.min && info.min[i] || 0) * 0x8000));\n\n\t\tfor (let i = 0; i < 4; i++)\n\t\t\twriteUint16(writer, Math.round((info.max && info.max[i] || 0) * 0x8000));\n\n\t\twriteZeros(writer, 4);\n\t},\n);\n\nfunction readSelectiveColors(reader: PsdReader): CMYK {\n\treturn {\n\t\tc: readInt16(reader),\n\t\tm: readInt16(reader),\n\t\ty: readInt16(reader),\n\t\tk: readInt16(reader),\n\t};\n}\n\nfunction writeSelectiveColors(writer: PsdWriter, cmyk: CMYK | undefined) {\n\tconst c = cmyk || {} as Partial<CMYK>;\n\twriteInt16(writer, c.c!);\n\twriteInt16(writer, c.m!);\n\twriteInt16(writer, c.y!);\n\twriteInt16(writer, c.k!);\n}\n\naddHandler(\n\t'selc',\n\tadjustmentType('selective color'),\n\t(reader, target) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid selc version');\n\n\t\tconst mode = readUint16(reader) ? 'absolute' : 'relative';\n\t\tskipBytes(reader, 8);\n\n\t\ttarget.adjustment = {\n\t\t\ttype: 'selective color',\n\t\t\tmode,\n\t\t\treds: readSelectiveColors(reader),\n\t\t\tyellows: readSelectiveColors(reader),\n\t\t\tgreens: readSelectiveColors(reader),\n\t\t\tcyans: readSelectiveColors(reader),\n\t\t\tblues: readSelectiveColors(reader),\n\t\t\tmagentas: readSelectiveColors(reader),\n\t\t\twhites: readSelectiveColors(reader),\n\t\t\tneutrals: readSelectiveColors(reader),\n\t\t\tblacks: readSelectiveColors(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as SelectiveColorAdjustment;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, info.mode === 'absolute' ? 1 : 0);\n\t\twriteZeros(writer, 8);\n\t\twriteSelectiveColors(writer, info.reds);\n\t\twriteSelectiveColors(writer, info.yellows);\n\t\twriteSelectiveColors(writer, info.greens);\n\t\twriteSelectiveColors(writer, info.cyans);\n\t\twriteSelectiveColors(writer, info.blues);\n\t\twriteSelectiveColors(writer, info.magentas);\n\t\twriteSelectiveColors(writer, info.whites);\n\t\twriteSelectiveColors(writer, info.neutrals);\n\t\twriteSelectiveColors(writer, info.blacks);\n\t},\n);\n\ninterface BrightnessContrastDescriptor {\n\tVrsn: number;\n\tBrgh: number;\n\tCntr: number;\n\tmeans: number;\n\t'Lab ': boolean;\n\tuseLegacy: boolean;\n\tAuto: boolean;\n}\n\ninterface PresetDescriptor {\n\tVrsn: number;\n\tpresetKind: number;\n\tpresetFileName: string;\n}\n\ninterface CurvesPresetDescriptor {\n\tVrsn: number;\n\tcurvesPresetKind: number;\n\tcurvesPresetFileName: string;\n}\n\ninterface MixerPresetDescriptor {\n\tVrsn: number;\n\tmixerPresetKind: number;\n\tmixerPresetFileName: string;\n}\n\naddHandler(\n\t'CgEd',\n\ttarget => {\n\t\tconst a = target.adjustment;\n\n\t\tif (!a) return false;\n\n\t\treturn (a.type === 'brightness/contrast' && !a.useLegacy) ||\n\t\t\t((a.type === 'levels' || a.type === 'curves' || a.type === 'exposure' || a.type === 'channel mixer' ||\n\t\t\t\ta.type === 'hue/saturation') && a.presetFileName !== undefined);\n\t},\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as\n\t\t\tBrightnessContrastDescriptor | PresetDescriptor | CurvesPresetDescriptor | MixerPresetDescriptor;\n\t\tif (desc.Vrsn !== 1) throw new Error('Invalid CgEd version');\n\n\t\t// this section can specify preset file name for other adjustment types\n\t\tif ('presetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as LevelsAdjustment | ExposureAdjustment | HueSaturationAdjustment,\n\t\t\t\tpresetKind: desc.presetKind,\n\t\t\t\tpresetFileName: desc.presetFileName,\n\t\t\t};\n\t\t} else if ('curvesPresetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as CurvesAdjustment,\n\t\t\t\tpresetKind: desc.curvesPresetKind,\n\t\t\t\tpresetFileName: desc.curvesPresetFileName,\n\t\t\t};\n\t\t} else if ('mixerPresetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as CurvesAdjustment,\n\t\t\t\tpresetKind: desc.mixerPresetKind,\n\t\t\t\tpresetFileName: desc.mixerPresetFileName,\n\t\t\t};\n\t\t} else {\n\t\t\ttarget.adjustment = {\n\t\t\t\ttype: 'brightness/contrast',\n\t\t\t\tbrightness: desc.Brgh,\n\t\t\t\tcontrast: desc.Cntr,\n\t\t\t\tmeanValue: desc.means,\n\t\t\t\tuseLegacy: !!desc.useLegacy,\n\t\t\t\tlabColorOnly: !!desc['Lab '],\n\t\t\t\tauto: !!desc.Auto,\n\t\t\t};\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment!;\n\n\t\tif (info.type === 'levels' || info.type === 'exposure' || info.type === 'hue/saturation') {\n\t\t\tconst desc: PresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tpresetKind: info.presetKind ?? 1,\n\t\t\t\tpresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'curves') {\n\t\t\tconst desc: CurvesPresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tcurvesPresetKind: info.presetKind ?? 1,\n\t\t\t\tcurvesPresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'channel mixer') {\n\t\t\tconst desc: MixerPresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tmixerPresetKind: info.presetKind ?? 1,\n\t\t\t\tmixerPresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'brightness/contrast') {\n\t\t\tconst desc: BrightnessContrastDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tBrgh: info.brightness || 0,\n\t\t\t\tCntr: info.contrast || 0,\n\t\t\t\tmeans: info.meanValue ?? 127,\n\t\t\t\t'Lab ': !!info.labColorOnly,\n\t\t\t\tuseLegacy: !!info.useLegacy,\n\t\t\t\tAuto: !!info.auto,\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else {\n\t\t\tthrow new Error('Unhandled CgEd case');\n\t\t}\n\t},\n);\n\naddHandler(\n\t'Txt2',\n\thasKey('engineData'),\n\t(reader, target, left) => {\n\t\tconst data = readBytes(reader, left());\n\t\ttarget.engineData = fromByteArray(data);\n\t\t// const engineData = parseEngineData(data);\n\t\t// console.log(require('util').inspect(engineData, false, 99, true));\n\t\t// require('fs').writeFileSync('resources/engineData2Simple.txt', require('util').inspect(engineData, false, 99, false), 'utf8');\n\t\t// require('fs').writeFileSync('test_data.json', JSON.stringify(ed, null, 2), 'utf8');\n\t},\n\t(writer, target) => {\n\t\tconst buffer = toByteArray(target.engineData!);\n\t\twriteBytes(writer, buffer);\n\t},\n);\n\naddHandler(\n\t'FMsk',\n\thasKey('filterMask'),\n\t(reader, target) => {\n\t\ttarget.filterMask = {\n\t\t\tcolorSpace: readColor(reader),\n\t\t\topacity: readUint16(reader) / 0xff,\n\t\t};\n\t},\n\t(writer, target) => {\n\t\twriteColor(writer, target.filterMask!.colorSpace);\n\t\twriteUint16(writer, clamp(target.filterMask!.opacity ?? 1, 0, 1) * 0xff);\n\t},\n);\n\ninterface ArtdDescriptor {\n\t'Cnt ': number;\n\tautoExpandOffset: { Hrzn: number; Vrtc: number; };\n\torigin: { Hrzn: number; Vrtc: number; };\n\tautoExpandEnabled: boolean;\n\tautoNestEnabled: boolean;\n\tautoPositionEnabled: boolean;\n\tshrinkwrapOnSaveEnabled: boolean;\n\tdocDefaultNewArtboardBackgroundColor: DescriptorColor;\n\tdocDefaultNewArtboardBackgroundType: number;\n}\n\naddHandler(\n\t'artd', // document-wide artboard info\n\ttarget => (target as Psd).artboards !== undefined,\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as ArtdDescriptor;\n\t\t(target as Psd).artboards = {\n\t\t\tcount: desc['Cnt '],\n\t\t\tautoExpandOffset: { horizontal: desc.autoExpandOffset.Hrzn, vertical: desc.autoExpandOffset.Vrtc },\n\t\t\torigin: { horizontal: desc.origin.Hrzn, vertical: desc.origin.Vrtc },\n\t\t\tautoExpandEnabled: desc.autoExpandEnabled,\n\t\t\tautoNestEnabled: desc.autoNestEnabled,\n\t\t\tautoPositionEnabled: desc.autoPositionEnabled,\n\t\t\tshrinkwrapOnSaveEnabled: desc.shrinkwrapOnSaveEnabled,\n\t\t\tdocDefaultNewArtboardBackgroundColor: parseColor(desc.docDefaultNewArtboardBackgroundColor),\n\t\t\tdocDefaultNewArtboardBackgroundType: desc.docDefaultNewArtboardBackgroundType,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst artb = (target as Psd).artboards!;\n\t\tconst desc: ArtdDescriptor = {\n\t\t\t'Cnt ': artb.count,\n\t\t\tautoExpandOffset: artb.autoExpandOffset ? { Hrzn: artb.autoExpandOffset.horizontal, Vrtc: artb.autoExpandOffset.vertical } : { Hrzn: 0, Vrtc: 0 },\n\t\t\torigin: artb.origin ? { Hrzn: artb.origin.horizontal, Vrtc: artb.origin.vertical } : { Hrzn: 0, Vrtc: 0 },\n\t\t\tautoExpandEnabled: artb.autoExpandEnabled ?? true,\n\t\t\tautoNestEnabled: artb.autoNestEnabled ?? true,\n\t\t\tautoPositionEnabled: artb.autoPositionEnabled ?? true,\n\t\t\tshrinkwrapOnSaveEnabled: artb.shrinkwrapOnSaveEnabled ?? true,\n\t\t\tdocDefaultNewArtboardBackgroundColor: serializeColor(artb.docDefaultNewArtboardBackgroundColor),\n\t\t\tdocDefaultNewArtboardBackgroundType: artb.docDefaultNewArtboardBackgroundType ?? 1,\n\t\t};\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc, 'artd');\n\t},\n);\n\naddHandler(\n\t'lfx2',\n\thasKey('effects'),\n\t(reader, target, left, _, options) => {\n\t\tconst log = !!options.logMissingFeatures;\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 0) throw new Error(`Invalid lfx2 version`);\n\n\t\tconst info = readVersionAndDescriptor(reader);\n\n\t\ttarget.effects = {}; // discard if read in 'lrFX' section\n\t\tconst effects = target.effects;\n\n\t\tif (!info.masterFXSwitch) effects.disabled = true;\n\t\tif (info['Scl ']) effects.scale = parsePercent(info['Scl ']);\n\t\tif (info.DrSh) effects.dropShadow = parseEffectObject(info.DrSh, log);\n\t\tif (info.IrSh) effects.innerShadow = parseEffectObject(info.IrSh, log);\n\t\tif (info.OrGl) effects.outerGlow = parseEffectObject(info.OrGl, log);\n\t\tif (info.IrGl) effects.innerGlow = parseEffectObject(info.IrGl, log);\n\t\tif (info.ebbl) effects.bevel = parseEffectObject(info.ebbl, log);\n\t\tif (info.SoFi) effects.solidFill = parseEffectObject(info.SoFi, log);\n\t\tif (info.patternFill) effects.patternOverlay = parseEffectObject(info.patternFill, log);\n\t\tif (info.GrFl) effects.gradientOverlay = parseEffectObject(info.GrFl, log);\n\t\tif (info.ChFX) effects.satin = parseEffectObject(info.ChFX, log);\n\t\tif (info.FrFX) {\n\t\t\teffects.stroke = {\n\t\t\t\tenabled: !!info.FrFX.enab,\n\t\t\t\tposition: FStl.decode(info.FrFX.Styl),\n\t\t\t\tfillType: FrFl.decode(info.FrFX.PntT),\n\t\t\t\tblendMode: BlnM.decode(info.FrFX['Md  ']),\n\t\t\t\topacity: parsePercent(info.FrFX.Opct),\n\t\t\t\tsize: parseUnits(info.FrFX['Sz  ']),\n\t\t\t};\n\n\t\t\tif (info.FrFX['Clr ']) effects.stroke.color = parseColor(info.FrFX['Clr ']);\n\t\t\tif (info.FrFX.Grad) effects.stroke.gradient = parseGradientContent(info.FrFX);\n\t\t\tif (info.FrFX.Ptrn) effects.stroke.pattern = parsePatternContent(info.FrFX);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, _, options) => {\n\t\tconst log = !!options.logMissingFeatures;\n\t\tconst effects = target.effects!;\n\t\tconst info: any = {\n\t\t\tmasterFXSwitch: !effects.disabled,\n\t\t\t'Scl ': unitsPercent(effects.scale ?? 1),\n\t\t};\n\n\t\tif (effects.dropShadow) info.DrSh = serializeEffectObject(effects.dropShadow, 'dropShadow', log);\n\t\tif (effects.innerShadow) info.IrSh = serializeEffectObject(effects.innerShadow, 'innerShadow', log);\n\t\tif (effects.outerGlow) info.OrGl = serializeEffectObject(effects.outerGlow, 'outerGlow', log);\n\t\tif (effects.innerGlow) info.IrGl = serializeEffectObject(effects.innerGlow, 'innerGlow', log);\n\t\tif (effects.bevel) info.ebbl = serializeEffectObject(effects.bevel, 'bevel', log);\n\t\tif (effects.solidFill) info.SoFi = serializeEffectObject(effects.solidFill, 'solidFill', log);\n\t\tif (effects.patternOverlay) info.patternFill = serializeEffectObject(effects.patternOverlay, 'patternOverlay', log);\n\t\tif (effects.gradientOverlay) info.GrFl = serializeEffectObject(effects.gradientOverlay, 'gradientOverlay', log);\n\t\tif (effects.satin) info.ChFX = serializeEffectObject(effects.satin, 'satin', log);\n\n\t\tconst stroke = effects.stroke;\n\n\t\tif (stroke) {\n\t\t\tinfo.FrFX = {\n\t\t\t\tenab: !!stroke.enabled,\n\t\t\t\tStyl: FStl.encode(stroke.position),\n\t\t\t\tPntT: FrFl.encode(stroke.fillType),\n\t\t\t\t'Md  ': BlnM.encode(stroke.blendMode),\n\t\t\t\tOpct: unitsPercent(stroke.opacity),\n\t\t\t\t'Sz  ': unitsValue(stroke.size, 'size'),\n\t\t\t};\n\n\t\t\tif (stroke.color)\n\t\t\t\tinfo.FrFX['Clr '] = serializeColor(stroke.color);\n\t\t\tif (stroke.gradient)\n\t\t\t\tinfo.FrFX = { ...info.FrFX, ...serializeGradientContent(stroke.gradient) };\n\t\t\tif (stroke.pattern)\n\t\t\t\tinfo.FrFX = { ...info.FrFX, ...serializePatternContent(stroke.pattern) };\n\t\t}\n\n\t\twriteUint32(writer, 0); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', info);\n\t},\n);\n\nfunction readLength64(reader: PsdReader) {\n\tif (readUint32(reader)) throw new Error(`Resource size above 4 GB limit at ${reader.offset.toString(16)}`);\n\treturn readUint32(reader);\n}\n\nfunction writeLength64(writer: PsdWriter, length: number) {\n\twriteUint32(writer, 0);\n\twriteUint32(writer, length);\n}\n\n// addHandler(\n// \t'lmfx',\n// \ttarget => !target,\n// \t(reader, _target) => {\n// \t\tconst version = readUint32(reader);\n// \t\tif (version !== 0) throw new Error('Invalid lmfx version');\n\n// \t\tconst descriptor = readVersionAndDescriptor(reader);\n// \t\tconsole.log(require('util').inspect(descriptor, false, 99, true));\n// \t},\n// \t(_writer, _target) => {\n// \t},\n// );\n\ninterface CinfDescriptor {\n\tVrsn: { major: number; minor: number; fix: number; };\n\tpsVersion?: { major: number; minor: number; fix: number; };\n\tdescription: string;\n\treason: string;\n\tEngn: string; // 'Engn.compCore';\n\tenableCompCore: string; // 'enable.feature';\n\tenableCompCoreGPU: string; // 'enable.feature';\n\tcompCoreSupport: string; // 'reason.supported';\n\tcompCoreGPUSupport: string; // 'reason.featureDisabled';\n}\n\naddHandler(\n\t'cinf',\n\thasKey('compositorUsed'),\n\t(reader, target) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as CinfDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\t\ttarget.compositorUsed = {\n\t\t\tdescription: desc.description,\n\t\t\treason: desc.reason,\n\t\t\tengine: desc.Engn.split('.')[1],\n\t\t\tenableCompCore: desc.enableCompCore.split('.')[1],\n\t\t\tenableCompCoreGPU: desc.enableCompCoreGPU.split('.')[1],\n\t\t\tcompCoreSupport: desc.compCoreSupport.split('.')[1],\n\t\t\tcompCoreGPUSupport: desc.compCoreGPUSupport.split('.')[1],\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst cinf = target.compositorUsed!;\n\t\tconst desc: CinfDescriptor = {\n\t\t\tVrsn: { major: 1, minor: 0, fix: 0 },\n\t\t\t// psVersion: { major: 22, minor: 1, fix: 0 }, // TESTING\n\t\t\tdescription: cinf.description,\n\t\t\treason: cinf.reason,\n\t\t\tEngn: `Engn.${cinf.engine}`,\n\t\t\tenableCompCore: `enable.${cinf.enableCompCore}`,\n\t\t\tenableCompCoreGPU: `enable.${cinf.enableCompCoreGPU}`,\n\t\t\tcompCoreSupport: `reason.${cinf.compCoreSupport}`,\n\t\t\tcompCoreGPUSupport: `reason.${cinf.compCoreGPUSupport}`,\n\t\t};\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\n// descriptor helpers\n\nfunction parseGradient(grad: DesciptorGradient): EffectSolidGradient | EffectNoiseGradient {\n\tif (grad.GrdF === 'GrdF.CstS') {\n\t\tconst samples: number = grad.Intr || 4096;\n\n\t\treturn {\n\t\t\ttype: 'solid',\n\t\t\tname: grad['Nm  '],\n\t\t\tsmoothness: grad.Intr / 4096,\n\t\t\tcolorStops: grad.Clrs.map(s => ({\n\t\t\t\tcolor: parseColor(s['Clr ']),\n\t\t\t\tlocation: s.Lctn / samples,\n\t\t\t\tmidpoint: s.Mdpn / 100,\n\t\t\t})),\n\t\t\topacityStops: grad.Trns.map(s => ({\n\t\t\t\topacity: parsePercent(s.Opct),\n\t\t\t\tlocation: s.Lctn / samples,\n\t\t\t\tmidpoint: s.Mdpn / 100,\n\t\t\t})),\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\ttype: 'noise',\n\t\t\tname: grad['Nm  '],\n\t\t\troughness: grad.Smth / 4096,\n\t\t\tcolorModel: ClrS.decode(grad.ClrS),\n\t\t\trandomSeed: grad.RndS,\n\t\t\trestrictColors: !!grad.VctC,\n\t\t\taddTransparency: !!grad.ShTr,\n\t\t\tmin: grad['Mnm '].map(x => x / 100),\n\t\t\tmax: grad['Mxm '].map(x => x / 100),\n\t\t};\n\t}\n}\n\nfunction serializeGradient(grad: EffectSolidGradient | EffectNoiseGradient): DesciptorGradient {\n\tif (grad.type === 'solid') {\n\t\tconst samples = Math.round((grad.smoothness ?? 1) * 4096);\n\n\t\treturn {\n\t\t\t'Nm  ': grad.name,\n\t\t\tGrdF: 'GrdF.CstS',\n\t\t\tIntr: samples,\n\t\t\tClrs: grad.colorStops.map(s => ({\n\t\t\t\t'Clr ': serializeColor(s.color),\n\t\t\t\tType: 'Clry.UsrS',\n\t\t\t\tLctn: Math.round(s.location * samples),\n\t\t\t\tMdpn: Math.round((s.midpoint ?? 0.5) * 100),\n\t\t\t})),\n\t\t\tTrns: grad.opacityStops.map(s => ({\n\t\t\t\tOpct: unitsPercent(s.opacity),\n\t\t\t\tLctn: Math.round(s.location * samples),\n\t\t\t\tMdpn: Math.round((s.midpoint ?? 0.5) * 100),\n\t\t\t})),\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tGrdF: 'GrdF.ClNs',\n\t\t\t'Nm  ': grad.name,\n\t\t\tShTr: !!grad.addTransparency,\n\t\t\tVctC: !!grad.restrictColors,\n\t\t\tClrS: ClrS.encode(grad.colorModel),\n\t\t\tRndS: grad.randomSeed || 0,\n\t\t\tSmth: Math.round((grad.roughness ?? 1) * 4096),\n\t\t\t'Mnm ': (grad.min || [0, 0, 0, 0]).map(x => x * 100),\n\t\t\t'Mxm ': (grad.max || [1, 1, 1, 1]).map(x => x * 100),\n\t\t};\n\t}\n}\n\nfunction parseGradientContent(descriptor: DescriptorGradientContent) {\n\tconst result = parseGradient(descriptor.Grad) as (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo;\n\tresult.style = GrdT.decode(descriptor.Type);\n\tif (descriptor.Dthr !== undefined) result.dither = descriptor.Dthr;\n\tif (descriptor.Rvrs !== undefined) result.reverse = descriptor.Rvrs;\n\tif (descriptor.Angl !== undefined) result.angle = parseAngle(descriptor.Angl);\n\tif (descriptor['Scl '] !== undefined) result.scale = parsePercent(descriptor['Scl ']);\n\tif (descriptor.Algn !== undefined) result.align = descriptor.Algn;\n\tif (descriptor.Ofst !== undefined) {\n\t\tresult.offset = {\n\t\t\tx: parsePercent(descriptor.Ofst.Hrzn),\n\t\t\ty: parsePercent(descriptor.Ofst.Vrtc)\n\t\t};\n\t}\n\treturn result;\n}\n\nfunction parsePatternContent(descriptor: DescriptorPatternContent) {\n\tconst result: EffectPattern & ExtraPatternInfo = {\n\t\tname: descriptor.Ptrn['Nm  '],\n\t\tid: descriptor.Ptrn.Idnt,\n\t};\n\tif (descriptor.Lnkd !== undefined) result.linked = descriptor.Lnkd;\n\tif (descriptor.phase !== undefined) result.phase = { x: descriptor.phase.Hrzn, y: descriptor.phase.Vrtc };\n\treturn result;\n}\n\nfunction parseVectorContent(descriptor: DescriptorVectorContent): VectorContent {\n\tif ('Grad' in descriptor) {\n\t\treturn parseGradientContent(descriptor);\n\t} else if ('Ptrn' in descriptor) {\n\t\treturn { type: 'pattern', ...parsePatternContent(descriptor) };\n\t} else if ('Clr ' in descriptor) {\n\t\treturn { type: 'color', color: parseColor(descriptor['Clr ']) };\n\t} else {\n\t\tthrow new Error('Invalid vector content');\n\t}\n}\n\nfunction serializeGradientContent(content: (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo) {\n\tconst result: DescriptorGradientContent = {} as any;\n\tif (content.dither !== undefined) result.Dthr = content.dither;\n\tif (content.reverse !== undefined) result.Rvrs = content.reverse;\n\tif (content.angle !== undefined) result.Angl = unitsAngle(content.angle);\n\tresult.Type = GrdT.encode(content.style);\n\tif (content.align !== undefined) result.Algn = content.align;\n\tif (content.scale !== undefined) result['Scl '] = unitsPercent(content.scale);\n\tif (content.offset) {\n\t\tresult.Ofst = {\n\t\t\tHrzn: unitsPercent(content.offset.x),\n\t\t\tVrtc: unitsPercent(content.offset.y),\n\t\t};\n\t}\n\tresult.Grad = serializeGradient(content);\n\treturn result;\n}\n\nfunction serializePatternContent(content: EffectPattern & ExtraPatternInfo) {\n\tconst result: DescriptorPatternContent = {\n\t\tPtrn: {\n\t\t\t'Nm  ': content.name || '',\n\t\t\tIdnt: content.id || '',\n\t\t}\n\t};\n\tif (content.linked !== undefined) result.Lnkd = !!content.linked;\n\tif (content.phase !== undefined) result.phase = { Hrzn: content.phase.x, Vrtc: content.phase.y };\n\treturn result;\n}\n\nfunction serializeVectorContent(content: VectorContent): { descriptor: DescriptorVectorContent; key: string; } {\n\tif (content.type === 'color') {\n\t\treturn { key: 'SoCo', descriptor: { 'Clr ': serializeColor(content.color) } };\n\t} else if (content.type === 'pattern') {\n\t\treturn { key: 'PtFl', descriptor: serializePatternContent(content) };\n\t} else {\n\t\treturn { key: 'GdFl', descriptor: serializeGradientContent(content) };\n\t}\n}\n\nfunction parseColor(color: DescriptorColor): Color {\n\tif ('H   ' in color) {\n\t\treturn { h: parsePercentOrAngle(color['H   ']), s: color.Strt, b: color.Brgh };\n\t} else if ('Rd  ' in color) {\n\t\treturn { r: color['Rd  '], g: color['Grn '], b: color['Bl  '] };\n\t} else if ('Cyn ' in color) {\n\t\treturn { c: color['Cyn '], m: color.Mgnt, y: color['Ylw '], k: color.Blck };\n\t} else if ('Gry ' in color) {\n\t\treturn { k: color['Gry '] };\n\t} else if ('Lmnc' in color) {\n\t\treturn { l: color.Lmnc, a: color['A   '], b: color['B   '] };\n\t} else {\n\t\tthrow new Error('Unsupported color descriptor');\n\t}\n}\n\nfunction serializeColor(color: Color | undefined): DescriptorColor {\n\tif (!color) {\n\t\treturn { 'Rd  ': 0, 'Grn ': 0, 'Bl  ': 0 };\n\t} else if ('r' in color) {\n\t\treturn { 'Rd  ': color.r || 0, 'Grn ': color.g || 0, 'Bl  ': color.b || 0 };\n\t} else if ('h' in color) {\n\t\treturn { 'H   ': unitsAngle(color.h * 360), Strt: color.s || 0, Brgh: color.b || 0 };\n\t} else if ('c' in color) {\n\t\treturn { 'Cyn ': color.c || 0, Mgnt: color.m || 0, 'Ylw ': color.y || 0, Blck: color.k || 0 };\n\t} else if ('l' in color) {\n\t\treturn { Lmnc: color.l || 0, 'A   ': color.a || 0, 'B   ': color.b || 0 };\n\t} else if ('k' in color) {\n\t\treturn { 'Gry ': color.k };\n\t} else {\n\t\tthrow new Error('Invalid color value');\n\t}\n}\n\ntype AllEffects = LayerEffectShadow & LayerEffectsOuterGlow & LayerEffectStroke &\n\tLayerEffectInnerGlow & LayerEffectBevel & LayerEffectSolidFill &\n\tLayerEffectPatternOverlay & LayerEffectSatin & LayerEffectGradientOverlay;\n\nfunction parseEffectObject(obj: any, reportErrors: boolean) {\n\tconst result: AllEffects = {} as any;\n\n\tfor (const key of Object.keys(obj)) {\n\t\tconst val = obj[key];\n\n\t\tswitch (key) {\n\t\t\tcase 'enab': result.enabled = !!val; break;\n\t\t\tcase 'uglg': result.useGlobalLight = !!val; break;\n\t\t\tcase 'AntA': result.antialiased = !!val; break;\n\t\t\tcase 'Algn': result.align = !!val; break;\n\t\t\tcase 'Dthr': result.dither = !!val; break;\n\t\t\tcase 'Invr': result.invert = !!val; break;\n\t\t\tcase 'Rvrs': result.reverse = !!val; break;\n\t\t\tcase 'Clr ': result.color = parseColor(val); break;\n\t\t\tcase 'hglC': result.highlightColor = parseColor(val); break;\n\t\t\tcase 'sdwC': result.shadowColor = parseColor(val); break;\n\t\t\tcase 'Styl': result.position = FStl.decode(val); break;\n\t\t\tcase 'Md  ': result.blendMode = BlnM.decode(val); break;\n\t\t\tcase 'hglM': result.highlightBlendMode = BlnM.decode(val); break;\n\t\t\tcase 'sdwM': result.shadowBlendMode = BlnM.decode(val); break;\n\t\t\tcase 'bvlS': result.style = BESl.decode(val); break;\n\t\t\tcase 'bvlD': result.direction = BESs.decode(val); break;\n\t\t\tcase 'bvlT': result.technique = bvlT.decode(val) as any; break;\n\t\t\tcase 'GlwT': result.technique = BETE.decode(val) as any; break;\n\t\t\tcase 'glwS': result.source = IGSr.decode(val); break;\n\t\t\tcase 'Type': result.type = GrdT.decode(val); break;\n\t\t\tcase 'Opct': result.opacity = parsePercent(val); break;\n\t\t\tcase 'hglO': result.highlightOpacity = parsePercent(val); break;\n\t\t\tcase 'sdwO': result.shadowOpacity = parsePercent(val); break;\n\t\t\tcase 'lagl': result.angle = parseAngle(val); break;\n\t\t\tcase 'Angl': result.angle = parseAngle(val); break;\n\t\t\tcase 'Lald': result.altitude = parseAngle(val); break;\n\t\t\tcase 'Sftn': result.soften = parseUnits(val); break;\n\t\t\tcase 'srgR': result.strength = parsePercent(val); break;\n\t\t\tcase 'blur': result.size = parseUnits(val); break;\n\t\t\tcase 'Nose': result.noise = parsePercent(val); break;\n\t\t\tcase 'Inpr': result.range = parsePercent(val); break;\n\t\t\tcase 'Ckmt': result.choke = parseUnits(val); break;\n\t\t\tcase 'ShdN': result.jitter = parsePercent(val); break;\n\t\t\tcase 'Dstn': result.distance = parseUnits(val); break;\n\t\t\tcase 'Scl ': result.scale = parsePercent(val); break;\n\t\t\tcase 'Ptrn': result.pattern = { name: val['Nm  '], id: val.Idnt }; break;\n\t\t\tcase 'phase': result.phase = { x: val.Hrzn, y: val.Vrtc }; break;\n\t\t\tcase 'Ofst': result.offset = { x: parsePercent(val.Hrzn), y: parsePercent(val.Vrtc) }; break;\n\t\t\tcase 'MpgS':\n\t\t\tcase 'TrnS':\n\t\t\t\tresult.contour = {\n\t\t\t\t\tname: val['Nm  '],\n\t\t\t\t\tcurve: (val['Crv '] as any[]).map(p => ({ x: p.Hrzn, y: p.Vrtc })),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'Grad': result.gradient = parseGradient(val); break;\n\t\t\tcase 'useTexture':\n\t\t\tcase 'useShape':\n\t\t\tcase 'layerConceals':\n\t\t\tcase 'present':\n\t\t\tcase 'showInDialog':\n\t\t\tcase 'antialiasGloss': result[key] = val; break;\n\t\t\tdefault:\n\t\t\t\treportErrors && console.log(`Invalid effect key: '${key}':`, val);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction serializeEffectObject(obj: any, objName: string, reportErrors: boolean) {\n\tconst result: any = {};\n\n\tfor (const objKey of Object.keys(obj)) {\n\t\tconst key: keyof AllEffects = objKey as any;\n\t\tconst val = obj[key];\n\n\t\tswitch (key) {\n\t\t\tcase 'enabled': result.enab = !!val; break;\n\t\t\tcase 'useGlobalLight': result.uglg = !!val; break;\n\t\t\tcase 'antialiased': result.AntA = !!val; break;\n\t\t\tcase 'align': result.Algn = !!val; break;\n\t\t\tcase 'dither': result.Dthr = !!val; break;\n\t\t\tcase 'invert': result.Invr = !!val; break;\n\t\t\tcase 'reverse': result.Rvrs = !!val; break;\n\t\t\tcase 'color': result['Clr '] = serializeColor(val); break;\n\t\t\tcase 'highlightColor': result.hglC = serializeColor(val); break;\n\t\t\tcase 'shadowColor': result.sdwC = serializeColor(val); break;\n\t\t\tcase 'position': result.Styl = FStl.encode(val); break;\n\t\t\tcase 'blendMode': result['Md  '] = BlnM.encode(val); break;\n\t\t\tcase 'highlightBlendMode': result.hglM = BlnM.encode(val); break;\n\t\t\tcase 'shadowBlendMode': result.sdwM = BlnM.encode(val); break;\n\t\t\tcase 'style': result.bvlS = BESl.encode(val); break;\n\t\t\tcase 'direction': result.bvlD = BESs.encode(val); break;\n\t\t\tcase 'technique':\n\t\t\t\tif (objName === 'bevel') {\n\t\t\t\t\tresult.bvlT = bvlT.encode(val);\n\t\t\t\t} else {\n\t\t\t\t\tresult.GlwT = BETE.encode(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'source': result.glwS = IGSr.encode(val); break;\n\t\t\tcase 'type': result.Type = GrdT.encode(val); break;\n\t\t\tcase 'opacity': result.Opct = unitsPercent(val); break;\n\t\t\tcase 'highlightOpacity': result.hglO = unitsPercent(val); break;\n\t\t\tcase 'shadowOpacity': result.sdwO = unitsPercent(val); break;\n\t\t\tcase 'angle':\n\t\t\t\tif (objName === 'gradientOverlay') {\n\t\t\t\t\tresult.Angl = unitsAngle(val);\n\t\t\t\t} else {\n\t\t\t\t\tresult.lagl = unitsAngle(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'altitude': result.Lald = unitsAngle(val); break;\n\t\t\tcase 'soften': result.Sftn = unitsValue(val, key); break;\n\t\t\tcase 'strength': result.srgR = unitsPercent(val); break;\n\t\t\tcase 'size': result.blur = unitsValue(val, key); break;\n\t\t\tcase 'noise': result.Nose = unitsPercent(val); break;\n\t\t\tcase 'range': result.Inpr = unitsPercent(val); break;\n\t\t\tcase 'choke': result.Ckmt = unitsValue(val, key); break;\n\t\t\tcase 'jitter': result.ShdN = unitsPercent(val); break;\n\t\t\tcase 'distance': result.Dstn = unitsValue(val, key); break;\n\t\t\tcase 'scale': result['Scl '] = unitsPercent(val); break;\n\t\t\tcase 'pattern': result.Ptrn = { 'Nm  ': val.name, Idnt: val.id }; break;\n\t\t\tcase 'phase': result.phase = { Hrzn: val.x, Vrtc: val.y }; break;\n\t\t\tcase 'offset': result.Ofst = { Hrzn: unitsPercent(val.x), Vrtc: unitsPercent(val.y) }; break;\n\t\t\tcase 'contour': {\n\t\t\t\tresult[objName === 'satin' ? 'MpgS' : 'TrnS'] = {\n\t\t\t\t\t'Nm  ': (val as EffectContour).name,\n\t\t\t\t\t'Crv ': (val as EffectContour).curve.map(p => ({ Hrzn: p.x, Vrtc: p.y })),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'gradient': result.Grad = serializeGradient(val); break;\n\t\t\tcase 'useTexture':\n\t\t\tcase 'useShape':\n\t\t\tcase 'layerConceals':\n\t\t\tcase 'present':\n\t\t\tcase 'showInDialog':\n\t\t\tcase 'antialiasGloss':\n\t\t\t\tresult[key] = val;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treportErrors && console.log(`Invalid effect key: '${key}' value:`, val);\n\t\t}\n\t}\n\n\treturn result;\n}\n","import { LayerEffectsInfo, BevelStyle, LayerEffectShadow } from './psd';\nimport { toBlendMode, fromBlendMode } from './helpers';\nimport {\n\tPsdReader, checkSignature, readSignature, skipBytes, readUint16, readUint8,\n\treadUint32, readFixedPoint32, readColor\n} from './psdReader';\nimport {\n\tPsdWriter, writeSignature, writeUint16, writeZeros, writeFixedPoint32,\n\twriteUint8, writeUint32, writeColor\n} from './psdWriter';\n\nconst bevelStyles: BevelStyle[] = [\n\tundefined as any, 'outer bevel', 'inner bevel', 'emboss', 'pillow emboss', 'stroke emboss'\n];\n\nfunction readBlendMode(reader: PsdReader) {\n\tcheckSignature(reader, '8BIM');\n\treturn toBlendMode[readSignature(reader)] || 'normal';\n}\n\nfunction writeBlendMode(writer: PsdWriter, mode: string | undefined) {\n\twriteSignature(writer, '8BIM');\n\twriteSignature(writer, fromBlendMode[mode!] || 'norm');\n}\n\nfunction readFixedPoint8(reader: PsdReader) {\n\treturn readUint8(reader) / 0xff;\n}\n\nfunction writeFixedPoint8(writer: PsdWriter, value: number) {\n\twriteUint8(writer, Math.round(value * 0xff) | 0);\n}\n\nexport function readEffects(reader: PsdReader) {\n\tconst version = readUint16(reader);\n\n\tif (version !== 0)\n\t\tthrow new Error(`Invalid effects layer version: ${version}`);\n\n\tconst effectsCount = readUint16(reader);\n\tconst effects: LayerEffectsInfo = <any>{};\n\n\tfor (let i = 0; i < effectsCount; i++) {\n\t\tcheckSignature(reader, '8BIM');\n\t\tconst type = readSignature(reader);\n\n\t\tswitch (type) {\n\t\t\tcase 'cmnS': { // common state (see See Effects layer, common state info)\n\t\t\t\tconst size = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\t\t\t\tconst visible = !!readUint8(reader);\n\t\t\t\tskipBytes(reader, 2);\n\n\t\t\t\tif (size !== 7 || version !== 0 || !visible) throw new Error(`Invalid effects common state`);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'dsdw': // drop shadow (see See Effects layer, drop shadow and inner shadow info)\n\t\t\tcase 'isdw': { // inner shadow (see See Effects layer, drop shadow and inner shadow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 41 && blockSize !== 51) throw new Error(`Invalid shadow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid shadow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst angle = readFixedPoint32(reader);\n\t\t\t\tconst distance = readFixedPoint32(reader);\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst useGlobalLight = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tif (blockSize >= 51) readColor(reader); // native color\n\t\t\t\tconst shadowInfo: LayerEffectShadow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tdistance: { units: 'Pixels', value: distance },\n\t\t\t\t\tangle, color, blendMode, enabled, useGlobalLight, opacity\n\t\t\t\t};\n\n\t\t\t\tif (type === 'dsdw') {\n\t\t\t\t\teffects.dropShadow = shadowInfo;\n\t\t\t\t} else {\n\t\t\t\t\teffects.innerShadow = shadowInfo;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'oglw': { // outer glow (see See Effects layer, outer glow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 32 && blockSize !== 42) throw new Error(`Invalid outer glow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid outer glow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tif (blockSize >= 42) readColor(reader); // native color\n\n\t\t\t\teffects.outerGlow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tcolor, blendMode, enabled, opacity\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'iglw': { // inner glow (see See Effects layer, inner glow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 32 && blockSize !== 43) throw new Error(`Invalid inner glow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid inner glow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\n\t\t\t\tif (blockSize >= 43) {\n\t\t\t\t\treadUint8(reader); // inverted\n\t\t\t\t\treadColor(reader); // native color\n\t\t\t\t}\n\n\t\t\t\teffects.innerGlow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tcolor, blendMode, enabled, opacity\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'bevl': { // bevel (see See Effects layer, bevel info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 58 && blockSize !== 78) throw new Error(`Invalid bevel size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid bevel version: ${version}`);\n\n\t\t\t\tconst angle = readFixedPoint32(reader);\n\t\t\t\tconst strength = readFixedPoint32(reader);\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\tconst highlightBlendMode = readBlendMode(reader);\n\t\t\t\tconst shadowBlendMode = readBlendMode(reader);\n\t\t\t\tconst highlightColor = readColor(reader);\n\t\t\t\tconst shadowColor = readColor(reader);\n\t\t\t\tconst style = bevelStyles[readUint8(reader)] || 'inner bevel';\n\t\t\t\tconst highlightOpacity = readFixedPoint8(reader);\n\t\t\t\tconst shadowOpacity = readFixedPoint8(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst useGlobalLight = !!readUint8(reader);\n\t\t\t\tconst direction = readUint8(reader) ? 'down' : 'up';\n\n\t\t\t\tif (blockSize >= 78) {\n\t\t\t\t\treadColor(reader); // real highlight color\n\t\t\t\t\treadColor(reader); // real shadow color\n\t\t\t\t}\n\n\t\t\t\teffects.bevel = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tangle, strength, highlightBlendMode, shadowBlendMode, highlightColor, shadowColor,\n\t\t\t\t\tstyle, highlightOpacity, shadowOpacity, enabled, useGlobalLight, direction,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'sofi': { // solid fill (Photoshop 7.0) (see See Effects layer, solid fill (added in Photoshop 7.0))\n\t\t\t\tconst size = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (size !== 34) throw new Error(`Invalid effects solid fill info size: ${size}`);\n\t\t\t\tif (version !== 2) throw new Error(`Invalid effects solid fill info version: ${version}`);\n\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\treadColor(reader); // native color\n\n\t\t\t\teffects.solidFill = { blendMode, color, opacity, enabled };\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid effect type: '${type}'`);\n\t\t}\n\t}\n\n\treturn effects;\n}\n\nfunction writeShadowInfo(writer: PsdWriter, shadow: LayerEffectShadow) {\n\twriteUint32(writer, 51);\n\twriteUint32(writer, 2);\n\twriteFixedPoint32(writer, shadow.size && shadow.size.value || 0);\n\twriteFixedPoint32(writer, 0); // intensity\n\twriteFixedPoint32(writer, shadow.angle || 0);\n\twriteFixedPoint32(writer, shadow.distance && shadow.distance.value || 0);\n\twriteColor(writer, shadow.color);\n\twriteBlendMode(writer, shadow.blendMode);\n\twriteUint8(writer, shadow.enabled ? 1 : 0);\n\twriteUint8(writer, shadow.useGlobalLight ? 1 : 0);\n\twriteFixedPoint8(writer, shadow.opacity ?? 1);\n\twriteColor(writer, shadow.color); // native color\n}\n\nexport function writeEffects(writer: PsdWriter, effects: LayerEffectsInfo) {\n\twriteUint16(writer, 0);\n\n\tlet count = 1;\n\tif (effects.dropShadow) count++;\n\tif (effects.innerShadow) count++;\n\tif (effects.outerGlow) count++;\n\tif (effects.innerGlow) count++;\n\tif (effects.bevel) count++;\n\tif (effects.solidFill) count++;\n\n\twriteUint16(writer, count);\n\n\twriteSignature(writer, '8BIM');\n\twriteSignature(writer, 'cmnS');\n\twriteUint32(writer, 7); // size\n\twriteUint32(writer, 0); // version\n\twriteUint8(writer, 1); // visible\n\twriteZeros(writer, 2);\n\n\tif (effects.dropShadow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'dsdw');\n\t\twriteShadowInfo(writer, effects.dropShadow);\n\t}\n\n\tif (effects.innerShadow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'isdw');\n\t\twriteShadowInfo(writer, effects.innerShadow);\n\t}\n\n\tif (effects.outerGlow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'oglw');\n\t\twriteUint32(writer, 42);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.outerGlow.size?.value || 0);\n\t\twriteFixedPoint32(writer, 0); // intensity\n\t\twriteColor(writer, effects.outerGlow.color);\n\t\twriteBlendMode(writer, effects.outerGlow.blendMode);\n\t\twriteUint8(writer, effects.outerGlow.enabled ? 1 : 0);\n\t\twriteFixedPoint8(writer, effects.outerGlow.opacity || 0);\n\t\twriteColor(writer, effects.outerGlow.color);\n\t}\n\n\tif (effects.innerGlow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'iglw');\n\t\twriteUint32(writer, 43);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.innerGlow.size?.value || 0);\n\t\twriteFixedPoint32(writer, 0); // intensity\n\t\twriteColor(writer, effects.innerGlow.color);\n\t\twriteBlendMode(writer, effects.innerGlow.blendMode);\n\t\twriteUint8(writer, effects.innerGlow.enabled ? 1 : 0);\n\t\twriteFixedPoint8(writer, effects.innerGlow.opacity || 0);\n\t\twriteUint8(writer, 0); // inverted\n\t\twriteColor(writer, effects.innerGlow.color);\n\t}\n\n\tif (effects.bevel) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'bevl');\n\t\twriteUint32(writer, 78);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.bevel.angle || 0);\n\t\twriteFixedPoint32(writer, effects.bevel.strength || 0);\n\t\twriteFixedPoint32(writer, effects.bevel.size?.value || 0);\n\t\twriteBlendMode(writer, effects.bevel.highlightBlendMode);\n\t\twriteBlendMode(writer, effects.bevel.shadowBlendMode);\n\t\twriteColor(writer, effects.bevel.highlightColor);\n\t\twriteColor(writer, effects.bevel.shadowColor);\n\t\tconst style = bevelStyles.indexOf(effects.bevel.style!);\n\t\twriteUint8(writer, style <= 0 ? 1 : style);\n\t\twriteFixedPoint8(writer, effects.bevel.highlightOpacity || 0);\n\t\twriteFixedPoint8(writer, effects.bevel.shadowOpacity || 0);\n\t\twriteUint8(writer, effects.bevel.enabled ? 1 : 0);\n\t\twriteUint8(writer, effects.bevel.useGlobalLight ? 1 : 0);\n\t\twriteUint8(writer, effects.bevel.direction === 'down' ? 1 : 0);\n\t\twriteColor(writer, effects.bevel.highlightColor);\n\t\twriteColor(writer, effects.bevel.shadowColor);\n\t}\n\n\tif (effects.solidFill) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'sofi');\n\t\twriteUint32(writer, 34);\n\t\twriteUint32(writer, 2);\n\t\twriteBlendMode(writer, effects.solidFill.blendMode);\n\t\twriteColor(writer, effects.solidFill.color);\n\t\twriteFixedPoint8(writer, effects.solidFill.opacity || 0);\n\t\twriteUint8(writer, effects.solidFill.enabled ? 1 : 0);\n\t\twriteColor(writer, effects.solidFill.color);\n\t}\n}\n","import {\n\tPsd, Layer, ColorMode, SectionDividerType, LayerAdditionalInfo, ReadOptions, LayerMaskData, Color,\n\tPatternInfo, GlobalLayerMaskInfo\n} from './psd';\nimport {\n\tresetImageData, offsetForChannel, decodeBitmap, PixelData, createCanvas, createImageData,\n\ttoBlendMode, ChannelID, Compression, LayerMaskFlags, MaskParams, ColorSpace\n} from './helpers';\nimport { infoHandlersMap } from './additionalInfo';\nimport { resourceHandlersMap } from './imageResources';\n\ninterface ChannelInfo {\n\tid: ChannelID;\n\tlength: number;\n}\n\nexport const supportedColorModes = [ColorMode.Bitmap, ColorMode.Grayscale, ColorMode.RGB];\nconst colorModes = ['bitmap', 'grayscale', 'indexed', 'RGB', 'CMYK', 'multichannel', 'duotone', 'lab'];\n\nconst RAW_IMAGE_DATA = false;\n\nfunction setupGrayscale(data: PixelData) {\n\tconst size = data.width * data.height * 4;\n\n\tfor (let i = 0; i < size; i += 4) {\n\t\tdata.data[i + 1] = data.data[i];\n\t\tdata.data[i + 2] = data.data[i];\n\t}\n}\n\nexport interface PsdReader {\n\toffset: number;\n\tview: DataView;\n}\n\nexport function createReader(buffer: ArrayBuffer, offset?: number, length?: number): PsdReader {\n\tconst view = new DataView(buffer, offset, length);\n\treturn { view, offset: 0 };\n}\n\nexport function readUint8(reader: PsdReader) {\n\treader.offset += 1;\n\treturn reader.view.getUint8(reader.offset - 1);\n}\n\nexport function peekUint8(reader: PsdReader) {\n\treturn reader.view.getUint8(reader.offset);\n}\n\nexport function readInt16(reader: PsdReader) {\n\treader.offset += 2;\n\treturn reader.view.getInt16(reader.offset - 2, false);\n}\n\nexport function readUint16(reader: PsdReader) {\n\treader.offset += 2;\n\treturn reader.view.getUint16(reader.offset - 2, false);\n}\n\nexport function readInt32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getInt32(reader.offset - 4, false);\n}\n\nexport function readInt32LE(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getInt32(reader.offset - 4, true);\n}\n\nexport function readUint32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getUint32(reader.offset - 4, false);\n}\n\nexport function readFloat32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getFloat32(reader.offset - 4, false);\n}\n\nexport function readFloat64(reader: PsdReader) {\n\treader.offset += 8;\n\treturn reader.view.getFloat64(reader.offset - 8, false);\n}\n\n// 32-bit fixed-point number 16.16\nexport function readFixedPoint32(reader: PsdReader): number {\n\treturn readInt32(reader) / (1 << 16);\n}\n\n// 32-bit fixed-point number 8.24\nexport function readFixedPointPath32(reader: PsdReader): number {\n\treturn readInt32(reader) / (1 << 24);\n}\n\nexport function readBytes(reader: PsdReader, length: number) {\n\treader.offset += length;\n\treturn new Uint8Array(reader.view.buffer, reader.view.byteOffset + reader.offset - length, length);\n}\n\nexport function readSignature(reader: PsdReader) {\n\treturn readShortString(reader, 4);\n}\n\nexport function readPascalString(reader: PsdReader, padTo: number) {\n\tlet length = readUint8(reader);\n\tconst text = readShortString(reader, length);\n\n\twhile (++length % padTo) {\n\t\tskipBytes(reader, 1);\n\t}\n\n\treturn text;\n}\n\nexport function readUnicodeString(reader: PsdReader) {\n\tconst length = readUint32(reader);\n\treturn readUnicodeStringWithLength(reader, length);\n}\n\nexport function readUnicodeStringWithLength(reader: PsdReader, length: number) {\n\tlet text = '';\n\n\twhile (length--) {\n\t\tconst value = readUint16(reader);\n\n\t\tif (value || length > 0) { // remove trailing \\0\n\t\t\ttext += String.fromCharCode(value);\n\t\t}\n\t}\n\n\treturn text;\n}\n\nexport function readAsciiString(reader: PsdReader, length: number) {\n\tlet text = '';\n\n\twhile (length--) {\n\t\ttext += String.fromCharCode(readUint8(reader));\n\t}\n\n\treturn text;\n}\n\nexport function skipBytes(reader: PsdReader, count: number) {\n\treader.offset += count;\n}\n\nexport function checkSignature(reader: PsdReader, a: string, b?: string) {\n\tconst offset = reader.offset;\n\tconst signature = readSignature(reader);\n\n\tif (signature !== a && signature !== b) {\n\t\tthrow new Error(`Invalid signature: '${signature}' at 0x${offset.toString(16)}`);\n\t}\n}\n\nfunction readShortString(reader: PsdReader, length: number) {\n\tconst buffer: any = readBytes(reader, length);\n\treturn String.fromCharCode(...buffer);\n}\n\nexport function readPsd(reader: PsdReader, options: ReadOptions = {}) {\n\t// header\n\tcheckSignature(reader, '8BPS');\n\tconst version = readUint16(reader);\n\tif (version !== 1) throw new Error(`Invalid PSD file version: ${version}`);\n\n\tskipBytes(reader, 6);\n\tconst channels = readUint16(reader);\n\tconst height = readUint32(reader);\n\tconst width = readUint32(reader);\n\tconst bitsPerChannel = readUint16(reader);\n\tconst colorMode = readUint16(reader);\n\n\tif (supportedColorModes.indexOf(colorMode) === -1)\n\t\tthrow new Error(`Color mode not supported: ${colorModes[colorMode] ?? colorMode}`);\n\n\tconst psd: Psd = { width, height, channels, bitsPerChannel, colorMode };\n\n\t// color mode data\n\treadSection(reader, 1, left => {\n\t\tif (options.throwForMissingFeatures) throw new Error('Color mode data not supported');\n\t\tskipBytes(reader, left());\n\t});\n\n\t// image resources\n\treadSection(reader, 1, left => {\n\t\twhile (left()) {\n\t\t\tcheckSignature(reader, '8BIM');\n\n\t\t\tconst id = readUint16(reader);\n\t\t\treadPascalString(reader, 2); // name\n\n\t\t\treadSection(reader, 2, left => {\n\t\t\t\tconst handler = resourceHandlersMap[id];\n\t\t\t\tconst skip = id === 1036 && !!options.skipThumbnail;\n\n\t\t\t\tif (!psd.imageResources) {\n\t\t\t\t\tpsd.imageResources = {};\n\t\t\t\t}\n\n\t\t\t\tif (handler && !skip) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandler.read(reader, psd.imageResources, left, options);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (options.throwForMissingFeatures) throw e;\n\t\t\t\t\t\tskipBytes(reader, left());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// options.logMissingFeatures && console.log(`Unhandled image resource: ${id}`);\n\t\t\t\t\tskipBytes(reader, left());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t// layer and mask info\n\tlet globalAlpha = false;\n\n\treadSection(reader, 1, left => {\n\t\tglobalAlpha = readLayerInfo(reader, psd, options);\n\n\t\t// SAI does not include this section\n\t\tif (left() > 0) {\n\t\t\tconst globalLayerMaskInfo = readGlobalLayerMaskInfo(reader);\n\t\t\tif (globalLayerMaskInfo) psd.globalLayerMaskInfo = globalLayerMaskInfo;\n\t\t} else {\n\t\t\t// revert back to end of section if exceeded section limits\n\t\t\t// options.logMissingFeatures && console.log('reverting to end of section');\n\t\t\tskipBytes(reader, left());\n\t\t}\n\n\t\twhile (left() > 0) {\n\t\t\t// sometimes there are empty bytes here\n\t\t\twhile (left() && peekUint8(reader) === 0) {\n\t\t\t\t// options.logMissingFeatures && console.log('skipping 0 byte');\n\t\t\t\tskipBytes(reader, 1);\n\t\t\t}\n\n\t\t\tif (left() >= 12) {\n\t\t\t\treadAdditionalLayerInfo(reader, psd, psd, options);\n\t\t\t} else {\n\t\t\t\t// options.logMissingFeatures && console.log('skipping leftover bytes', left());\n\t\t\t\tskipBytes(reader, left());\n\t\t\t}\n\t\t}\n\t});\n\n\tconst hasChildren = psd.children && psd.children.length;\n\tconst skipComposite = options.skipCompositeImageData && (options.skipLayerImageData || hasChildren);\n\n\tif (!skipComposite) {\n\t\treadImageData(reader, psd, globalAlpha, options);\n\t}\n\n\treturn psd;\n}\n\nfunction readLayerInfo(reader: PsdReader, psd: Psd, options: ReadOptions) {\n\tlet globalAlpha = false;\n\n\treadSection(reader, 2, left => {\n\t\tlet layerCount = readInt16(reader);\n\n\t\tif (layerCount < 0) {\n\t\t\tglobalAlpha = true;\n\t\t\tlayerCount = -layerCount;\n\t\t}\n\n\t\tconst layers: Layer[] = [];\n\t\tconst layerChannels: ChannelInfo[][] = [];\n\n\t\tfor (let i = 0; i < layerCount; i++) {\n\t\t\tconst { layer, channels } = readLayerRecord(reader, psd, options);\n\t\t\tlayers.push(layer);\n\t\t\tlayerChannels.push(channels);\n\t\t}\n\n\t\tif (!options.skipLayerImageData) {\n\t\t\tfor (let i = 0; i < layerCount; i++) {\n\t\t\t\treadLayerChannelImageData(reader, psd, layers[i], layerChannels[i], options);\n\t\t\t}\n\t\t}\n\n\t\tskipBytes(reader, left());\n\n\t\tif (!psd.children) psd.children = [];\n\n\t\tconst stack: (Layer | Psd)[] = [psd];\n\n\t\tfor (let i = layers.length - 1; i >= 0; i--) {\n\t\t\tconst l = layers[i];\n\t\t\tconst type = l.sectionDivider ? l.sectionDivider.type : SectionDividerType.Other;\n\n\t\t\tif (type === SectionDividerType.OpenFolder || type === SectionDividerType.ClosedFolder) {\n\t\t\t\tl.opened = type === SectionDividerType.OpenFolder;\n\t\t\t\tl.children = [];\n\t\t\t\tstack[stack.length - 1].children!.unshift(l);\n\t\t\t\tstack.push(l);\n\t\t\t} else if (type === SectionDividerType.BoundingSectionDivider) {\n\t\t\t\tstack.pop();\n\t\t\t} else {\n\t\t\t\tstack[stack.length - 1].children!.unshift(l);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn globalAlpha;\n}\n\nfunction readLayerRecord(reader: PsdReader, psd: Psd, options: ReadOptions) {\n\tconst layer: Layer = {};\n\tlayer.top = readInt32(reader);\n\tlayer.left = readInt32(reader);\n\tlayer.bottom = readInt32(reader);\n\tlayer.right = readInt32(reader);\n\n\tconst channelCount = readUint16(reader);\n\tconst channels: ChannelInfo[] = [];\n\n\tfor (let i = 0; i < channelCount; i++) {\n\t\tconst channelID = readInt16(reader) as ChannelID;\n\t\tconst channelLength = readInt32(reader);\n\t\tchannels.push({ id: channelID, length: channelLength });\n\t}\n\n\tcheckSignature(reader, '8BIM');\n\tconst blendMode = readSignature(reader);\n\tif (!toBlendMode[blendMode]) throw new Error(`Invalid blend mode: '${blendMode}'`);\n\tlayer.blendMode = toBlendMode[blendMode];\n\n\tlayer.opacity = readUint8(reader) / 0xff;\n\tlayer.clipping = readUint8(reader) === 1;\n\n\tconst flags = readUint8(reader);\n\tlayer.transparencyProtected = (flags & 0x01) !== 0;\n\tlayer.hidden = (flags & 0x02) !== 0;\n\t// 0x04 - obsolete\n\t// 0x08 - 1 for Photoshop 5.0 and later, tells if bit 4 has useful information\n\t// 0x10 - pixel data irrelevant to appearance of document\n\n\tskipBytes(reader, 1);\n\n\treadSection(reader, 1, left => {\n\t\tconst mask = readLayerMaskData(reader, options);\n\t\tif (mask) layer.mask = mask;\n\n\t\t/*const blendingRanges =*/ readLayerBlendingRanges(reader);\n\t\tlayer.name = readPascalString(reader, 4);\n\n\t\twhile (left()) {\n\t\t\treadAdditionalLayerInfo(reader, layer, psd, options);\n\t\t}\n\t});\n\n\treturn { layer, channels };\n}\n\nfunction readLayerMaskData(reader: PsdReader, options: ReadOptions) {\n\treturn readSection<LayerMaskData | undefined>(reader, 1, left => {\n\t\tif (!left()) return undefined;\n\n\t\tconst mask: LayerMaskData = {};\n\t\tmask.top = readInt32(reader);\n\t\tmask.left = readInt32(reader);\n\t\tmask.bottom = readInt32(reader);\n\t\tmask.right = readInt32(reader);\n\t\tmask.defaultColor = readUint8(reader);\n\n\t\tconst flags = readUint8(reader);\n\t\tmask.positionRelativeToLayer = (flags & LayerMaskFlags.PositionRelativeToLayer) !== 0;\n\t\tmask.disabled = (flags & LayerMaskFlags.LayerMaskDisabled) !== 0;\n\t\tmask.fromVectorData = (flags & LayerMaskFlags.LayerMaskFromRenderingOtherData) !== 0;\n\n\t\tif (flags & LayerMaskFlags.MaskHasParametersAppliedToIt) {\n\t\t\tconst params = readUint8(reader);\n\t\t\tif (params & MaskParams.UserMaskDensity) mask.userMaskDensity = readUint8(reader) / 0xff;\n\t\t\tif (params & MaskParams.UserMaskFeather) mask.userMaskFeather = readFloat64(reader);\n\t\t\tif (params & MaskParams.VectorMaskDensity) mask.vectorMaskDensity = readUint8(reader) / 0xff;\n\t\t\tif (params & MaskParams.VectorMaskFeather) mask.vectorMaskFeather = readFloat64(reader);\n\t\t}\n\n\t\tif (left() > 2) {\n\t\t\toptions.logMissingFeatures && console.log('Unhandled extra mask params');\n\t\t\t// TODO: handle these values\n\t\t\t/*const realFlags =*/ readUint8(reader);\n\t\t\t/*const realUserMaskBackground =*/ readUint8(reader);\n\t\t\t/*const top2 =*/ readInt32(reader);\n\t\t\t/*const left2 =*/ readInt32(reader);\n\t\t\t/*const bottom2 =*/ readInt32(reader);\n\t\t\t/*const right2 =*/ readInt32(reader);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t\treturn mask;\n\t});\n}\n\nfunction readLayerBlendingRanges(reader: PsdReader) {\n\treturn readSection(reader, 1, left => {\n\t\tconst compositeGrayBlendSource = readUint32(reader);\n\t\tconst compositeGraphBlendDestinationRange = readUint32(reader);\n\t\tconst ranges = [];\n\n\t\twhile (left()) {\n\t\t\tconst sourceRange = readUint32(reader);\n\t\t\tconst destRange = readUint32(reader);\n\t\t\tranges.push({ sourceRange, destRange });\n\t\t}\n\n\t\treturn { compositeGrayBlendSource, compositeGraphBlendDestinationRange, ranges };\n\t});\n}\n\nfunction readLayerChannelImageData(reader: PsdReader, psd: Psd, layer: Layer, channels: ChannelInfo[], options: ReadOptions) {\n\tconst layerWidth = (layer.right || 0) - (layer.left || 0);\n\tconst layerHeight = (layer.bottom || 0) - (layer.top || 0);\n\n\tlet imageData: ImageData | undefined;\n\n\tif (layerWidth && layerHeight) {\n\t\timageData = createImageData(layerWidth, layerHeight);\n\t\tresetImageData(imageData);\n\t}\n\n\tif (RAW_IMAGE_DATA) {\n\t\t(layer as any).imageDataRaw = [];\n\t}\n\n\tfor (const channel of channels) {\n\t\tconst compression = readUint16(reader) as Compression;\n\n\t\tif (channel.id === ChannelID.UserMask) {\n\t\t\tconst mask = layer.mask;\n\n\t\t\tif (!mask) throw new Error(`Missing layer mask data`);\n\n\t\t\tconst maskWidth = (mask.right || 0) - (mask.left || 0);\n\t\t\tconst maskHeight = (mask.bottom || 0) - (mask.top || 0);\n\n\t\t\tif (maskWidth && maskHeight) {\n\t\t\t\tconst maskData = createImageData(maskWidth, maskHeight);\n\t\t\t\tresetImageData(maskData);\n\n\t\t\t\tconst start = reader.offset;\n\t\t\t\treadData(reader, maskData, compression, maskWidth, maskHeight, 0);\n\n\t\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t\t(layer as any).maskDataRaw = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t\t}\n\n\t\t\t\tsetupGrayscale(maskData);\n\n\t\t\t\tif (options.useImageData) {\n\t\t\t\t\tmask.imageData = maskData;\n\t\t\t\t} else {\n\t\t\t\t\tmask.canvas = createCanvas(maskWidth, maskHeight);\n\t\t\t\t\tmask.canvas.getContext('2d')!.putImageData(maskData, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst offset = offsetForChannel(channel.id);\n\t\t\tlet targetData = imageData;\n\n\t\t\tif (offset < 0) {\n\t\t\t\ttargetData = undefined;\n\n\t\t\t\tif (options.throwForMissingFeatures) {\n\t\t\t\t\tthrow new Error(`Channel not supported: ${channel.id}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst start = reader.offset;\n\t\t\treadData(reader, targetData, compression, layerWidth, layerHeight, offset);\n\n\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t(layer as any).imageDataRaw[channel.id] = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t}\n\n\t\t\tif (targetData && psd.colorMode === ColorMode.Grayscale) {\n\t\t\t\tsetupGrayscale(targetData);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (imageData) {\n\t\tif (options.useImageData) {\n\t\t\tlayer.imageData = imageData;\n\t\t} else {\n\t\t\tlayer.canvas = createCanvas(layerWidth, layerHeight);\n\t\t\tlayer.canvas.getContext('2d')!.putImageData(imageData, 0, 0);\n\t\t}\n\t}\n}\n\nfunction readData(\n\treader: PsdReader, data: ImageData | undefined, compression: Compression, width: number, height: number,\n\toffset: number\n) {\n\tif (compression === Compression.RawData) {\n\t\treadDataRaw(reader, data, offset, width, height);\n\t} else if (compression === Compression.RleCompressed) {\n\t\treadDataRLE(reader, data, width, height, 4, [offset]);\n\t} else {\n\t\tthrow new Error(`Compression type not supported: ${compression}`);\n\t}\n}\n\nfunction readGlobalLayerMaskInfo(reader: PsdReader) {\n\treturn readSection<GlobalLayerMaskInfo | undefined>(reader, 1, left => {\n\t\tif (!left()) return undefined;\n\n\t\tconst overlayColorSpace = readUint16(reader);\n\t\tconst colorSpace1 = readUint16(reader);\n\t\tconst colorSpace2 = readUint16(reader);\n\t\tconst colorSpace3 = readUint16(reader);\n\t\tconst colorSpace4 = readUint16(reader);\n\t\tconst opacity = readUint16(reader) / 0xff;\n\t\tconst kind = readUint8(reader);\n\t\tskipBytes(reader, left()); // 3 bytes of padding ?\n\t\treturn { overlayColorSpace, colorSpace1, colorSpace2, colorSpace3, colorSpace4, opacity, kind };\n\t});\n}\n\nfunction readAdditionalLayerInfo(reader: PsdReader, target: LayerAdditionalInfo, psd: Psd, options: ReadOptions) {\n\tcheckSignature(reader, '8BIM', '8B64');\n\tconst key = readSignature(reader);\n\n\treadSection(reader, 2, left => {\n\t\tconst handler = infoHandlersMap[key];\n\n\t\tif (handler) {\n\t\t\ttry {\n\t\t\t\thandler.read(reader, target, left, psd, options);\n\t\t\t} catch (e) {\n\t\t\t\tif (options.throwForMissingFeatures) throw e;\n\t\t\t}\n\t\t} else {\n\t\t\toptions.logMissingFeatures && console.log(`Unhandled additional info: ${key}`);\n\t\t\tskipBytes(reader, left());\n\t\t}\n\n\t\tif (left()) {\n\t\t\toptions.logMissingFeatures && console.log(`Unread ${left()} bytes left for tag: ${key}`);\n\t\t\tskipBytes(reader, left());\n\t\t}\n\t}, false);\n}\n\nfunction readImageData(reader: PsdReader, psd: Psd, globalAlpha: boolean, options: ReadOptions) {\n\tconst compression = readUint16(reader) as Compression;\n\n\tif (supportedColorModes.indexOf(psd.colorMode!) === -1)\n\t\tthrow new Error(`Color mode not supported: ${psd.colorMode}`);\n\n\tif (compression !== Compression.RawData && compression !== Compression.RleCompressed)\n\t\tthrow new Error(`Compression type not supported: ${compression}`);\n\n\tconst imageData = createImageData(psd.width, psd.height);\n\tresetImageData(imageData);\n\n\tif (psd.colorMode === ColorMode.Bitmap) {\n\t\tlet bytes: Uint8Array;\n\n\t\tif (compression === Compression.RawData) {\n\t\t\tbytes = readBytes(reader, Math.ceil(psd.width / 8) * psd.height);\n\t\t} else if (compression === Compression.RleCompressed) {\n\t\t\tbytes = new Uint8Array(psd.width * psd.height);\n\t\t\treadDataRLE(reader, { data: bytes, width: psd.width, height: psd.height }, psd.width, psd.height, 1, [0]);\n\t\t} else {\n\t\t\tthrow new Error(`Bitmap compression not supported: ${compression}`);\n\t\t}\n\n\t\tdecodeBitmap(bytes, imageData.data, psd.width, psd.height);\n\t} else {\n\t\tconst channels = psd.colorMode === ColorMode.Grayscale ? [0] : [0, 1, 2];\n\n\t\tif (psd.channels && psd.channels > 3) {\n\t\t\tfor (let i = 3; i < psd.channels; i++) {\n\t\t\t\t// TODO: store these channels in additional image data\n\t\t\t\tchannels.push(i);\n\t\t\t}\n\t\t} else if (globalAlpha) {\n\t\t\tchannels.push(3);\n\t\t}\n\n\t\tif (compression === Compression.RawData) {\n\t\t\tfor (let i = 0; i < channels.length; i++) {\n\t\t\t\treadDataRaw(reader, imageData, channels[i], psd.width, psd.height);\n\t\t\t}\n\t\t} else if (compression === Compression.RleCompressed) {\n\t\t\tconst start = reader.offset;\n\t\t\treadDataRLE(reader, imageData, psd.width, psd.height, 4, channels);\n\n\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t(psd as any).imageDataRaw = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t}\n\t\t}\n\n\t\tif (psd.colorMode === ColorMode.Grayscale) {\n\t\t\tsetupGrayscale(imageData);\n\t\t}\n\t}\n\n\tif (options.useImageData) {\n\t\tpsd.imageData = imageData;\n\t} else {\n\t\tpsd.canvas = createCanvas(psd.width, psd.height);\n\t\tpsd.canvas.getContext('2d')!.putImageData(imageData, 0, 0);\n\t}\n}\n\nfunction readDataRaw(reader: PsdReader, pixelData: PixelData | undefined, offset: number, width: number, height: number) {\n\tconst size = width * height;\n\tconst buffer = readBytes(reader, size);\n\n\tif (pixelData && offset < 4) {\n\t\tconst data = pixelData.data;\n\n\t\tfor (let i = 0, p = offset | 0; i < size; i++, p = (p + 4) | 0) {\n\t\t\tdata[p] = buffer[i];\n\t\t}\n\t}\n}\n\nexport function readDataRLE(\n\treader: PsdReader, pixelData: PixelData | undefined, _width: number, height: number, step: number, offsets: number[]\n) {\n\tconst lengths = new Uint16Array(offsets.length * height);\n\tconst data = pixelData && pixelData.data;\n\n\tfor (let o = 0, li = 0; o < offsets.length; o++) {\n\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\tlengths[li] = readUint16(reader);\n\t\t}\n\t}\n\n\tfor (let c = 0, li = 0; c < offsets.length; c++) {\n\t\tconst offset = offsets[c] | 0;\n\t\tconst extra = c > 3 || offset > 3;\n\n\t\tif (!data || extra) {\n\t\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\t\tskipBytes(reader, lengths[li]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let y = 0, p = offset | 0; y < height; y++, li++) {\n\t\t\t\tconst length = lengths[li];\n\t\t\t\tconst buffer = readBytes(reader, length);\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet header = buffer[i];\n\n\t\t\t\t\tif (header > 128) {\n\t\t\t\t\t\tconst value = buffer[++i];\n\t\t\t\t\t\theader = (256 - header) | 0;\n\n\t\t\t\t\t\tfor (let j = 0; j <= header; j = (j + 1) | 0) {\n\t\t\t\t\t\t\tdata[p] = value;\n\t\t\t\t\t\t\tp = (p + step) | 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (header < 128) {\n\t\t\t\t\t\tfor (let j = 0; j <= header; j = (j + 1) | 0) {\n\t\t\t\t\t\t\tdata[p] = buffer[++i];\n\t\t\t\t\t\t\tp = (p + step) | 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ignore 128\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\tthrow new Error(`Invalid RLE data: exceeded buffer size ${i}/${length}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function readSection<T>(reader: PsdReader, round: number, func: (left: () => number) => T, skipEmpty = true): T | undefined {\n\tconst length = readInt32(reader);\n\n\tif (length <= 0 && skipEmpty) return undefined;\n\n\tlet end = reader.offset + length;\n\tconst result = func(() => end - reader.offset);\n\n\tif (reader.offset > end)\n\t\tthrow new Error('Exceeded section limits');\n\n\tif (reader.offset !== end)\n\t\tthrow new Error(`Unread section data: ${end - reader.offset} bytes at 0x${reader.offset.toString(16)}`);\n\n\twhile (end % round) end++;\n\n\treader.offset = end;\n\treturn result;\n}\n\nexport function readColor(reader: PsdReader): Color {\n\tconst colorSpace = readUint16(reader) as ColorSpace;\n\n\tswitch (colorSpace) {\n\t\tcase ColorSpace.RGB: {\n\t\t\tconst r = readUint16(reader) / 257;\n\t\t\tconst g = readUint16(reader) / 257;\n\t\t\tconst b = readUint16(reader) / 257;\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { r, g, b };\n\t\t}\n\t\tcase ColorSpace.Lab: {\n\t\t\tconst l = readInt16(reader) / 100;\n\t\t\tconst a = readInt16(reader) / 100;\n\t\t\tconst b = readInt16(reader) / 100;\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { l, a, b };\n\t\t}\n\t\tcase ColorSpace.CMYK: {\n\t\t\tconst c = readInt16(reader);\n\t\t\tconst m = readInt16(reader);\n\t\t\tconst y = readInt16(reader);\n\t\t\tconst k = readInt16(reader);\n\t\t\treturn { c, m, y, k };\n\t\t}\n\t\tcase ColorSpace.Grayscale: {\n\t\t\tconst k = readInt16(reader);\n\t\t\tskipBytes(reader, 6);\n\t\t\treturn { k };\n\t\t}\n\t\tcase ColorSpace.HSB: {\n\t\t\tconst h = readInt16(reader);\n\t\t\tconst s = readInt16(reader);\n\t\t\tconst b = readInt16(reader);\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { h, s, b };\n\t\t}\n\t\tdefault:\n\t\t\tthrow new Error('Invalid color space');\n\t}\n}\n\nexport function readPattern(reader: PsdReader): PatternInfo {\n\treadUint32(reader); // length\n\tconst version = readUint32(reader);\n\tif (version !== 1) throw new Error(`Invalid pattern version: ${version}`);\n\n\tconst colorMode = readUint32(reader) as ColorMode;\n\tconst x = readInt16(reader);\n\tconst y = readInt16(reader);\n\n\t// we only support RGB and grayscale for now\n\tif (colorMode !== ColorMode.RGB && colorMode !== ColorMode.Grayscale) throw new Error('Unsupported pattern color mode');\n\n\tconst name = readUnicodeString(reader);\n\tconst id = readPascalString(reader, 1);\n\n\t// TODO: index color table here (only for indexed color mode, not supported right now)\n\n\t// virtual memory array list\n\tconst version2 = readUint32(reader);\n\tif (version2 !== 3) throw new Error(`Invalid pattern VMAL version: ${version2}`);\n\n\treadUint32(reader); // length\n\tconst top = readUint32(reader);\n\tconst left = readUint32(reader);\n\tconst bottom = readUint32(reader);\n\tconst right = readUint32(reader);\n\tconst channelsCount = readUint32(reader);\n\tconst width = right - left;\n\tconst height = bottom - top;\n\tconst data = new Uint8Array(width * height * 4);\n\n\tfor (let i = 3; i < data.byteLength; i += 4) {\n\t\tdata[i] = 255;\n\t}\n\n\tfor (let i = 0, ch = 0; i < (channelsCount + 2); i++) {\n\t\tconst has = readUint32(reader);\n\n\t\tif (has) {\n\t\t\tconst length = readUint32(reader);\n\t\t\tconst pixelDepth = readUint32(reader);\n\t\t\tconst ctop = readUint32(reader);\n\t\t\tconst cleft = readUint32(reader);\n\t\t\tconst cbottom = readUint32(reader);\n\t\t\tconst cright = readUint32(reader);\n\t\t\tconst pixelDepth2 = readUint16(reader);\n\t\t\tconst compressionMode = readUint8(reader); // 0 - raw, 1 - zip\n\t\t\tconst dataLength = length - (4 + 16 + 2 + 1);\n\t\t\tconst cdata = readBytes(reader, dataLength);\n\n\t\t\tif (pixelDepth !== 8 || pixelDepth2 !== 8) throw new Error('16bit pixel depth not supported in palettes');\n\t\t\tif (compressionMode !== 0) throw new Error('Zip compression not supported in palettes');\n\n\t\t\tconst w = cright - cleft;\n\t\t\tconst h = cbottom - ctop;\n\t\t\tconst ox = cleft - left;\n\t\t\tconst oy = ctop - top;\n\n\t\t\tif (colorMode === ColorMode.RGB && ch < 3) {\n\t\t\t\tfor (let y = 0; y < h; y++) {\n\t\t\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\t\t\tconst src = x + y * w;\n\t\t\t\t\t\tconst dst = (ox + x + (y + oy) * width) * 4;\n\t\t\t\t\t\tdata[dst + ch] = cdata[src];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (colorMode === ColorMode.Grayscale && ch < 1) {\n\t\t\t\tfor (let y = 0; y < h; y++) {\n\t\t\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\t\t\tconst src = x + y * w;\n\t\t\t\t\t\tconst dst = (ox + x + (y + oy) * width) * 4;\n\t\t\t\t\t\tconst value = cdata[src];\n\t\t\t\t\t\tdata[dst + 0] = value;\n\t\t\t\t\t\tdata[dst + 1] = value;\n\t\t\t\t\t\tdata[dst + 2] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tch++;\n\t\t}\n\t}\n\n\t// TODO: use canvas instead of data ?\n\n\treturn { id, name, x, y, bounds: { x: left, y: top, w: width, h: height }, data };\n}\n","import { toByteArray } from 'base64-js';\nimport { ImageResources, ReadOptions, RenderingIntent } from './psd';\nimport {\n\tPsdReader, readPascalString, readUnicodeString, readUint32, readUint16, readUint8, readFloat64,\n\treadBytes, skipBytes, readFloat32, readInt16, readFixedPoint32, readSignature, checkSignature,\n\treadSection, readColor\n} from './psdReader';\nimport {\n\tPsdWriter, writePascalString, writeUnicodeString, writeUint32, writeUint8, writeFloat64, writeUint16,\n\twriteBytes, writeInt16, writeFloat32, writeFixedPoint32, writeUnicodeStringWithPadding, writeColor,\n} from './psdWriter';\nimport { createCanvasFromData, createEnum } from './helpers';\nimport { decodeString, encodeString } from './utf8';\nimport { readVersionAndDescriptor, writeVersionAndDescriptor } from './descriptor';\n\nexport interface ResourceHandler {\n\tkey: number;\n\thas: (target: ImageResources) => boolean;\n\tread: (reader: PsdReader, target: ImageResources, left: () => number, options: ReadOptions) => void;\n\twrite: (writer: PsdWriter, target: ImageResources) => void;\n}\n\nexport const resourceHandlers: ResourceHandler[] = [];\nexport const resourceHandlersMap: { [key: number]: ResourceHandler } = {};\n\nfunction addHandler(\n\tkey: number,\n\thas: (target: ImageResources) => boolean,\n\tread: (reader: PsdReader, target: ImageResources, left: () => number, options: ReadOptions) => void,\n\twrite: (writer: PsdWriter, target: ImageResources) => void,\n) {\n\tconst handler: ResourceHandler = { key, has, read, write };\n\tresourceHandlers.push(handler);\n\tresourceHandlersMap[handler.key] = handler;\n}\n\nconst MOCK_HANDLERS = false;\nconst LOG_MOCK_HANDLERS = false;\nconst RESOLUTION_UNITS = [undefined, 'PPI', 'PPCM'];\nconst MEASUREMENT_UNITS = [undefined, 'Inches', 'Centimeters', 'Points', 'Picas', 'Columns'];\nconst hex = '0123456789abcdef';\n\nfunction charToNibble(code: number) {\n\treturn code <= 57 ? code - 48 : code - 87;\n}\n\nfunction byteAt(value: string, index: number) {\n\treturn (charToNibble(value.charCodeAt(index)) << 4) | charToNibble(value.charCodeAt(index + 1));\n}\n\nfunction readUtf8String(reader: PsdReader, length: number) {\n\tconst buffer = readBytes(reader, length);\n\treturn decodeString(buffer);\n}\n\nfunction writeUtf8String(writer: PsdWriter, value: string) {\n\tconst buffer = encodeString(value);\n\twriteBytes(writer, buffer);\n}\n\nMOCK_HANDLERS && addHandler(\n\t1028, // IPTC-NAA record\n\ttarget => (target as any)._ir1028 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1028', left());\n\t\t(target as any)._ir1028 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1028);\n\t},\n);\n\naddHandler(\n\t1061,\n\ttarget => target.captionDigest !== undefined,\n\t(reader, target) => {\n\t\tlet captionDigest = '';\n\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tconst byte = readUint8(reader);\n\t\t\tcaptionDigest += hex[byte >> 4];\n\t\t\tcaptionDigest += hex[byte & 0xf];\n\t\t}\n\n\t\ttarget.captionDigest = captionDigest;\n\t},\n\t(writer, target) => {\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\twriteUint8(writer, byteAt(target.captionDigest!, i * 2));\n\t\t}\n\t},\n);\n\naddHandler(\n\t1060,\n\ttarget => target.xmpMetadata !== undefined,\n\t(reader, target, left) => target.xmpMetadata = readUtf8String(reader, left()),\n\t(writer, target) => writeUtf8String(writer, target.xmpMetadata!),\n);\n\nconst Inte = createEnum<RenderingIntent>('Inte', 'perceptual', {\n\t'perceptual': 'Img ',\n\t'saturation': 'Grp ',\n\t'relative colorimetric': 'Clrm',\n\t'absolute colorimetric': 'AClr',\n});\n\ninterface PrintInformationDescriptor {\n\t'Nm  '?: string;\n\tClrS?: string;\n\tPstS?: boolean;\n\tMpBl?: boolean;\n\tInte?: string;\n\thardProof?: boolean;\n\tprintSixteenBit?: boolean;\n\tprinterName?: string;\n\tprintProofSetup?: {\n\t\tBltn: string;\n\t} | {\n\t\tprofile: string;\n\t\tInte: string;\n\t\tMpBl: boolean;\n\t\tpaperWhite: boolean;\n\t};\n}\n\naddHandler(\n\t1082,\n\ttarget => target.printInformation !== undefined,\n\t(reader, target) => {\n\t\tconst desc: PrintInformationDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.printInformation = {\n\t\t\tprinterName: desc.printerName || '',\n\t\t\trenderingIntent: Inte.decode(desc.Inte ?? 'Inte.Img '),\n\t\t};\n\n\t\tconst info = target.printInformation;\n\n\t\tif (desc.PstS !== undefined) info.printerManagesColors = desc.PstS;\n\t\tif (desc['Nm  '] !== undefined) info.printerProfile = desc['Nm  '];\n\t\tif (desc.MpBl !== undefined) info.blackPointCompensation = desc.MpBl;\n\t\tif (desc.printSixteenBit !== undefined) info.printSixteenBit = desc.printSixteenBit;\n\t\tif (desc.hardProof !== undefined) info.hardProof = desc.hardProof;\n\t\tif (desc.printProofSetup) {\n\t\t\tif ('Bltn' in desc.printProofSetup) {\n\t\t\t\tinfo.proofSetup = { builtin: desc.printProofSetup.Bltn.split('.')[1] };\n\t\t\t} else {\n\t\t\t\tinfo.proofSetup = {\n\t\t\t\t\tprofile: desc.printProofSetup.profile,\n\t\t\t\t\trenderingIntent: Inte.decode(desc.printProofSetup.Inte ?? 'Inte.Img '),\n\t\t\t\t\tblackPointCompensation: !!desc.printProofSetup.MpBl,\n\t\t\t\t\tpaperWhite: !!desc.printProofSetup.paperWhite,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tconst info = target.printInformation!;\n\t\tconst desc: PrintInformationDescriptor = {};\n\n\t\tif (info.printerManagesColors) {\n\t\t\tdesc.PstS = true;\n\t\t} else {\n\t\t\tif (info.hardProof !== undefined) desc.hardProof = !!info.hardProof;\n\t\t\tdesc.ClrS = 'ClrS.RGBC'; // TODO: ???\n\t\t\tdesc['Nm  '] = info.printerProfile ?? 'CIE RGB';\n\t\t}\n\n\t\tdesc.Inte = Inte.encode(info.renderingIntent);\n\n\t\tif (!info.printerManagesColors) desc.MpBl = !!info.blackPointCompensation;\n\n\t\tdesc.printSixteenBit = !!info.printSixteenBit;\n\t\tdesc.printerName = info.printerName || '';\n\n\t\tif (info.proofSetup && 'profile' in info.proofSetup) {\n\t\t\tdesc.printProofSetup = {\n\t\t\t\tprofile: info.proofSetup.profile || '',\n\t\t\t\tInte: Inte.encode(info.proofSetup.renderingIntent),\n\t\t\t\tMpBl: !!info.proofSetup.blackPointCompensation,\n\t\t\t\tpaperWhite: !!info.proofSetup.paperWhite,\n\t\t\t};\n\t\t} else {\n\t\t\tdesc.printProofSetup = {\n\t\t\t\tBltn: info.proofSetup?.builtin ? `builtinProof.${info.proofSetup.builtin}` : 'builtinProof.proofCMYK',\n\t\t\t};\n\t\t}\n\n\t\twriteVersionAndDescriptor(writer, '', 'printOutput', desc);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1083, // Print style\n\ttarget => (target as any)._ir1083 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1083', left());\n\t\t(target as any)._ir1083 = readBytes(reader, left());\n\n\t\t// TODO:\n\t\t// const desc = readVersionAndDescriptor(reader);\n\t\t// console.log('1083', require('util').inspect(desc, false, 99, true));\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1083);\n\t},\n);\n\naddHandler(\n\t1005,\n\ttarget => target.resolutionInfo !== undefined,\n\t(reader, target) => {\n\t\tconst horizontalResolution = readFixedPoint32(reader);\n\t\tconst horizontalResolutionUnit = readUint16(reader);\n\t\tconst widthUnit = readUint16(reader);\n\t\tconst verticalResolution = readFixedPoint32(reader);\n\t\tconst verticalResolutionUnit = readUint16(reader);\n\t\tconst heightUnit = readUint16(reader);\n\n\t\ttarget.resolutionInfo = {\n\t\t\thorizontalResolution,\n\t\t\thorizontalResolutionUnit: RESOLUTION_UNITS[horizontalResolutionUnit] || 'PPI' as any,\n\t\t\twidthUnit: MEASUREMENT_UNITS[widthUnit] || 'Inches' as any,\n\t\t\tverticalResolution,\n\t\t\tverticalResolutionUnit: RESOLUTION_UNITS[verticalResolutionUnit] || 'PPI' as any,\n\t\t\theightUnit: MEASUREMENT_UNITS[heightUnit] || 'Inches' as any,\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst info = target.resolutionInfo!;\n\n\t\twriteFixedPoint32(writer, info.horizontalResolution || 0);\n\t\twriteUint16(writer, Math.max(1, RESOLUTION_UNITS.indexOf(info.horizontalResolutionUnit)));\n\t\twriteUint16(writer, Math.max(1, MEASUREMENT_UNITS.indexOf(info.widthUnit)));\n\t\twriteFixedPoint32(writer, info.verticalResolution || 0);\n\t\twriteUint16(writer, Math.max(1, RESOLUTION_UNITS.indexOf(info.verticalResolutionUnit)));\n\t\twriteUint16(writer, Math.max(1, MEASUREMENT_UNITS.indexOf(info.heightUnit)));\n\t},\n);\n\nconst printScaleStyles = ['centered', 'size to fit', 'user defined'];\n\naddHandler(\n\t1062,\n\ttarget => target.printScale !== undefined,\n\t(reader, target) => {\n\t\ttarget.printScale = {\n\t\t\tstyle: printScaleStyles[readInt16(reader)] as any,\n\t\t\tx: readFloat32(reader),\n\t\t\ty: readFloat32(reader),\n\t\t\tscale: readFloat32(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst { style, x, y, scale } = target.printScale!;\n\t\twriteInt16(writer, Math.max(0, printScaleStyles.indexOf(style!)));\n\t\twriteFloat32(writer, x || 0);\n\t\twriteFloat32(writer, y || 0);\n\t\twriteFloat32(writer, scale || 0);\n\t},\n);\n\naddHandler(\n\t1006,\n\ttarget => target.alphaChannelNames !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaChannelNames = [];\n\n\t\twhile (left()) {\n\t\t\tconst value = readPascalString(reader, 1);\n\t\t\ttarget.alphaChannelNames.push(value);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const name of target.alphaChannelNames!) {\n\t\t\twritePascalString(writer, name, 1);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1045,\n\ttarget => target.alphaChannelNames !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaChannelNames = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.alphaChannelNames.push(readUnicodeString(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const name of target.alphaChannelNames!) {\n\t\t\twriteUnicodeStringWithPadding(writer, name);\n\t\t}\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1077,\n\ttarget => (target as any)._ir1077 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1077', left());\n\t\t(target as any)._ir1077 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1077);\n\t},\n);\n\naddHandler(\n\t1053,\n\ttarget => target.alphaIdentifiers !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaIdentifiers = [];\n\n\t\twhile (left() >= 4) {\n\t\t\ttarget.alphaIdentifiers.push(readUint32(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const id of target.alphaIdentifiers!) {\n\t\t\twriteUint32(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1010,\n\ttarget => target.backgroundColor !== undefined,\n\t(reader, target) => target.backgroundColor = readColor(reader),\n\t(writer, target) => writeColor(writer, target.backgroundColor!),\n);\n\naddHandler(\n\t1037,\n\ttarget => target.globalAngle !== undefined,\n\t(reader, target) => target.globalAngle = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.globalAngle!),\n);\n\naddHandler(\n\t1049,\n\ttarget => target.globalAltitude !== undefined,\n\t(reader, target) => target.globalAltitude = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.globalAltitude!),\n);\n\naddHandler(\n\t1011,\n\ttarget => target.printFlags !== undefined,\n\t(reader, target) => {\n\t\ttarget.printFlags = {\n\t\t\tlabels: !!readUint8(reader),\n\t\t\tcropMarks: !!readUint8(reader),\n\t\t\tcolorBars: !!readUint8(reader),\n\t\t\tregistrationMarks: !!readUint8(reader),\n\t\t\tnegative: !!readUint8(reader),\n\t\t\tflip: !!readUint8(reader),\n\t\t\tinterpolate: !!readUint8(reader),\n\t\t\tcaption: !!readUint8(reader),\n\t\t\tprintFlags: !!readUint8(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst flags = target.printFlags!;\n\t\twriteUint8(writer, flags.labels ? 1 : 0);\n\t\twriteUint8(writer, flags.cropMarks ? 1 : 0);\n\t\twriteUint8(writer, flags.colorBars ? 1 : 0);\n\t\twriteUint8(writer, flags.registrationMarks ? 1 : 0);\n\t\twriteUint8(writer, flags.negative ? 1 : 0);\n\t\twriteUint8(writer, flags.flip ? 1 : 0);\n\t\twriteUint8(writer, flags.interpolate ? 1 : 0);\n\t\twriteUint8(writer, flags.caption ? 1 : 0);\n\t\twriteUint8(writer, flags.printFlags ? 1 : 0);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t10000, // Print flags\n\ttarget => (target as any)._ir10000 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 10000', left());\n\t\t(target as any)._ir10000 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir10000);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1013, // Color halftoning\n\ttarget => (target as any)._ir1013 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1013', left());\n\t\t(target as any)._ir1013 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1013);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1016, // Color transfer functions\n\ttarget => (target as any)._ir1016 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1016', left());\n\t\t(target as any)._ir1016 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1016);\n\t},\n);\n\naddHandler(\n\t1024,\n\ttarget => target.layerState !== undefined,\n\t(reader, target) => target.layerState = readUint16(reader),\n\t(writer, target) => writeUint16(writer, target.layerState!),\n);\n\naddHandler(\n\t1026,\n\ttarget => target.layersGroup !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.layersGroup = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.layersGroup.push(readUint16(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const g of target.layersGroup!) {\n\t\t\twriteUint16(writer, g);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1072,\n\ttarget => target.layerGroupsEnabledId !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.layerGroupsEnabledId = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.layerGroupsEnabledId.push(readUint8(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const id of target.layerGroupsEnabledId!) {\n\t\t\twriteUint8(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1069,\n\ttarget => target.layerSelectionIds !== undefined,\n\t(reader, target) => {\n\t\tlet count = readUint16(reader);\n\t\ttarget.layerSelectionIds = [];\n\n\t\twhile (count--) {\n\t\t\ttarget.layerSelectionIds.push(readUint32(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteUint16(writer, target.layerSelectionIds!.length);\n\n\t\tfor (const id of target.layerSelectionIds!) {\n\t\t\twriteUint32(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1032,\n\ttarget => target.gridAndGuidesInformation !== undefined,\n\t(reader, target) => {\n\t\tconst version = readUint32(reader);\n\t\tconst horizontal = readUint32(reader);\n\t\tconst vertical = readUint32(reader);\n\t\tconst count = readUint32(reader);\n\n\t\tif (version !== 1) throw new Error(`Invalid 1032 resource version: ${version}`);\n\n\t\ttarget.gridAndGuidesInformation = {\n\t\t\tgrid: { horizontal, vertical },\n\t\t\tguides: [],\n\t\t};\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\ttarget.gridAndGuidesInformation.guides!.push({\n\t\t\t\tlocation: readUint32(reader) / 32,\n\t\t\t\tdirection: readUint8(reader) ? 'horizontal' : 'vertical'\n\t\t\t});\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tconst info = target.gridAndGuidesInformation!;\n\t\tconst grid = info.grid || { horizontal: 18 * 32, vertical: 18 * 32 };\n\t\tconst guides = info.guides || [];\n\n\t\twriteUint32(writer, 1);\n\t\twriteUint32(writer, grid.horizontal);\n\t\twriteUint32(writer, grid.vertical);\n\t\twriteUint32(writer, guides.length);\n\n\t\tfor (const g of guides) {\n\t\t\twriteUint32(writer, g.location * 32);\n\t\t\twriteUint8(writer, g.direction === 'horizontal' ? 1 : 0);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1054,\n\ttarget => target.urlsList !== undefined,\n\t(reader, target, _, options) => {\n\t\tconst count = readUint32(reader);\n\n\t\tif (count) {\n\t\t\tif (!options.throwForMissingFeatures) return;\n\t\t\tthrow new Error('Not implemented: URL List');\n\t\t}\n\n\t\t// TODO: read actual URL list\n\t\ttarget.urlsList = [];\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, target.urlsList!.length);\n\n\t\t// TODO: write actual URL list\n\t\tif (target.urlsList!.length) {\n\t\t\tthrow new Error('Not implemented: URL List');\n\t\t}\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1050, // Slices\n\ttarget => (target as any)._ir1050 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1050', left());\n\t\t(target as any)._ir1050 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1050);\n\t},\n);\n\naddHandler(\n\t1064,\n\ttarget => target.pixelAspectRatio !== undefined,\n\t(reader, target) => {\n\t\tif (readUint32(reader) > 2) throw new Error('Invalid pixelAspectRatio version');\n\t\ttarget.pixelAspectRatio = { aspect: readFloat64(reader) };\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, 2); // version\n\t\twriteFloat64(writer, target.pixelAspectRatio!.aspect);\n\t},\n);\n\naddHandler(\n\t1041,\n\ttarget => target.iccUntaggedProfile !== undefined,\n\t(reader, target) => {\n\t\ttarget.iccUntaggedProfile = !!readUint8(reader);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.iccUntaggedProfile ? 1 : 0);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1039, // ICC Profile\n\ttarget => (target as any)._ir1039 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1039', left());\n\t\t(target as any)._ir1039 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1039);\n\t},\n);\n\naddHandler(\n\t1044,\n\ttarget => target.idsSeedNumber !== undefined,\n\t(reader, target) => target.idsSeedNumber = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.idsSeedNumber!),\n);\n\naddHandler(\n\t1036,\n\ttarget => target.thumbnail !== undefined || target.thumbnailRaw !== undefined,\n\t(reader, target, left, options) => {\n\t\tconst format = readUint32(reader); // 1 = kJpegRGB, 0 = kRawRGB\n\t\tconst width = readUint32(reader);\n\t\tconst height = readUint32(reader);\n\t\treadUint32(reader); // widthBytes = (width * bits_per_pixel + 31) / 32 * 4.\n\t\treadUint32(reader); // totalSize = widthBytes * height * planes\n\t\treadUint32(reader); // sizeAfterCompression\n\t\tconst bitsPerPixel = readUint16(reader); // 24\n\t\tconst planes = readUint16(reader); // 1\n\n\t\tif (format !== 1 || bitsPerPixel !== 24 || planes !== 1) {\n\t\t\toptions.logMissingFeatures && console.log(`Invalid thumbnail data (format: ${format}, bitsPerPixel: ${bitsPerPixel}, planes: ${planes})`);\n\t\t\tskipBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst size = left();\n\t\tconst data = readBytes(reader, size);\n\n\t\tif (options.useRawThumbnail) {\n\t\t\ttarget.thumbnailRaw = { width, height, data };\n\t\t} else {\n\t\t\ttarget.thumbnail = createCanvasFromData(data);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet data: Uint8Array;\n\n\t\tif (target.thumbnailRaw) {\n\t\t\twidth = target.thumbnailRaw.width;\n\t\t\theight = target.thumbnailRaw.height;\n\t\t\tdata = target.thumbnailRaw.data;\n\t\t} else {\n\t\t\twidth = target.thumbnail!.width;\n\t\t\theight = target.thumbnail!.height;\n\t\t\tdata = toByteArray(target.thumbnail!.toDataURL('image/jpeg', 1).substr('data:image/jpeg;base64,'.length));\n\t\t}\n\n\t\tconst bitsPerPixel = 24;\n\t\tconst widthBytes = Math.floor((width * bitsPerPixel + 31) / 32) * 4;\n\t\tconst planes = 1;\n\t\tconst totalSize = widthBytes * height * planes;\n\t\tconst sizeAfterCompression = data.length;\n\n\t\twriteUint32(writer, 1); // 1 = kJpegRGB\n\t\twriteUint32(writer, width);\n\t\twriteUint32(writer, height);\n\t\twriteUint32(writer, widthBytes);\n\t\twriteUint32(writer, totalSize);\n\t\twriteUint32(writer, sizeAfterCompression);\n\t\twriteUint16(writer, bitsPerPixel);\n\t\twriteUint16(writer, planes);\n\t\twriteBytes(writer, data);\n\t},\n);\n\naddHandler(\n\t1057,\n\ttarget => target.versionInfo !== undefined,\n\t(reader, target, left) => {\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 1) throw new Error('Invalid versionInfo version');\n\n\t\ttarget.versionInfo = {\n\t\t\thasRealMergedData: !!readUint8(reader),\n\t\t\twriterName: readUnicodeString(reader),\n\t\t\treaderName: readUnicodeString(reader),\n\t\t\tfileVersion: readUint32(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst versionInfo = target.versionInfo!;\n\t\twriteUint32(writer, 1); // version\n\t\twriteUint8(writer, versionInfo.hasRealMergedData ? 1 : 0);\n\t\twriteUnicodeString(writer, versionInfo.writerName);\n\t\twriteUnicodeString(writer, versionInfo.readerName);\n\t\twriteUint32(writer, versionInfo.fileVersion);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1058, // EXIF data 1.\n\ttarget => (target as any)._ir1058 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1058', left());\n\t\t(target as any)._ir1058 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1058);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1025,\n\ttarget => (target as any)._ir1025 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1025', left());\n\t\t(target as any)._ir1025 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1025);\n\t},\n);\n\nconst FrmD = createEnum<'auto' | 'none' | 'dispose'>('FrmD', '', {\n\tauto: 'Auto',\n\tnone: 'None',\n\tdispose: 'Disp',\n});\n\ninterface AnimationDescriptor {\n\tAFSt: number;\n\tFrIn: {\n\t\tFrID: number;\n\t\tFrDl: number;\n\t\tFrDs: string;\n\t\tFrGA?: number;\n\t}[];\n\tFSts: {\n\t\tFsID: number;\n\t\tAFrm: number;\n\t\tFsFr: number[];\n\t\tLCnt: number;\n\t}[];\n}\n\ninterface Animations {\n\tframes: {\n\t\tid: number;\n\t\tdelay: number;\n\t\tdispose?: 'auto' | 'none' | 'dispose';\n\t}[];\n\tanimations: {\n\t\tid: number;\n\t\tframes: number[];\n\t\trepeats?: number;\n\t}[];\n}\n\n// TODO: Unfinished\nMOCK_HANDLERS && addHandler(\n\t4000,\n\ttarget => (target as any)._ir4000 !== undefined,\n\t(reader, target, left, { logMissingFeatures, logDevFeatures }) => {\n\t\tif (MOCK_HANDLERS) {\n\t\t\tLOG_MOCK_HANDLERS && console.log('image resource 4000', left());\n\t\t\t(target as any)._ir4000 = readBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = readSignature(reader);\n\n\t\tif (key === 'mani') {\n\t\t\tcheckSignature(reader, 'IRFR');\n\t\t\treadSection(reader, 1, left => {\n\t\t\t\twhile (left()) {\n\t\t\t\t\tcheckSignature(reader, '8BIM');\n\t\t\t\t\tconst key = readSignature(reader);\n\n\t\t\t\t\treadSection(reader, 1, left => {\n\t\t\t\t\t\tif (key === 'AnDs') {\n\t\t\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as AnimationDescriptor;\n\t\t\t\t\t\t\t// console.log('AnDs', desc);\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 AnDs', desc);\n\t\t\t\t\t\t\t// logDevFeatures && console.log('#4000 AnDs', require('util').inspect(desc, false, 99, true));\n\n\t\t\t\t\t\t\tconst result: Animations = {\n\t\t\t\t\t\t\t\t// desc.AFSt ???\n\t\t\t\t\t\t\t\tframes: desc.FrIn.map(x => ({\n\t\t\t\t\t\t\t\t\tid: x.FrID,\n\t\t\t\t\t\t\t\t\tdelay: x.FrDl / 100,\n\t\t\t\t\t\t\t\t\tdispose: x.FrDs ? FrmD.decode(x.FrDs) : 'auto', // missing == auto\n\t\t\t\t\t\t\t\t\t// x.FrGA ???\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\tanimations: desc.FSts.map(x => ({\n\t\t\t\t\t\t\t\t\tid: x.FsID,\n\t\t\t\t\t\t\t\t\tframes: x.FsFr,\n\t\t\t\t\t\t\t\t\trepeats: x.LCnt,\n\t\t\t\t\t\t\t\t\t// x.AFrm ???\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 AnDs:result', result);\n\t\t\t\t\t\t\t// logDevFeatures && console.log('#4000 AnDs:result', require('util').inspect(result, false, 99, true));\n\t\t\t\t\t\t} else if (key === 'Roll') {\n\t\t\t\t\t\t\tconst bytes = readBytes(reader, left());\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 Roll', bytes);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogMissingFeatures && console.log('Unhandled subsection in #4000', key);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (key === 'mopt') {\n\t\t\tconst bytes = readBytes(reader, left());\n\t\t\tlogDevFeatures && console.log('#4000 mopt', bytes);\n\t\t} else {\n\t\t\tlogMissingFeatures && console.log('Unhandled key in #4000:', key);\n\t\t\treturn;\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir4000);\n\t},\n);\n\n// TODO: Unfinished\nMOCK_HANDLERS && addHandler(\n\t4001,\n\ttarget => (target as any)._ir4001 !== undefined,\n\t(reader, target, left, { logMissingFeatures, logDevFeatures }) => {\n\t\tif (MOCK_HANDLERS) {\n\t\t\tLOG_MOCK_HANDLERS && console.log('image resource 4001', left());\n\t\t\t(target as any)._ir4001 = readBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = readSignature(reader);\n\n\t\tif (key === 'mfri') {\n\t\t\tconst version = readUint32(reader);\n\t\t\tif (version !== 2) throw new Error('Invalid mfri version');\n\n\t\t\tconst length = readUint32(reader);\n\t\t\tconst bytes = readBytes(reader, length);\n\t\t\tlogDevFeatures && console.log('mfri', bytes);\n\t\t} else if (key === 'mset') {\n\t\t\tconst desc = readVersionAndDescriptor(reader);\n\t\t\tlogDevFeatures && console.log('mset', desc);\n\t\t} else {\n\t\t\tlogMissingFeatures && console.log('Unhandled key in #4001', key);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir4001);\n\t},\n);\n","function charLengthInBytes(code: number): number {\r\n\tif ((code & 0xffffff80) === 0) {\r\n\t\treturn 1;\r\n\t} else if ((code & 0xfffff800) === 0) {\r\n\t\treturn 2;\r\n\t} else if ((code & 0xffff0000) === 0) {\r\n\t\treturn 3;\r\n\t} else {\r\n\t\treturn 4;\r\n\t}\r\n}\r\n\r\nexport function stringLengthInBytes(value: string): number {\r\n\tlet result = 0;\r\n\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tconst code = value.charCodeAt(i);\r\n\r\n\t\t// high surrogate\r\n\t\tif (code >= 0xd800 && code <= 0xdbff) {\r\n\t\t\tif ((i + 1) < value.length) {\r\n\t\t\t\tconst extra = value.charCodeAt(i + 1);\r\n\r\n\t\t\t\t// low surrogate\r\n\t\t\t\tif ((extra & 0xfc00) === 0xdc00) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tresult += charLengthInBytes(((code & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult += charLengthInBytes(code);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction writeCharacter(buffer: Uint8Array | Buffer, offset: number, code: number): number {\r\n\tconst length = charLengthInBytes(code);\r\n\r\n\tswitch (length) {\r\n\t\tcase 1:\r\n\t\t\tbuffer[offset] = code;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tbuffer[offset] = ((code >> 6) & 0x1f) | 0xc0;\r\n\t\t\tbuffer[offset + 1] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tbuffer[offset] = ((code >> 12) & 0x0f) | 0xe0;\r\n\t\t\tbuffer[offset + 1] = ((code >> 6) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 2] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbuffer[offset] = ((code >> 18) & 0x07) | 0xf0;\r\n\t\t\tbuffer[offset + 1] = ((code >> 12) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 2] = ((code >> 6) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 3] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn length;\r\n}\r\n\r\nexport function encodeStringTo(buffer: Uint8Array | Buffer, offset: number, value: string): number {\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tconst code = value.charCodeAt(i);\r\n\r\n\t\t// high surrogate\r\n\t\tif (code >= 0xd800 && code <= 0xdbff) {\r\n\t\t\tif ((i + 1) < value.length) {\r\n\t\t\t\tconst extra = value.charCodeAt(i + 1);\r\n\r\n\t\t\t\t// low surrogate\r\n\t\t\t\tif ((extra & 0xfc00) === 0xdc00) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tconst fullCode = ((code & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\r\n\t\t\t\t\toffset += writeCharacter(buffer, offset, fullCode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toffset += writeCharacter(buffer, offset, code);\r\n\t\t}\r\n\t}\r\n\r\n\treturn offset;\r\n}\r\n\r\nexport function encodeString(value: string): Uint8Array {\r\n\tconst buffer = new Uint8Array(stringLengthInBytes(value));\r\n\tencodeStringTo(buffer, 0, value);\r\n\treturn buffer;\r\n}\r\n\r\nfunction continuationByte(buffer: Uint8Array, index: number): number {\r\n\tif (index >= buffer.length) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tconst continuationByte = buffer[index];\r\n\r\n\tif ((continuationByte & 0xC0) === 0x80) {\r\n\t\treturn continuationByte & 0x3F;\r\n\t} else {\r\n\t\tthrow Error('Invalid continuation byte');\r\n\t}\r\n}\r\n\r\nexport function decodeString(value: Uint8Array): string {\r\n\tlet result = '';\r\n\r\n\tfor (let i = 0; i < value.length;) {\r\n\t\tconst byte1 = value[i++];\r\n\t\tlet code: number;\r\n\r\n\t\tif ((byte1 & 0x80) === 0) {\r\n\t\t\tcode = byte1;\r\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x1f) << 6) | byte2;\r\n\r\n\t\t\tif (code < 0x80) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tconst byte3 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x0f) << 12) | (byte2 << 6) | byte3;\r\n\r\n\t\t\tif (code < 0x0800) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\r\n\t\t\tif (code >= 0xd800 && code <= 0xdfff) {\r\n\t\t\t\tthrow Error(`Lone surrogate U+${code.toString(16).toUpperCase()} is not a scalar value`);\r\n\t\t\t}\r\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tconst byte3 = continuationByte(value, i++);\r\n\t\t\tconst byte4 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x0f) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\r\n\r\n\t\t\tif (code < 0x010000 || code > 0x10ffff) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid UTF-8 detected');\r\n\t\t}\r\n\r\n\t\tif (code > 0xffff) {\r\n\t\t\tcode -= 0x10000;\r\n\t\t\tresult += String.fromCharCode(code >>> 10 & 0x3ff | 0xd800);\r\n\t\t\tcode = 0xdc00 | code & 0x3ff;\r\n\t\t}\r\n\r\n\t\tresult += String.fromCharCode(code);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","import { createEnum } from './helpers';\r\nimport {\r\n\tAntiAlias, BevelDirection, BevelStyle, BevelTechnique, BlendMode, GlowSource, GlowTechnique, GradientStyle,\r\n\tLineAlignment, LineCapType, LineJoinType, Orientation, TextGridding, Units, UnitsValue, WarpStyle\r\n} from './psd';\r\nimport {\r\n\tPsdReader, readSignature, readUnicodeString, readUint32, readUint8, readFloat64,\r\n\treadBytes, readAsciiString, readInt32, readFloat32, readInt32LE, readUnicodeStringWithLength\r\n} from './psdReader';\r\nimport {\r\n\tPsdWriter, writeSignature, writeBytes, writeUint32, writeFloat64, writeUint8,\r\n\twriteUnicodeStringWithPadding, writeInt32, writeFloat32\r\n} from './psdWriter';\r\n\r\ninterface Dict { [key: string]: string; }\r\ninterface NameClassID { name: string; classID: string; }\r\ninterface ExtTypeDict { [key: string]: NameClassID; }\r\n\r\nfunction revMap(map: Dict) {\r\n\tconst result: Dict = {};\r\n\tObject.keys(map).forEach(key => result[map[key]] = key);\r\n\treturn result;\r\n}\r\n\r\nconst unitsMap: Dict = {\r\n\t'#Ang': 'Angle',\r\n\t'#Rsl': 'Density',\r\n\t'#Rlt': 'Distance',\r\n\t'#Nne': 'None',\r\n\t'#Prc': 'Percent',\r\n\t'#Pxl': 'Pixels',\r\n\t'#Mlm': 'Millimeters',\r\n\t'#Pnt': 'Points',\r\n\t'RrPi': 'Picas',\r\n\t'RrIn': 'Inches',\r\n\t'RrCm': 'Centimeters',\r\n};\r\n\r\nconst unitsMapRev = revMap(unitsMap);\r\nlet logErrors = false;\r\n\r\nexport function setLogErrors(value: boolean) {\r\n\tlogErrors = value;\r\n}\r\n\r\nfunction makeType(name: string, classID: string) {\r\n\treturn { name, classID };\r\n}\r\n\r\nconst fieldToExtType: ExtTypeDict = {\r\n\tstrokeStyleContent: makeType('', 'solidColorLayer'),\r\n\t// printProofSetup: makeType('校样设置', 'proofSetup'), // TESTING\r\n\tprintProofSetup: makeType('Proof Setup', 'proofSetup'),\r\n\tpatternFill: makeType('', 'patternFill'),\r\n\tGrad: makeType('Gradient', 'Grdn'),\r\n\tebbl: makeType('', 'ebbl'),\r\n\tSoFi: makeType('', 'SoFi'),\r\n\tGrFl: makeType('', 'GrFl'),\r\n\tsdwC: makeType('', 'RGBC'),\r\n\thglC: makeType('', 'RGBC'),\r\n\t'Clr ': makeType('', 'RGBC'),\r\n\t'tintColor': makeType('', 'RGBC'),\r\n\tOfst: makeType('', 'Pnt '),\r\n\tChFX: makeType('', 'ChFX'),\r\n\tMpgS: makeType('', 'ShpC'),\r\n\tDrSh: makeType('', 'DrSh'),\r\n\tIrSh: makeType('', 'IrSh'),\r\n\tOrGl: makeType('', 'OrGl'),\r\n\tIrGl: makeType('', 'IrGl'),\r\n\tTrnS: makeType('', 'ShpC'),\r\n\tPtrn: makeType('', 'Ptrn'),\r\n\tFrFX: makeType('', 'FrFX'),\r\n\tphase: makeType('', 'Pnt '),\r\n\tframeStep: makeType('', 'null'),\r\n\tduration: makeType('', 'null'),\r\n\tbounds: makeType('', 'Rctn'),\r\n\tcustomEnvelopeWarp: makeType('', 'customEnvelopeWarp'),\r\n\twarp: makeType('', 'warp'),\r\n\t'Sz  ': makeType('', 'Pnt '),\r\n\torigin: makeType('', 'Pnt '),\r\n\tautoExpandOffset: makeType('', 'Pnt '),\r\n\tkeyOriginShapeBBox: makeType('', 'unitRect'),\r\n\tVrsn: makeType('', 'null'),\r\n\tpsVersion: makeType('', 'null'),\r\n\tdocDefaultNewArtboardBackgroundColor: makeType('', 'RGBC'),\r\n\tartboardRect: makeType('', 'classFloatRect'),\r\n\tkeyOriginRRectRadii: makeType('', 'radii'),\r\n\tcompInfo: makeType('', 'null'),\r\n\tgeneratorSettings: makeType('', 'null'),\r\n};\r\n\r\nconst fieldToArrayExtType: ExtTypeDict = {\r\n\t'Crv ': makeType('', 'CrPt'),\r\n\t'Clrs': makeType('', 'Clrt'),\r\n\t'Trns': makeType('', 'TrnS'),\r\n\t'keyDescriptorList': makeType('', 'null'),\r\n};\r\n\r\nconst typeToField: { [key: string]: string[]; } = {\r\n\t'TEXT': [\r\n\t\t'Txt ', 'printerName', 'Nm  ', 'Idnt', 'blackAndWhitePresetFileName', 'LUT3DFileName',\r\n\t\t'presetFileName', 'curvesPresetFileName', 'mixerPresetFileName', 'placed', 'description', 'reason',\r\n\t\t'artboardPresetName',\r\n\t],\r\n\t'tdta': ['EngineData', 'LUT3DFileData'],\r\n\t'long': [\r\n\t\t'TextIndex', 'RndS', 'Mdpn', 'Smth', 'Lctn', 'strokeStyleVersion', 'LaID', 'Vrsn', 'Cnt ',\r\n\t\t'Brgh', 'Cntr', 'means', 'vibrance', 'Strt', 'bwPresetKind', 'presetKind', 'comp', 'compID', 'originalCompID',\r\n\t\t'curvesPresetKind', 'mixerPresetKind', 'uOrder', 'vOrder', 'PgNm', 'totalPages', 'Crop',\r\n\t\t'numerator', 'denominator', 'frameCount', 'Annt', 'keyOriginType', 'unitValueQuadVersion',\r\n\t\t'keyOriginIndex', 'major', 'minor', 'fix', 'docDefaultNewArtboardBackgroundType', 'artboardBackgroundType',\r\n\t],\r\n\t'enum': [\r\n\t\t'textGridding', 'Ornt', 'warpStyle', 'warpRotate', 'Inte', 'Bltn', 'ClrS',\r\n\t\t'sdwM', 'hglM', 'bvlT', 'bvlS', 'bvlD', 'Md  ', 'glwS', 'GrdF', 'GlwT',\r\n\t\t'strokeStyleLineCapType', 'strokeStyleLineJoinType', 'strokeStyleLineAlignment',\r\n\t\t'strokeStyleBlendMode', 'PntT', 'Styl', 'lookupType', 'LUTFormat', 'dataOrder',\r\n\t\t'tableOrder', 'enableCompCore', 'enableCompCoreGPU', 'compCoreSupport', 'compCoreGPUSupport', 'Engn',\r\n\t],\r\n\t'bool': [\r\n\t\t'PstS', 'printSixteenBit', 'masterFXSwitch', 'enab', 'uglg', 'antialiasGloss',\r\n\t\t'useShape', 'useTexture', 'masterFXSwitch', 'uglg', 'antialiasGloss', 'useShape',\r\n\t\t'useTexture', 'Algn', 'Rvrs', 'Dthr', 'Invr', 'VctC', 'ShTr', 'layerConceals',\r\n\t\t'strokeEnabled', 'fillEnabled', 'strokeStyleScaleLock', 'strokeStyleStrokeAdjust',\r\n\t\t'hardProof', 'MpBl', 'paperWhite', 'useLegacy', 'Auto', 'Lab ', 'useTint', 'keyShapeInvalidated',\r\n\t\t'autoExpandEnabled', 'autoNestEnabled', 'autoPositionEnabled', 'shrinkwrapOnSaveEnabled',\r\n\t],\r\n\t'doub': [\r\n\t\t'warpValue', 'warpPerspective', 'warpPerspectiveOther', 'Intr', 'Wdth', 'Hght',\r\n\t\t'strokeStyleMiterLimit', 'strokeStyleResolution', 'layerTime', 'keyOriginResolution',\r\n\t],\r\n\t'UntF': [\r\n\t\t'Scl ', 'sdwO', 'hglO', 'lagl', 'Lald', 'srgR', 'blur', 'Sftn', 'Opct', 'Dstn', 'Angl',\r\n\t\t'Ckmt', 'Nose', 'Inpr', 'ShdN', 'strokeStyleLineWidth', 'strokeStyleLineDashOffset',\r\n\t\t'strokeStyleOpacity', 'H   ', 'Top ', 'Left', 'Btom', 'Rght', 'Rslt',\r\n\t\t'topRight', 'topLeft', 'bottomLeft', 'bottomRight',\r\n\t],\r\n\t'VlLs': [\r\n\t\t'Crv ', 'Clrs', 'Mnm ', 'Mxm ', 'Trns', 'pathList', 'strokeStyleLineDashSet', 'FrLs',\r\n\t\t'LaSt', 'Trnf', 'nonAffineTransform', 'keyDescriptorList', 'guideIndeces',\r\n\t],\r\n\t'ObAr': ['meshPoints'],\r\n};\r\n\r\nconst channels = [\r\n\t'Rd  ', 'Grn ', 'Bl  ', 'Yllw', 'Ylw ', 'Cyn ', 'Mgnt', 'Blck', 'Gry ', 'Lmnc', 'A   ', 'B   ',\r\n];\r\n\r\nconst fieldToArrayType: Dict = {\r\n\t'Mnm ': 'long',\r\n\t'Mxm ': 'long',\r\n\t'FrLs': 'long',\r\n\t'strokeStyleLineDashSet': 'UntF',\r\n\t'Trnf': 'doub',\r\n\t'nonAffineTransform': 'doub',\r\n\t'keyDescriptorList': 'Objc',\r\n};\r\n\r\nconst fieldToType: Dict = {};\r\n\r\nfor (const type of Object.keys(typeToField)) {\r\n\tfor (const field of typeToField[type]) {\r\n\t\tfieldToType[field] = type;\r\n\t}\r\n}\r\n\r\nfor (const field of Object.keys(fieldToExtType)) {\r\n\tfieldToType[field] = 'Objc';\r\n}\r\n\r\nfor (const field of Object.keys(fieldToArrayExtType)) {\r\n\tfieldToArrayType[field] = 'Objc';\r\n}\r\n\r\nfunction getTypeByKey(key: string, value: any, root: string) {\r\n\tif (key === 'Sz  ') {\r\n\t\treturn ('Wdth' in value) ? 'Objc' : (('units' in value) ? 'UntF' : 'doub');\r\n\t} else if (key === 'Type') {\r\n\t\treturn typeof value === 'string' ? 'enum' : 'long';\r\n\t} else if (key === 'AntA') {\r\n\t\treturn typeof value === 'string' ? 'enum' : 'bool';\r\n\t} else if (key === 'Hrzn' || key === 'Vrtc' || key === 'Top ' || key === 'Left' || key === 'Btom' || key === 'Rght') {\r\n\t\treturn typeof value === 'number' ? 'doub' : 'UntF';\r\n\t} else if (key === 'Vrsn') {\r\n\t\treturn typeof value === 'number' ? 'long' : 'Objc';\r\n\t} else if (key === 'Rd  ' || key === 'Grn ' || key === 'Bl  ') {\r\n\t\treturn root === 'artd' ? 'long' : 'doub';\r\n\t} else {\r\n\t\treturn fieldToType[key];\r\n\t}\r\n}\r\n\r\nexport function readAsciiStringOrClassId(reader: PsdReader) {\r\n\tconst length = readInt32(reader);\r\n\treturn readAsciiString(reader, length || 4);\r\n}\r\n\r\nfunction writeAsciiStringOrClassId(writer: PsdWriter, value: string) {\r\n\tif (value.length === 4 && value !== 'warp') {\r\n\t\t// write classId\r\n\t\twriteInt32(writer, 0);\r\n\t\twriteSignature(writer, value);\r\n\t} else {\r\n\t\t// write ascii string\r\n\t\twriteInt32(writer, value.length);\r\n\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\twriteUint8(writer, value.charCodeAt(i));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function readDescriptorStructure(reader: PsdReader) {\r\n\tconst object: any = {};\r\n\t// object.__struct =\r\n\treadClassStructure(reader);\r\n\tconst itemsCount = readUint32(reader);\r\n\r\n\tfor (let i = 0; i < itemsCount; i++) {\r\n\t\tconst key = readAsciiStringOrClassId(reader);\r\n\t\tconst type = readSignature(reader);\r\n\t\t// console.log(`> '${key}' '${type}'`);\r\n\t\tconst data = readOSType(reader, type);\r\n\t\t// if (!getTypeByKey(key, data)) console.log(`> '${key}' '${type}'`, data);\r\n\t\tobject[key] = data;\r\n\t}\r\n\t// console.log('//', struct);\r\n\treturn object;\r\n}\r\n\r\nexport function writeDescriptorStructure(writer: PsdWriter, name: string, classId: string, value: any, root: string) {\r\n\tif (logErrors && !classId) console.log('Missing classId for: ', name, classId, value);\r\n\r\n\t// write class structure\r\n\twriteUnicodeStringWithPadding(writer, name);\r\n\twriteAsciiStringOrClassId(writer, classId);\r\n\r\n\tconst keys = Object.keys(value);\r\n\twriteUint32(writer, keys.length);\r\n\r\n\tfor (const key of keys) {\r\n\t\tlet type = getTypeByKey(key, value[key], root);\r\n\t\tlet extType = fieldToExtType[key];\r\n\r\n\t\tif ((key === 'Strt' || key === 'Brgh') && 'H   ' in value) {\r\n\t\t\ttype = 'doub';\r\n\t\t} else if (channels.indexOf(key) !== -1) {\r\n\t\t\ttype = (classId === 'RGBC' && root !== 'artd') ? 'doub' : 'long';\r\n\t\t} else if (key === 'profile') {\r\n\t\t\ttype = classId === 'printOutput' ? 'TEXT' : 'tdta';\r\n\t\t} else if (key === 'strokeStyleContent') {\r\n\t\t\tif (value[key]['Clr ']) {\r\n\t\t\t\textType = makeType('', 'solidColorLayer');\r\n\t\t\t} else if (value[key].Grad) {\r\n\t\t\t\textType = makeType('', 'gradientLayer');\r\n\t\t\t} else if (value[key].Ptrn) {\r\n\t\t\t\textType = makeType('', 'patternLayer');\r\n\t\t\t} else {\r\n\t\t\t\tlogErrors && console.log('Invalid strokeStyleContent value', value[key]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (extType && extType.classID === 'RGBC') {\r\n\t\t\tif ('H   ' in value[key]) extType = { classID: 'HSBC', name: '' };\r\n\t\t\t// TODO: other color spaces\r\n\t\t}\r\n\r\n\t\twriteAsciiStringOrClassId(writer, key);\r\n\t\twriteSignature(writer, type || 'long');\r\n\t\twriteOSType(writer, type || 'long', value[key], key, extType, root);\r\n\t\tif (logErrors && !type) console.log(`Missing descriptor field type for: '${key}' in`, value);\r\n\t}\r\n}\r\n\r\nfunction readOSType(reader: PsdReader, type: string) {\r\n\tswitch (type) {\r\n\t\tcase 'obj ': // Reference\r\n\t\t\treturn readReferenceStructure(reader);\r\n\t\tcase 'Objc': // Descriptor\r\n\t\tcase 'GlbO': // GlobalObject same as Descriptor\r\n\t\t\treturn readDescriptorStructure(reader);\r\n\t\tcase 'VlLs': { // List\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\tconst items: any[] = [];\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst type = readSignature(reader);\r\n\t\t\t\t// console.log('  >', type);\r\n\t\t\t\titems.push(readOSType(reader, type));\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tcase 'doub': // Double\r\n\t\t\treturn readFloat64(reader);\r\n\t\tcase 'UntF': { // Unit double\r\n\t\t\tconst units = readSignature(reader);\r\n\t\t\tconst value = readFloat64(reader);\r\n\t\t\tif (!unitsMap[units]) throw new Error(`Invalid units: ${units}`);\r\n\t\t\treturn { units: unitsMap[units], value };\r\n\t\t}\r\n\t\tcase 'UnFl': { // Unit float\r\n\t\t\tconst units = readSignature(reader);\r\n\t\t\tconst value = readFloat32(reader);\r\n\t\t\tif (!unitsMap[units]) throw new Error(`Invalid units: ${units}`);\r\n\t\t\treturn { units: unitsMap[units], value };\r\n\t\t}\r\n\t\tcase 'TEXT': // String\r\n\t\t\treturn readUnicodeString(reader);\r\n\t\tcase 'enum': { // Enumerated\r\n\t\t\tconst type = readAsciiStringOrClassId(reader);\r\n\t\t\tconst value = readAsciiStringOrClassId(reader);\r\n\t\t\treturn `${type}.${value}`;\r\n\t\t}\r\n\t\tcase 'long': // Integer\r\n\t\t\treturn readInt32(reader);\r\n\t\tcase 'comp': { // Large Integer\r\n\t\t\tconst low = readUint32(reader);\r\n\t\t\tconst high = readUint32(reader);\r\n\t\t\treturn { low, high };\r\n\t\t}\r\n\t\tcase 'bool': // Boolean\r\n\t\t\treturn !!readUint8(reader);\r\n\t\tcase 'type': // Class\r\n\t\tcase 'GlbC': // Class\r\n\t\t\treturn readClassStructure(reader);\r\n\t\tcase 'alis': { // Alias\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\treturn readAsciiString(reader, length);\r\n\t\t}\r\n\t\tcase 'tdta': { // Raw Data\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\treturn readBytes(reader, length);\r\n\t\t}\r\n\t\tcase 'ObAr': { // Object array\r\n\t\t\treadInt32(reader); // version: 16\r\n\t\t\treadUnicodeString(reader); // name: ''\r\n\t\t\treadAsciiStringOrClassId(reader); // 'rationalPoint'\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\tconst items: any[] = [];\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst type1 = readAsciiStringOrClassId(reader); // type Hrzn | Vrtc\r\n\t\t\t\treadSignature(reader); // UnFl\r\n\r\n\t\t\t\treadSignature(reader); // units ? '#Pxl'\r\n\t\t\t\tconst valuesCount = readInt32(reader);\r\n\t\t\t\tconst values: number[] = [];\r\n\t\t\t\tfor (let j = 0; j < valuesCount; j++) {\r\n\t\t\t\t\tvalues.push(readFloat64(reader));\r\n\t\t\t\t}\r\n\r\n\t\t\t\titems.push({ type: type1, values });\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tcase 'Pth ': { // File path\r\n\t\t\t/*const length =*/ readInt32(reader);\r\n\t\t\tconst sig = readSignature(reader);\r\n\t\t\t/*const pathSize =*/ readInt32LE(reader);\r\n\t\t\tconst charsCount = readInt32LE(reader);\r\n\t\t\tconst path = readUnicodeStringWithLength(reader, charsCount);\r\n\t\t\treturn { sig, path };\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Invalid TySh descriptor OSType: ${type} at ${reader.offset.toString(16)}`);\r\n\t}\r\n}\r\n\r\nfunction writeOSType(writer: PsdWriter, type: string, value: any, key: string, extType: NameClassID | undefined, root: string) {\r\n\tswitch (type) {\r\n\t\t// case 'obj ': // Reference\r\n\t\t// \twriteReferenceStructure(reader);\r\n\t\tcase 'Objc': // Descriptor\r\n\t\tcase 'GlbO': // GlobalObject same as Descriptor\r\n\t\t\tif (!extType) throw new Error(`Missing ext type for: '${key}' (${JSON.stringify(value)})`);\r\n\t\t\twriteDescriptorStructure(writer, extType.name, extType.classID, value, root);\r\n\t\t\tbreak;\r\n\t\tcase 'VlLs': // List\r\n\t\t\twriteInt32(writer, value.length);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\tconst type = fieldToArrayType[key];\r\n\t\t\t\twriteSignature(writer, type || 'long');\r\n\t\t\t\twriteOSType(writer, type || 'long', value[i], '', fieldToArrayExtType[key], root);\r\n\t\t\t\tif (logErrors && !type) console.log(`Missing descriptor array type for: '${key}' in`, value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'doub': // Double\r\n\t\t\twriteFloat64(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'UntF': // Unit double\r\n\t\t\tif (!unitsMapRev[value.units]) throw new Error(`Invalid units: ${value.units} in ${key}`);\r\n\t\t\twriteSignature(writer, unitsMapRev[value.units]);\r\n\t\t\twriteFloat64(writer, value.value);\r\n\t\t\tbreak;\r\n\t\tcase 'UnFl': // Unit float\r\n\t\t\tif (!unitsMapRev[value.units]) throw new Error(`Invalid units: ${value.units} in ${key}`);\r\n\t\t\twriteSignature(writer, unitsMapRev[value.units]);\r\n\t\t\twriteFloat32(writer, value.value);\r\n\t\t\tbreak;\r\n\t\tcase 'TEXT': // String\r\n\t\t\twriteUnicodeStringWithPadding(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'enum': { // Enumerated\r\n\t\t\tconst [_type, val] = value.split('.');\r\n\t\t\twriteAsciiStringOrClassId(writer, _type);\r\n\t\t\twriteAsciiStringOrClassId(writer, val);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'long': // Integer\r\n\t\t\twriteInt32(writer, value);\r\n\t\t\tbreak;\r\n\t\t// case 'comp': // Large Integer\r\n\t\t// \twriteLargeInteger(reader);\r\n\t\tcase 'bool': // Boolean\r\n\t\t\twriteUint8(writer, value ? 1 : 0);\r\n\t\t\tbreak;\r\n\t\t// case 'type': // Class\r\n\t\t// case 'GlbC': // Class\r\n\t\t// \twriteClassStructure(reader);\r\n\t\t// case 'alis': // Alias\r\n\t\t// \twriteAliasStructure(reader);\r\n\t\tcase 'tdta': // Raw Data\r\n\t\t\twriteInt32(writer, value.byteLength);\r\n\t\t\twriteBytes(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'ObAr': // Object array\r\n\t\t\twriteInt32(writer, 16); // version\r\n\t\t\twriteUnicodeStringWithPadding(writer, ''); // name\r\n\t\t\twriteAsciiStringOrClassId(writer, 'rationalPoint');\r\n\t\t\twriteInt32(writer, value.length);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\twriteAsciiStringOrClassId(writer, value[i].type); // Hrzn | Vrtc\r\n\t\t\t\twriteSignature(writer, 'UnFl');\r\n\t\t\t\twriteSignature(writer, '#Pxl');\r\n\t\t\t\twriteInt32(writer, value[i].values.length);\r\n\r\n\t\t\t\tfor (let j = 0; j < value[i].values.length; j++) {\r\n\t\t\t\t\twriteFloat64(writer, value[i].values[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t// case 'Pth ': // File path\r\n\t\t// \twriteFilePath(reader);\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Not implemented TySh descriptor OSType: ${type}`);\r\n\t}\r\n}\r\n\r\nfunction readReferenceStructure(reader: PsdReader) {\r\n\tconst itemsCount = readInt32(reader);\r\n\tconst items: any[] = [];\r\n\r\n\tfor (let i = 0; i < itemsCount; i++) {\r\n\t\tconst type = readSignature(reader);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'prop': { // Property\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst keyID = readAsciiStringOrClassId(reader);\r\n\t\t\t\titems.push({ name, classID, keyID });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Clss': // Class\r\n\t\t\t\titems.push(readClassStructure(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Enmr': { // Enumerated Reference\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst TypeID = readAsciiStringOrClassId(reader);\r\n\t\t\t\tconst value = readAsciiStringOrClassId(reader);\r\n\t\t\t\titems.push({ name, classID, TypeID, value });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'rele': { // Offset\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst value = readUint32(reader);\r\n\t\t\t\titems.push({ name, classID, value });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Idnt': // Identifier\r\n\t\t\t\titems.push(readInt32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'indx': // Index\r\n\t\t\t\titems.push(readInt32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'name': // Name\r\n\t\t\t\titems.push(readUnicodeString(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid TySh descriptor Reference type: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn items;\r\n}\r\n\r\nfunction readClassStructure(reader: PsdReader) {\r\n\tconst name = readUnicodeString(reader);\r\n\tconst classID = readAsciiStringOrClassId(reader);\r\n\t// console.log({ name, classID });\r\n\treturn { name, classID };\r\n}\r\n\r\nexport function readVersionAndDescriptor(reader: PsdReader) {\r\n\tif (readUint32(reader) !== 16) throw new Error('Invalid descriptor version');\r\n\treturn readDescriptorStructure(reader);\r\n}\r\n\r\nexport function writeVersionAndDescriptor(writer: PsdWriter, name: string, classID: string, descriptor: any, root = '') {\r\n\twriteUint32(writer, 16); // version\r\n\twriteDescriptorStructure(writer, name, classID, descriptor, root);\r\n}\r\n\r\nexport type DescriptorUnits = 'Angle' | 'Density' | 'Distance' | 'None' | 'Percent' | 'Pixels' |\r\n\t'Millimeters' | 'Points' | 'Picas' | 'Inches' | 'Centimeters';\r\n\r\nexport interface DescriptorUnitsValue {\r\n\tunits: DescriptorUnits;\r\n\tvalue: number;\r\n}\r\n\r\nexport type DescriptorColor = {\r\n\t'Rd  ': number;\r\n\t'Grn ': number;\r\n\t'Bl  ': number;\r\n} | {\r\n\t'H   ': DescriptorUnitsValue;\r\n\tStrt: number;\r\n\tBrgh: number;\r\n} | {\r\n\t'Cyn ': number;\r\n\tMgnt: number;\r\n\t'Ylw ': number;\r\n\tBlck: number;\r\n} | {\r\n\t'Gry ': number;\r\n} | {\r\n\tLmnc: number;\r\n\t'A   ': number;\r\n\t'B   ': number;\r\n};\r\n\r\nexport interface DesciptorPattern {\r\n\t'Nm  ': string;\r\n\tIdnt: string;\r\n}\r\n\r\nexport type DesciptorGradient = {\r\n\t'Nm  ': string;\r\n\tGrdF: 'GrdF.CstS';\r\n\tIntr: number;\r\n\tClrs: {\r\n\t\t'Clr ': DescriptorColor;\r\n\t\tType: 'Clry.UsrS';\r\n\t\tLctn: number;\r\n\t\tMdpn: number;\r\n\t}[];\r\n\tTrns: {\r\n\t\tOpct: DescriptorUnitsValue;\r\n\t\tLctn: number;\r\n\t\tMdpn: number;\r\n\t}[];\r\n} | {\r\n\tGrdF: 'GrdF.ClNs';\r\n\tSmth: number;\r\n\t'Nm  ': string;\r\n\tClrS: string;\r\n\tRndS: number;\r\n\tVctC?: boolean;\r\n\tShTr?: boolean;\r\n\t'Mnm ': number[];\r\n\t'Mxm ': number[];\r\n};\r\n\r\nexport interface DescriptorColorContent {\r\n\t'Clr ': DescriptorColor;\r\n}\r\n\r\nexport interface DescriptorGradientContent {\r\n\tGrad: DesciptorGradient;\r\n\tType: string;\r\n\tDthr?: boolean;\r\n\tRvrs?: boolean;\r\n\tAngl?: DescriptorUnitsValue;\r\n\t'Scl '?: DescriptorUnitsValue;\r\n\tAlgn?: boolean;\r\n\tOfst?: { Hrzn: DescriptorUnitsValue; Vrtc: DescriptorUnitsValue; };\r\n}\r\n\r\nexport interface DescriptorPatternContent {\r\n\tPtrn: DesciptorPattern;\r\n\tLnkd?: boolean;\r\n\tphase?: { Hrzn: number; Vrtc: number; };\r\n}\r\n\r\nexport type DescriptorVectorContent = DescriptorColorContent | DescriptorGradientContent | DescriptorPatternContent;\r\n\r\nexport interface StrokeDescriptor {\r\n\tstrokeStyleVersion: number;\r\n\tstrokeEnabled: boolean;\r\n\tfillEnabled: boolean;\r\n\tstrokeStyleLineWidth: DescriptorUnitsValue;\r\n\tstrokeStyleLineDashOffset: DescriptorUnitsValue;\r\n\tstrokeStyleMiterLimit: number;\r\n\tstrokeStyleLineCapType: string;\r\n\tstrokeStyleLineJoinType: string;\r\n\tstrokeStyleLineAlignment: string;\r\n\tstrokeStyleScaleLock: boolean;\r\n\tstrokeStyleStrokeAdjust: boolean;\r\n\tstrokeStyleLineDashSet: DescriptorUnitsValue[];\r\n\tstrokeStyleBlendMode: string;\r\n\tstrokeStyleOpacity: DescriptorUnitsValue;\r\n\tstrokeStyleContent: DescriptorVectorContent;\r\n\tstrokeStyleResolution: number;\r\n}\r\n\r\nexport interface TextDescriptor {\r\n\t'Txt ': string;\r\n\ttextGridding: string;\r\n\tOrnt: string;\r\n\tAntA: string;\r\n\tTextIndex: number;\r\n\tEngineData?: Uint8Array;\r\n}\r\n\r\nexport interface WarpDescriptor {\r\n\twarpStyle: string;\r\n\twarpValue: number;\r\n\twarpPerspective: number;\r\n\twarpPerspectiveOther: number;\r\n\twarpRotate: string;\r\n\tbounds?: {\r\n\t\t'Top ': DescriptorUnitsValue;\r\n\t\tLeft: DescriptorUnitsValue;\r\n\t\tBtom: DescriptorUnitsValue;\r\n\t\tRght: DescriptorUnitsValue;\r\n\t};\r\n\tuOrder: number;\r\n\tvOrder: number;\r\n\tcustomEnvelopeWarp?: {\r\n\t\tmeshPoints: {\r\n\t\t\ttype: 'Hrzn' | 'Vrtc';\r\n\t\t\tvalues: number[];\r\n\t\t}[];\r\n\t};\r\n}\r\n\r\nexport function parseAngle(x: DescriptorUnitsValue) {\r\n\tif (x === undefined) return 0;\r\n\tif (x.units !== 'Angle') throw new Error(`Invalid units: ${x.units}`);\r\n\treturn x.value;\r\n}\r\n\r\nexport function parsePercent(x: DescriptorUnitsValue | undefined) {\r\n\tif (x === undefined) return 1;\r\n\tif (x.units !== 'Percent') throw new Error(`Invalid units: ${x.units}`);\r\n\treturn x.value / 100;\r\n}\r\n\r\nexport function parsePercentOrAngle(x: DescriptorUnitsValue | undefined) {\r\n\tif (x === undefined) return 1;\r\n\tif (x.units === 'Percent') return x.value / 100;\r\n\tif (x.units === 'Angle') return x.value / 360;\r\n\tthrow new Error(`Invalid units: ${x.units}`);\r\n}\r\n\r\nexport function parseUnits({ units, value }: DescriptorUnitsValue): UnitsValue {\r\n\tif (\r\n\t\tunits !== 'Pixels' && units !== 'Millimeters' && units !== 'Points' && units !== 'None' &&\r\n\t\tunits !== 'Picas' && units !== 'Inches' && units !== 'Centimeters' && units !== 'Density'\r\n\t) {\r\n\t\tthrow new Error(`Invalid units: ${JSON.stringify({ units, value })}`);\r\n\t}\r\n\treturn { value, units };\r\n}\r\n\r\nexport function parseUnitsOrNumber(value: DescriptorUnitsValue | number, units: Units = 'Pixels'): UnitsValue {\r\n\tif (typeof value === 'number') return { value, units };\r\n\treturn parseUnits(value);\r\n}\r\n\r\nexport function parseUnitsToNumber({ units, value }: DescriptorUnitsValue, expectedUnits: string): number {\r\n\tif (units !== expectedUnits) throw new Error(`Invalid units: ${JSON.stringify({ units, value })}`);\r\n\treturn value;\r\n}\r\n\r\nexport function unitsAngle(value: number | undefined): DescriptorUnitsValue {\r\n\treturn { units: 'Angle', value: value || 0 };\r\n}\r\n\r\nexport function unitsPercent(value: number | undefined): DescriptorUnitsValue {\r\n\treturn { units: 'Percent', value: Math.round((value || 0) * 100) };\r\n}\r\n\r\nexport function unitsValue(x: UnitsValue | undefined, key: string): DescriptorUnitsValue {\r\n\tif (x == null) return { units: 'Pixels', value: 0 };\r\n\r\n\tif (typeof x !== 'object')\r\n\t\tthrow new Error(`Invalid value: ${JSON.stringify(x)} (key: ${key}) (should have value and units)`);\r\n\r\n\tconst { units, value } = x;\r\n\r\n\tif (typeof value !== 'number')\r\n\t\tthrow new Error(`Invalid value in ${JSON.stringify(x)} (key: ${key})`);\r\n\r\n\tif (\r\n\t\tunits !== 'Pixels' && units !== 'Millimeters' && units !== 'Points' && units !== 'None' &&\r\n\t\tunits !== 'Picas' && units !== 'Inches' && units !== 'Centimeters' && units !== 'Density'\r\n\t) {\r\n\t\tthrow new Error(`Invalid units in ${JSON.stringify(x)} (key: ${key})`);\r\n\t}\r\n\r\n\treturn { units, value };\r\n}\r\n\r\nexport const textGridding = createEnum<TextGridding>('textGridding', 'none', {\r\n\tnone: 'None',\r\n});\r\n\r\nexport const Ornt = createEnum<Orientation>('Ornt', 'horizontal', {\r\n\thorizontal: 'Hrzn',\r\n\tvertical: 'Vrtc',\r\n});\r\n\r\nexport const Annt = createEnum<AntiAlias>('Annt', 'sharp', {\r\n\tnone: 'Anno',\r\n\tsharp: 'antiAliasSharp',\r\n\tcrisp: 'AnCr',\r\n\tstrong: 'AnSt',\r\n\tsmooth: 'AnSm',\r\n});\r\n\r\nexport const warpStyle = createEnum<WarpStyle>('warpStyle', 'none', {\r\n\tnone: 'warpNone',\r\n\tarc: 'warpArc',\r\n\tarcLower: 'warpArcLower',\r\n\tarcUpper: 'warpArcUpper',\r\n\tarch: 'warpArch',\r\n\tbulge: 'warpBulge',\r\n\tshellLower: 'warpShellLower',\r\n\tshellUpper: 'warpShellUpper',\r\n\tflag: 'warpFlag',\r\n\twave: 'warpWave',\r\n\tfish: 'warpFish',\r\n\trise: 'warpRise',\r\n\tfisheye: 'warpFisheye',\r\n\tinflate: 'warpInflate',\r\n\tsqueeze: 'warpSqueeze',\r\n\ttwist: 'warpTwist',\r\n\tcustom: 'warpCustom',\r\n});\r\n\r\nexport const BlnM = createEnum<BlendMode>('BlnM', 'normal', {\r\n\t'normal': 'Nrml',\r\n\t'dissolve': 'Dslv',\r\n\t'darken': 'Drkn',\r\n\t'multiply': 'Mltp',\r\n\t'color burn': 'CBrn',\r\n\t'linear burn': 'linearBurn',\r\n\t'darker color': 'darkerColor',\r\n\t'lighten': 'Lghn',\r\n\t'screen': 'Scrn',\r\n\t'color dodge': 'CDdg',\r\n\t'linear dodge': 'linearDodge',\r\n\t'lighter color': 'lighterColor',\r\n\t'overlay': 'Ovrl',\r\n\t'soft light': 'SftL',\r\n\t'hard light': 'HrdL',\r\n\t'vivid light': 'vividLight',\r\n\t'linear light': 'linearLight',\r\n\t'pin light': 'pinLight',\r\n\t'hard mix': 'hardMix',\r\n\t'difference': 'Dfrn',\r\n\t'exclusion': 'Xclu',\r\n\t'subtract': 'blendSubtraction',\r\n\t'divide': 'blendDivide',\r\n\t'hue': 'H   ',\r\n\t'saturation': 'Strt',\r\n\t'color': 'Clr ',\r\n\t'luminosity': 'Lmns',\r\n});\r\n\r\nexport const BESl = createEnum<BevelStyle>('BESl', 'inner bevel', {\r\n\t'inner bevel': 'InrB',\r\n\t'outer bevel': 'OtrB',\r\n\t'emboss': 'Embs',\r\n\t'pillow emboss': 'PlEb',\r\n\t'stroke emboss': 'strokeEmboss',\r\n});\r\n\r\nexport const bvlT = createEnum<BevelTechnique>('bvlT', 'smooth', {\r\n\t'smooth': 'SfBL',\r\n\t'chisel hard': 'PrBL',\r\n\t'chisel soft': 'Slmt',\r\n});\r\n\r\nexport const BESs = createEnum<BevelDirection>('BESs', 'up', {\r\n\tup: 'In  ',\r\n\tdown: 'Out ',\r\n});\r\n\r\nexport const BETE = createEnum<GlowTechnique>('BETE', 'softer', {\r\n\tsofter: 'SfBL',\r\n\tprecise: 'PrBL',\r\n});\r\n\r\nexport const IGSr = createEnum<GlowSource>('IGSr', 'edge', {\r\n\tedge: 'SrcE',\r\n\tcenter: 'SrcC',\r\n});\r\n\r\nexport const GrdT = createEnum<GradientStyle>('GrdT', 'linear', {\r\n\tlinear: 'Lnr ',\r\n\tradial: 'Rdl ',\r\n\tangle: 'Angl',\r\n\treflected: 'Rflc',\r\n\tdiamond: 'Dmnd',\r\n});\r\n\r\nexport const ClrS = createEnum<'rgb' | 'hsb' | 'lab'>('ClrS', 'rgb', {\r\n\trgb: 'RGBC',\r\n\thsb: 'HSBl',\r\n\tlab: 'LbCl',\r\n});\r\n\r\nexport const FStl = createEnum<'inside' | 'center' | 'outside'>('FStl', 'outside', {\r\n\toutside: 'OutF',\r\n\tcenter: 'CtrF',\r\n\tinside: 'InsF'\r\n});\r\n\r\nexport const FrFl = createEnum<'color' | 'gradient' | 'pattern'>('FrFl', 'color', {\r\n\tcolor: 'SClr',\r\n\tgradient: 'GrFl',\r\n\tpattern: 'Ptrn',\r\n});\r\n\r\nexport const strokeStyleLineCapType = createEnum<LineCapType>('strokeStyleLineCapType', 'butt', {\r\n\tbutt: 'strokeStyleButtCap',\r\n\tround: 'strokeStyleRoundCap',\r\n\tsquare: 'strokeStyleSquareCap',\r\n});\r\n\r\nexport const strokeStyleLineJoinType = createEnum<LineJoinType>('strokeStyleLineJoinType', 'miter', {\r\n\tmiter: 'strokeStyleMiterJoin',\r\n\tround: 'strokeStyleRoundJoin',\r\n\tbevel: 'strokeStyleBevelJoin',\r\n});\r\n\r\nexport const strokeStyleLineAlignment = createEnum<LineAlignment>('strokeStyleLineAlignment', 'inside', {\r\n\tinside: 'strokeStyleAlignInside',\r\n\tcenter: 'strokeStyleAlignCenter',\r\n\toutside: 'strokeStyleAlignOutside',\r\n});\r\n","function isWhitespace(char: number) {\r\n\t// ' ', '\\n', '\\r', '\\t'\r\n\treturn char === 32 || char === 10 || char === 13 || char === 9;\r\n}\r\n\r\nfunction isNumber(char: number) {\r\n\t// 0123456789.-\r\n\treturn (char >= 48 && char <= 57) || char === 46 || char === 45;\r\n}\r\n\r\nexport function parseEngineData(data: number[] | Uint8Array) {\r\n\tlet index = 0;\r\n\r\n\tfunction skipWhitespace() {\r\n\t\twhile (index < data.length && isWhitespace(data[index])) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getTextByte() {\r\n\t\tlet byte = data[index];\r\n\t\tindex++;\r\n\r\n\t\tif (byte === 92) { // \\\r\n\t\t\tbyte = data[index];\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn byte;\r\n\t}\r\n\r\n\tfunction getText() {\r\n\t\tlet result = '';\r\n\r\n\t\tif (data[index] === 41) { // )\r\n\t\t\tindex++;\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t// Strings start with utf-16 BOM\r\n\t\tif (data[index] !== 0xFE || data[index + 1] !== 0xFF) {\r\n\t\t\tthrow new Error('Invalid utf-16 BOM');\r\n\t\t}\r\n\r\n\t\tindex += 2;\r\n\r\n\t\t// ), ( and \\ characters are escaped in ascii manner, remove the escapes before interpreting\r\n\t\t// the bytes as utf-16\r\n\t\twhile (index < data.length && data[index] !== 41) { // )\r\n\t\t\tconst high = getTextByte();\r\n\t\t\tconst low = getTextByte();\r\n\t\t\tconst char = (high << 8) | low;\r\n\t\t\tresult += String.fromCharCode(char);\r\n\t\t}\r\n\r\n\t\tindex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tlet root: any = null;\r\n\tconst stack: any[] = [];\r\n\r\n\tfunction pushContainer(value: any) {\r\n\t\tif (!stack.length) {\r\n\t\t\tstack.push(value);\r\n\t\t\troot = value;\r\n\t\t} else {\r\n\t\t\tpushValue(value);\r\n\t\t\tstack.push(value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pushValue(value: any) {\r\n\t\tif (!stack.length) throw new Error('Invalid data');\r\n\r\n\t\tconst top = stack[stack.length - 1];\r\n\r\n\t\tif (typeof top === 'string') {\r\n\t\t\tstack[stack.length - 2][top] = value;\r\n\t\t\tpop();\r\n\t\t} else if (Array.isArray(top)) {\r\n\t\t\ttop.push(value);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid data');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pushProperty(name: string) {\r\n\t\tif (!stack.length) pushContainer({});\r\n\r\n\t\tconst top = stack[stack.length - 1];\r\n\r\n\t\tif (top && typeof top === 'string') {\r\n\t\t\tif (name === 'nil') {\r\n\t\t\t\tpushValue(null);\r\n\t\t\t} else {\r\n\t\t\t\tpushValue(`/${name}`);\r\n\t\t\t}\r\n\t\t} else if (top && typeof top === 'object') {\r\n\t\t\tstack.push(name);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid data');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pop() {\r\n\t\tif (!stack.length) throw new Error('Invalid data');\r\n\t\tstack.pop();\r\n\t}\r\n\r\n\tskipWhitespace();\r\n\r\n\twhile (index < data.length) {\r\n\t\tconst i = index;\r\n\t\tconst char = data[i];\r\n\r\n\t\tif (char === 60 && data[i + 1] === 60) { // <<\r\n\t\t\tindex += 2;\r\n\t\t\tpushContainer({});\r\n\t\t} else if (char === 62 && data[i + 1] === 62) { // >>\r\n\t\t\tindex += 2;\r\n\t\t\tpop();\r\n\t\t} else if (char === 47) { // /\r\n\t\t\tindex += 1;\r\n\t\t\tconst start = index;\r\n\r\n\t\t\twhile (index < data.length && !isWhitespace(data[index])) {\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tlet name = '';\r\n\r\n\t\t\tfor (let i = start; i < index; i++) {\r\n\t\t\t\tname += String.fromCharCode(data[i]);\r\n\t\t\t}\r\n\r\n\t\t\tpushProperty(name);\r\n\t\t} else if (char === 40) { // (\r\n\t\t\tindex += 1;\r\n\t\t\tpushValue(getText());\r\n\t\t} else if (char === 91) { // [\r\n\t\t\tindex += 1;\r\n\t\t\tpushContainer([]);\r\n\t\t} else if (char === 93) { // ]\r\n\t\t\tindex += 1;\r\n\t\t\tpop();\r\n\t\t} else if (char === 110 && data[i + 1] === 117 && data[i + 2] === 108 && data[i + 3] === 108) { // null\r\n\t\t\tindex += 4;\r\n\t\t\tpushValue(null);\r\n\t\t} else if (char === 116 && data[i + 1] === 114 && data[i + 2] === 117 && data[i + 3] === 101) { // true\r\n\t\t\tindex += 4;\r\n\t\t\tpushValue(true);\r\n\t\t} else if (char === 102 && data[i + 1] === 97 && data[i + 2] === 108 && data[i + 3] === 115 && data[i + 4] === 101) { // false\r\n\t\t\tindex += 5;\r\n\t\t\tpushValue(false);\r\n\t\t} else if (isNumber(char)) {\r\n\t\t\tlet value = '';\r\n\r\n\t\t\twhile (index < data.length && isNumber(data[index])) {\r\n\t\t\t\tvalue += String.fromCharCode(data[index]);\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tpushValue(parseFloat(value));\r\n\t\t} else {\r\n\t\t\tindex += 1;\r\n\t\t\tconsole.log(`Invalid token ${String.fromCharCode(char)} at ${index}`);\r\n\t\t\t// ` near ${String.fromCharCode.apply(null, data.slice(index - 10, index + 20) as any)}` +\r\n\t\t\t// `data [${Array.from(data.slice(index - 10, index + 20)).join(', ')}]`\r\n\t\t}\r\n\r\n\t\tskipWhitespace();\r\n\t}\r\n\r\n\treturn root;\r\n}\r\n\r\nconst floatKeys = [\r\n\t'Axis', 'XY', 'Zone', 'WordSpacing', 'FirstLineIndent', 'GlyphSpacing', 'StartIndent', 'EndIndent', 'SpaceBefore',\r\n\t'SpaceAfter', 'LetterSpacing', 'Values', 'GridSize', 'GridLeading', 'PointBase', 'BoxBounds', 'TransformPoint0', 'TransformPoint1',\r\n\t'TransformPoint2', 'FontSize', 'Leading', 'HorizontalScale', 'VerticalScale', 'BaselineShift', 'Tsume',\r\n\t'OutlineWidth',\r\n];\r\n\r\nconst intArrays = ['RunLengthArray'];\r\n\r\n// TODO: handle /nil\r\nexport function serializeEngineData(data: any, condensed = false) {\r\n\tlet buffer = new Uint8Array(1024);\r\n\tlet offset = 0;\r\n\tlet indent = 0;\r\n\r\n\tfunction write(value: number) {\r\n\t\tif (offset >= buffer.length) {\r\n\t\t\tconst newBuffer = new Uint8Array(buffer.length * 2);\r\n\t\t\tnewBuffer.set(buffer);\r\n\t\t\tbuffer = newBuffer;\r\n\t\t}\r\n\r\n\t\tbuffer[offset] = value;\r\n\t\toffset++;\r\n\t}\r\n\r\n\tfunction writeString(value: string) {\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\twrite(value.charCodeAt(i));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction writeIndent() {\r\n\t\tif (condensed) {\r\n\t\t\twriteString(' ');\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < indent; i++) {\r\n\t\t\t\twriteString('\\t');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction writeProperty(key: string, value: any) {\r\n\t\twriteIndent();\r\n\t\twriteString(`/${key}`);\r\n\t\twriteValue(value, key, true);\r\n\t\tif (!condensed) writeString('\\n');\r\n\t}\r\n\r\n\tfunction serializeInt(value: number) {\r\n\t\treturn value.toString();\r\n\t}\r\n\r\n\tfunction serializeFloat(value: number) {\r\n\t\treturn value.toFixed(5)\r\n\t\t\t.replace(/(\\d)0+$/g, '$1')\r\n\t\t\t.replace(/^0+\\.([1-9])/g, '.$1')\r\n\t\t\t.replace(/^-0+\\.0(\\d)/g, '-.0$1');\r\n\t}\r\n\r\n\tfunction serializeNumber(value: number, key?: string) {\r\n\t\tconst isFloat = (key && floatKeys.indexOf(key) !== -1) || (value | 0) !== value;\r\n\t\treturn isFloat ? serializeFloat(value) : serializeInt(value);\r\n\t}\r\n\r\n\tfunction getKeys(value: any) {\r\n\t\tconst keys = Object.keys(value);\r\n\r\n\t\tif (keys.indexOf('98') !== -1)\r\n\t\t\tkeys.unshift(...keys.splice(keys.indexOf('99'), 1));\r\n\r\n\t\tif (keys.indexOf('99') !== -1)\r\n\t\t\tkeys.unshift(...keys.splice(keys.indexOf('99'), 1));\r\n\r\n\t\treturn keys;\r\n\t}\r\n\r\n\tfunction writeStringByte(value: number) {\r\n\t\tif (value === 40 || value === 41 || value === 92) { // ( ) \\\r\n\t\t\twrite(92); // \\\r\n\t\t}\r\n\r\n\t\twrite(value);\r\n\t}\r\n\r\n\tfunction writeValue(value: any, key?: string, inProperty = false) {\r\n\t\tfunction writePrefix() {\r\n\t\t\tif (inProperty) {\r\n\t\t\t\twriteString(' ');\r\n\t\t\t} else {\r\n\t\t\t\twriteIndent();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(condensed ? '/nil' : 'null');\r\n\t\t} else if (typeof value === 'number') {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(serializeNumber(value, key));\r\n\t\t} else if (typeof value === 'boolean') {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(value ? 'true' : 'false');\r\n\t\t} else if (typeof value === 'string') {\r\n\t\t\twritePrefix();\r\n\r\n\t\t\tif ((key === '99' || key === '98') && value.charAt(0) === '/') {\r\n\t\t\t\twriteString(value);\r\n\t\t\t} else {\r\n\t\t\t\twriteString('(');\r\n\t\t\t\twrite(0xfe);\r\n\t\t\t\twrite(0xff);\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\tconst code = value.charCodeAt(i);\r\n\t\t\t\t\twriteStringByte((code >> 8) & 0xff);\r\n\t\t\t\t\twriteStringByte(code & 0xff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteString(')');\r\n\t\t\t}\r\n\t\t} else if (Array.isArray(value)) {\r\n\t\t\twritePrefix();\r\n\r\n\t\t\tif (value.every(x => typeof x === 'number')) {\r\n\t\t\t\twriteString('[');\r\n\r\n\t\t\t\tconst intArray = intArrays.indexOf(key!) !== -1;\r\n\r\n\t\t\t\tfor (const x of value) {\r\n\t\t\t\t\twriteString(' ');\r\n\t\t\t\t\twriteString(intArray ? serializeNumber(x) : serializeFloat(x));\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteString(' ]');\r\n\t\t\t} else {\r\n\t\t\t\twriteString('[');\r\n\t\t\t\tif (!condensed) writeString('\\n');\r\n\r\n\t\t\t\tfor (const x of value) {\r\n\t\t\t\t\twriteValue(x, key);\r\n\t\t\t\t\tif (!condensed) writeString('\\n');\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteIndent();\r\n\t\t\t\twriteString(']');\r\n\t\t\t}\r\n\t\t} else if (typeof value === 'object') {\r\n\t\t\tif (inProperty && !condensed) writeString('\\n');\r\n\r\n\t\t\twriteIndent();\r\n\t\t\twriteString('<<');\r\n\r\n\t\t\tif (!condensed) writeString('\\n');\r\n\r\n\t\t\tindent++;\r\n\r\n\t\t\tfor (const key of getKeys(value)) {\r\n\t\t\t\twriteProperty(key, value[key]);\r\n\t\t\t}\r\n\r\n\t\t\tindent--;\r\n\t\t\twriteIndent();\r\n\t\t\twriteString('>>');\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tif (condensed) {\r\n\t\tif (typeof data === 'object') {\r\n\t\t\tfor (const key of getKeys(data)) {\r\n\t\t\t\twriteProperty(key, data[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\twriteString('\\n\\n');\r\n\t\twriteValue(data);\r\n\t}\r\n\r\n\treturn buffer.slice(0, offset);\r\n}\r\n","import { TextStyle, LayerTextData, ParagraphStyle, Font, AntiAlias, TextGridInfo, Justification, Color } from './psd';\r\n\r\ninterface Adjustments {\r\n\tAxis: number[];\r\n\tXY: number[];\r\n}\r\n\r\ninterface TypeValues {\r\n\tType: number;\r\n\tValues: number[];\r\n}\r\n\r\ninterface ParagraphProperties {\r\n\tJustification?: number;\r\n\tFirstLineIndent?: number;\r\n\tStartIndent?: number;\r\n\tEndIndent?: number;\r\n\tSpaceBefore?: number;\r\n\tSpaceAfter?: number;\r\n\tAutoHyphenate?: boolean;\r\n\tHyphenatedWordSize?: number;\r\n\tPreHyphen?: number;\r\n\tPostHyphen?: number;\r\n\tConsecutiveHyphens?: number;\r\n\tZone?: number;\r\n\tWordSpacing?: number[];\r\n\tLetterSpacing?: number[];\r\n\tGlyphSpacing?: number[];\r\n\tAutoLeading?: number;\r\n\tLeadingType?: number;\r\n\tHanging?: boolean;\r\n\tBurasagari?: boolean;\r\n\tKinsokuOrder?: number;\r\n\tEveryLineComposer?: boolean;\r\n}\r\n\r\ninterface ParagraphSheet {\r\n\tName?: string;\r\n\tDefaultStyleSheet: number;\r\n\tProperties: ParagraphProperties;\r\n}\r\n\r\ninterface StyleSheetData {\r\n\tFont?: number;\r\n\tFontSize?: number;\r\n\tFauxBold?: boolean;\r\n\tFauxItalic?: boolean;\r\n\tAutoLeading?: boolean;\r\n\tLeading?: number;\r\n\tHorizontalScale?: number;\r\n\tVerticalScale?: number;\r\n\tTracking?: number;\r\n\tAutoKerning?: boolean;\r\n\tKerning?: number;\r\n\tBaselineShift?: number;\r\n\tFontCaps?: number;\r\n\tFontBaseline?: number;\r\n\tUnderline?: boolean;\r\n\tStrikethrough?: boolean;\r\n\tLigatures?: boolean;\r\n\tDLigatures?: boolean;\r\n\tBaselineDirection?: number;\r\n\tTsume?: number;\r\n\tStyleRunAlignment?: number;\r\n\tLanguage?: number;\r\n\tNoBreak?: boolean;\r\n\tFillColor?: TypeValues;\r\n\tStrokeColor?: TypeValues;\r\n\tFillFlag?: boolean;\r\n\tStrokeFlag?: boolean;\r\n\tFillFirst?: boolean;\r\n\tYUnderline?: number;\r\n\tOutlineWidth?: number;\r\n\tCharacterDirection?: number;\r\n\tHindiNumbers?: boolean;\r\n\tKashida?: number;\r\n\tDiacriticPos?: number;\r\n}\r\n\r\ninterface FontSet {\r\n\tName: string;\r\n\tScript: number;\r\n\tFontType: number;\r\n\tSynthetic: number;\r\n}\r\n\r\ninterface ResourceDict {\r\n\tKinsokuSet: any[];\r\n\tMojiKumiSet: any[];\r\n\tTheNormalStyleSheet: number;\r\n\tTheNormalParagraphSheet: number;\r\n\tParagraphSheetSet: ParagraphSheet[];\r\n\tStyleSheetSet: { Name: string; StyleSheetData: StyleSheetData; }[];\r\n\tFontSet: FontSet[];\r\n\tSuperscriptSize: number;\r\n\tSuperscriptPosition: number;\r\n\tSubscriptSize: number;\r\n\tSubscriptPosition: number;\r\n\tSmallCapSize: number;\r\n}\r\n\r\ninterface ParagraphRun {\r\n\tParagraphSheet: ParagraphSheet;\r\n\tAdjustments: Adjustments;\r\n}\r\n\r\ninterface StyleRun {\r\n\tStyleSheet: { StyleSheetData: StyleSheetData; };\r\n}\r\n\r\ninterface PhotoshopNode {\r\n\tShapeType?: number;\r\n\tPointBase?: number[];\r\n\tBoxBounds?: number[];\r\n\tBase?: {\r\n\t\tShapeType: number;\r\n\t\tTransformPoint0: number[];\r\n\t\tTransformPoint1: number[];\r\n\t\tTransformPoint2: number[];\r\n\t};\r\n}\r\n\r\ninterface EngineData {\r\n\tEngineDict: {\r\n\t\tEditor: { Text: string; };\r\n\t\tParagraphRun: {\r\n\t\t\tDefaultRunData: ParagraphRun;\r\n\t\t\tRunArray: ParagraphRun[];\r\n\t\t\tRunLengthArray: number[];\r\n\t\t\tIsJoinable: number;\r\n\t\t};\r\n\t\tStyleRun: {\r\n\t\t\tDefaultRunData: StyleRun;\r\n\t\t\tRunArray: StyleRun[];\r\n\t\t\tRunLengthArray: number[];\r\n\t\t\tIsJoinable: number;\r\n\t\t};\r\n\t\tGridInfo: {\r\n\t\t\tGridIsOn: boolean;\r\n\t\t\tShowGrid: boolean;\r\n\t\t\tGridSize: number;\r\n\t\t\tGridLeading: number;\r\n\t\t\tGridColor: TypeValues;\r\n\t\t\tGridLeadingFillColor: TypeValues;\r\n\t\t\tAlignLineHeightToGridFlags: boolean;\r\n\t\t};\r\n\t\tAntiAlias: number;\r\n\t\tUseFractionalGlyphWidths: boolean;\r\n\t\tRendered?: {\r\n\t\t\tVersion: number;\r\n\t\t\tShapes?: {\r\n\t\t\t\tWritingDirection: number;\r\n\t\t\t\tChildren?: {\r\n\t\t\t\t\tShapeType?: number;\r\n\t\t\t\t\tProcession: number;\r\n\t\t\t\t\tLines: { WritingDirection: number; Children: any[]; };\r\n\t\t\t\t\tCookie?: {\r\n\t\t\t\t\t\tPhotoshop?: PhotoshopNode;\r\n\t\t\t\t\t};\r\n\t\t\t\t}[];\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\tResourceDict: ResourceDict;\r\n\tDocumentResources: ResourceDict;\r\n}\r\n\r\nconst defaultFont: Font = {\r\n\tname: 'MyriadPro-Regular',\r\n\tscript: 0,\r\n\ttype: 0,\r\n\tsynthetic: 0,\r\n};\r\n\r\nconst defaultParagraphStyle: ParagraphStyle = {\r\n\tjustification: 'left',\r\n\tfirstLineIndent: 0,\r\n\tstartIndent: 0,\r\n\tendIndent: 0,\r\n\tspaceBefore: 0,\r\n\tspaceAfter: 0,\r\n\tautoHyphenate: true,\r\n\thyphenatedWordSize: 6,\r\n\tpreHyphen: 2,\r\n\tpostHyphen: 2,\r\n\tconsecutiveHyphens: 8,\r\n\tzone: 36,\r\n\twordSpacing: [0.8, 1, 1.33],\r\n\tletterSpacing: [0, 0, 0],\r\n\tglyphSpacing: [1, 1, 1],\r\n\tautoLeading: 1.2,\r\n\tleadingType: 0,\r\n\thanging: false,\r\n\tburasagari: false,\r\n\tkinsokuOrder: 0,\r\n\teveryLineComposer: false,\r\n};\r\n\r\nconst defaultStyle: TextStyle = {\r\n\tfont: defaultFont,\r\n\tfontSize: 12,\r\n\tfauxBold: false,\r\n\tfauxItalic: false,\r\n\tautoLeading: true,\r\n\tleading: 0,\r\n\thorizontalScale: 1,\r\n\tverticalScale: 1,\r\n\ttracking: 0,\r\n\tautoKerning: true,\r\n\tkerning: 0,\r\n\tbaselineShift: 0,\r\n\tfontCaps: 0,\r\n\tfontBaseline: 0,\r\n\tunderline: false,\r\n\tstrikethrough: false,\r\n\tligatures: true,\r\n\tdLigatures: false,\r\n\tbaselineDirection: 2,\r\n\ttsume: 0,\r\n\tstyleRunAlignment: 2,\r\n\tlanguage: 0,\r\n\tnoBreak: false,\r\n\tfillColor: { r: 0, g: 0, b: 0 },\r\n\tstrokeColor: { r: 0, g: 0, b: 0 },\r\n\tfillFlag: true,\r\n\tstrokeFlag: false,\r\n\tfillFirst: true,\r\n\tyUnderline: 1,\r\n\toutlineWidth: 1,\r\n\tcharacterDirection: 0,\r\n\thindiNumbers: false,\r\n\tkashida: 1,\r\n\tdiacriticPos: 2,\r\n};\r\n\r\nconst defaultGridInfo: TextGridInfo = {\r\n\tisOn: false,\r\n\tshow: false,\r\n\tsize: 18,\r\n\tleading: 22,\r\n\tcolor: { r: 0, g: 0, b: 255 },\r\n\tleadingFillColor: { r: 0, g: 0, b: 255 },\r\n\talignLineHeightToGridFlags: false,\r\n};\r\n\r\nconst paragraphStyleKeys: (keyof ParagraphStyle)[] = [\r\n\t'justification', 'firstLineIndent', 'startIndent', 'endIndent', 'spaceBefore', 'spaceAfter',\r\n\t'autoHyphenate', 'hyphenatedWordSize', 'preHyphen', 'postHyphen', 'consecutiveHyphens',\r\n\t'zone', 'wordSpacing', 'letterSpacing', 'glyphSpacing', 'autoLeading', 'leadingType',\r\n\t'hanging', 'burasagari', 'kinsokuOrder', 'everyLineComposer',\r\n];\r\n\r\nconst styleKeys: (keyof TextStyle)[] = [\r\n\t'font', 'fontSize', 'fauxBold', 'fauxItalic', 'autoLeading', 'leading', 'horizontalScale',\r\n\t'verticalScale', 'tracking', 'autoKerning', 'kerning', 'baselineShift', 'fontCaps', 'fontBaseline',\r\n\t'underline', 'strikethrough', 'ligatures', 'dLigatures', 'baselineDirection', 'tsume',\r\n\t'styleRunAlignment', 'language', 'noBreak', 'fillColor', 'strokeColor', 'fillFlag',\r\n\t'strokeFlag', 'fillFirst', 'yUnderline', 'outlineWidth', 'characterDirection', 'hindiNumbers',\r\n\t'kashida', 'diacriticPos',\r\n];\r\n\r\nconst antialias: AntiAlias[] = ['none', 'crisp', 'strong', 'smooth', 'sharp'];\r\nconst justification: Justification[] = ['left', 'right', 'center'];\r\n\r\nfunction upperFirst(value: string) {\r\n\treturn value.substr(0, 1).toUpperCase() + value.substr(1);\r\n}\r\n\r\nfunction decodeColor(color: { Type: number; Values: number[]; }): Color {\r\n\tconst c = color.Values;\r\n\r\n\tif (color.Type === 0) { // grayscale\r\n\t\treturn { r: c[1] * 255, g: c[1] * 255, b: c[1] * 255 }; // , c[0] * 255];\r\n\t} else { // rgb\r\n\t\treturn { r: c[1] * 255, g: c[2] * 255, b: c[3] * 255, a: c[0] }; // , c[0] * 255];\r\n\t}\r\n}\r\n\r\nfunction encodeColor(color: Color | undefined) {\r\n\tif (color && 'r' in color) {\r\n\t\treturn ['a' in color ? color.a : 1, color.r / 255, color.g / 255, color.b / 255];\r\n\t} else {\r\n\t\treturn [0, 0, 0, 0];\r\n\t}\r\n}\r\n\r\nfunction arraysEqual(a: any[], b: any[]) {\r\n\tif (!a || !b) return false;\r\n\tif (a.length !== b.length) return false;\r\n\tfor (let i = 0; i < a.length; i++) if (a[i] !== b[i]) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction objectsEqual(a: any, b: any) {\r\n\tif (!a || !b) return false;\r\n\tfor (const key of Object.keys(a)) if (a[key] !== b[key]) return false;\r\n\tfor (const key of Object.keys(b)) if (a[key] !== b[key]) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction findOrAddFont(fonts: Font[], font: Font) {\r\n\tfor (let i = 0; i < fonts.length; i++) {\r\n\t\tif (fonts[i].name === font.name) return i;\r\n\t}\r\n\r\n\tfonts.push(font);\r\n\treturn fonts.length - 1;\r\n}\r\n\r\nfunction decodeObject(obj: any, keys: string[], fonts: Font[]) {\r\n\tconst result: any = {};\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst Key = upperFirst(key);\r\n\r\n\t\tif (obj[Key] === undefined) continue;\r\n\r\n\t\tif (key === 'justification') {\r\n\t\t\tresult[key] = justification[obj[Key]];\r\n\t\t} else if (key === 'font') {\r\n\t\t\tresult[key] = fonts[obj[Key]];\r\n\t\t} else if (key === 'fillColor' || key === 'strokeColor') {\r\n\t\t\tresult[key] = decodeColor(obj[Key]);\r\n\t\t} else {\r\n\t\t\tresult[key] = obj[Key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction encodeObject(obj: any, keys: string[], fonts: Font[]) {\r\n\tconst result: any = {};\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst Key = upperFirst(key);\r\n\r\n\t\tif (obj[key] === undefined) continue;\r\n\r\n\t\tif (key === 'justification') {\r\n\t\t\tresult[Key] = justification.indexOf(obj[key] ?? 'left');\r\n\t\t} else if (key === 'font') {\r\n\t\t\tresult[Key] = findOrAddFont(fonts, obj[key]);\r\n\t\t} else if (key === 'fillColor' || key === 'strokeColor') {\r\n\t\t\tresult[Key] = { Type: 1, Values: encodeColor(obj[key]) } as TypeValues;\r\n\t\t} else {\r\n\t\t\tresult[Key] = obj[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction decodeParagraphStyle(obj: ParagraphProperties, fonts: Font[]): ParagraphStyle {\r\n\treturn decodeObject(obj, paragraphStyleKeys, fonts);\r\n}\r\n\r\nfunction decodeStyle(obj: StyleSheetData, fonts: Font[]): TextStyle {\r\n\treturn decodeObject(obj, styleKeys, fonts);\r\n}\r\n\r\nfunction encodeParagraphStyle(obj: ParagraphStyle, fonts: Font[]): ParagraphProperties {\r\n\treturn encodeObject(obj, paragraphStyleKeys, fonts);\r\n}\r\n\r\nfunction encodeStyle(obj: TextStyle, fonts: Font[]): StyleSheetData {\r\n\treturn encodeObject(obj, styleKeys, fonts);\r\n}\r\n\r\nfunction deduplicateValues<T>(base: T, runs: { style: T; }[], keys: (keyof T)[]) {\r\n\tif (!runs.length) return;\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst value = runs[0].style[key];\r\n\r\n\t\tif (value !== undefined) {\r\n\t\t\tlet identical = false;\r\n\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tidentical = runs.every(r => arraysEqual(r.style[key] as any, value));\r\n\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\tidentical = runs.every(r => objectsEqual(r.style[key] as any, value));\r\n\t\t\t} else {\r\n\t\t\t\tidentical = runs.every(r => r.style[key] === value);\r\n\t\t\t}\r\n\r\n\t\t\tif (identical) {\r\n\t\t\t\tbase[key] = value as any;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst styleValue = base[key];\r\n\r\n\t\tif (styleValue !== undefined) {\r\n\t\t\tfor (const r of runs) {\r\n\t\t\t\tlet same = false;\r\n\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tsame = arraysEqual(r.style[key] as any, value);\r\n\t\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\t\tsame = objectsEqual(r.style[key] as any, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsame = r.style[key] === value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (same) delete r.style[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (runs.every(x => Object.keys(x.style).length === 0)) {\r\n\t\truns.length = 0;\r\n\t}\r\n}\r\n\r\nexport function decodeEngineData(engineData: EngineData) {\r\n\tconst engineDict = engineData.EngineDict;\r\n\tconst resourceDict = engineData.ResourceDict;\r\n\r\n\tconst fonts = resourceDict.FontSet.map<Font>(f => ({\r\n\t\tname: f.Name,\r\n\t\tscript: f.Script,\r\n\t\ttype: f.FontType,\r\n\t\tsynthetic: f.Synthetic,\r\n\t}));\r\n\r\n\tconst result: LayerTextData = {\r\n\t\ttext: engineDict.Editor.Text.replace(/\\r/g, '\\n').replace(/\\n$/, ''),\r\n\t\tantiAlias: antialias[engineDict.AntiAlias] ?? 'smooth',\r\n\t\tuseFractionalGlyphWidths: !!engineDict.UseFractionalGlyphWidths,\r\n\t\tsuperscriptSize: resourceDict.SuperscriptSize,\r\n\t\tsuperscriptPosition: resourceDict.SuperscriptPosition,\r\n\t\tsubscriptSize: resourceDict.SubscriptSize,\r\n\t\tsubscriptPosition: resourceDict.SubscriptPosition,\r\n\t\tsmallCapSize: resourceDict.SmallCapSize,\r\n\t};\r\n\r\n\t// shape\r\n\r\n\tconst photoshop = engineDict.Rendered?.Shapes?.Children?.[0]?.Cookie?.Photoshop;\r\n\r\n\tif (photoshop) {\r\n\t\tresult.shapeType = photoshop.ShapeType === 1 ? 'box' : 'point';\r\n\t\tif (photoshop.PointBase) result.pointBase = photoshop.PointBase;\r\n\t\tif (photoshop.BoxBounds) result.boxBounds = photoshop.BoxBounds;\r\n\t}\r\n\r\n\t// paragraph style\r\n\r\n\t// const theNormalParagraphSheet = resourceDict.TheNormalParagraphSheet;\r\n\t// const paragraphSheetSet = resourceDict.ParagraphSheetSet;\r\n\t// const paragraphProperties = paragraphSheetSet[theNormalParagraphSheet].Properties;\r\n\tconst paragraphRun = engineData.EngineDict.ParagraphRun;\r\n\r\n\tresult.paragraphStyle = {}; // decodeParagraphStyle(paragraphProperties, fonts);\r\n\tresult.paragraphStyleRuns = [];\r\n\r\n\tfor (let i = 0; i < paragraphRun.RunArray.length; i++) {\r\n\t\tconst run = paragraphRun.RunArray[i];\r\n\t\tconst length = paragraphRun.RunLengthArray[i];\r\n\t\tconst style = decodeParagraphStyle(run.ParagraphSheet.Properties, fonts);\r\n\t\t// const adjustments = {\r\n\t\t//   axis: run.Adjustments.Axis,\r\n\t\t//   xy: run.Adjustments.XY,\r\n\t\t// };\r\n\t\tresult.paragraphStyleRuns.push({ length, style/*, adjustments*/ });\r\n\t}\r\n\r\n\tdeduplicateValues(result.paragraphStyle, result.paragraphStyleRuns, paragraphStyleKeys);\r\n\r\n\tif (!result.paragraphStyleRuns.length) delete result.paragraphStyleRuns;\r\n\r\n\t// style\r\n\r\n\t// const theNormalStyleSheet = resourceDict.TheNormalStyleSheet;\r\n\t// const styleSheetSet = resourceDict.StyleSheetSet;\r\n\t// const styleSheetData = styleSheetSet[theNormalStyleSheet].StyleSheetData;\r\n\tconst styleRun = engineData.EngineDict.StyleRun;\r\n\r\n\tresult.style = {}; // decodeStyle(styleSheetData, fonts);\r\n\tresult.styleRuns = [];\r\n\r\n\tfor (let i = 0; i < styleRun.RunArray.length; i++) {\r\n\t\tconst length = styleRun.RunLengthArray[i];\r\n\t\tconst style = decodeStyle(styleRun.RunArray[i].StyleSheet.StyleSheetData, fonts);\r\n\t\tresult.styleRuns.push({ length, style });\r\n\t}\r\n\r\n\tdeduplicateValues(result.style, result.styleRuns, styleKeys);\r\n\r\n\tif (!result.styleRuns.length) delete result.styleRuns;\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function encodeEngineData(data: LayerTextData) {\r\n\tconst text = `${(data.text || '').replace(/\\r?\\n/g, '\\r')}\\r`;\r\n\r\n\tconst fonts: Font[] = [\r\n\t\t{ name: 'AdobeInvisFont', script: 0, type: 0, synthetic: 0 },\r\n\t];\r\n\r\n\tconst defFont = data.style?.font ||\r\n\t\tdata.styleRuns?.find(s => s.style.font)?.style.font ||\r\n\t\tdefaultFont;\r\n\r\n\tconst paragraphRunArray: ParagraphRun[] = [];\r\n\tconst paragraphRunLengthArray: number[] = [];\r\n\r\n\tif (data.paragraphStyleRuns && data.paragraphStyleRuns.length) {\r\n\t\tfor (const run of data.paragraphStyleRuns) {\r\n\t\t\tparagraphRunLengthArray.push(run.length);\r\n\t\t\tparagraphRunArray.push({\r\n\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle, ...run.style }, fonts),\r\n\t\t\t\t},\r\n\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t});\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let i = 0, last = 0; i < text.length; i++) {\r\n\t\t\tif (text.charCodeAt(i) === 13) { // \\r\r\n\t\t\t\tparagraphRunLengthArray.push(i - last + 1);\r\n\t\t\t\tparagraphRunArray.push({\r\n\t\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t\t\t},\r\n\t\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t\t});\r\n\t\t\t\tlast = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst styleSheetData = encodeStyle({ ...defaultStyle, font: defFont }, fonts);\r\n\tconst styleRuns = data.styleRuns || [{ length: text.length, style: data.style || {} }];\r\n\tconst styleRunArray: StyleRun[] = [];\r\n\tconst styleRunLengthArray: number[] = [];\r\n\r\n\tfor (const run of styleRuns) {\r\n\t\tstyleRunLengthArray.push(run.length);\r\n\t\tstyleRunArray.push({\r\n\t\t\tStyleSheet: {\r\n\t\t\t\tStyleSheetData: encodeStyle({\r\n\t\t\t\t\tkerning: 0,\r\n\t\t\t\t\tautoKerning: true,\r\n\t\t\t\t\tfillColor: { r: 0, g: 0, b: 0 },\r\n\t\t\t\t\t...data.style,\r\n\t\t\t\t\t...run.style,\r\n\t\t\t\t}, fonts),\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tconst gridInfo = { ...defaultGridInfo, ...data.gridInfo };\r\n\tconst WritingDirection = data.orientation === 'vertical' ? 2 : 0;\r\n\tconst Procession = data.orientation === 'vertical' ? 1 : 0;\r\n\tconst ShapeType = data.shapeType === 'box' ? 1 : 0;\r\n\tconst Photoshop: PhotoshopNode = {\r\n\t\tShapeType,\r\n\t};\r\n\r\n\tif (ShapeType === 0) {\r\n\t\tPhotoshop.PointBase = data.pointBase || [0, 0];\r\n\t} else {\r\n\t\tPhotoshop.BoxBounds = data.boxBounds || [0, 0, 0, 0];\r\n\t}\r\n\r\n\t// needed for correct order of properties\r\n\tPhotoshop.Base = {\r\n\t\tShapeType,\r\n\t\tTransformPoint0: [1, 0],\r\n\t\tTransformPoint1: [0, 1],\r\n\t\tTransformPoint2: [0, 0],\r\n\t};\r\n\r\n\tconst defaultResources = {\r\n\t\tKinsokuSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'PhotoshopKinsokuHard',\r\n\t\t\t\tNoStart: '、。，．・：；？！ー―’”）〕］｝〉》」』】ヽヾゝゞ々ぁぃぅぇぉっゃゅょゎァィゥェォッャュョヮヵヶ゛゜?!)]},.:;℃℉¢％‰',\r\n\t\t\t\tNoEnd: '‘“（〔［｛〈《「『【([{￥＄£＠§〒＃',\r\n\t\t\t\tKeep: '―‥',\r\n\t\t\t\tHanging: '、。.,',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tName: 'PhotoshopKinsokuSoft',\r\n\t\t\t\tNoStart: '、。，．・：；？！’”）〕］｝〉》」』】ヽヾゝゞ々',\r\n\t\t\t\tNoEnd: '‘“（〔［｛〈《「『【',\r\n\t\t\t\tKeep: '―‥',\r\n\t\t\t\tHanging: '、。.,',\r\n\t\t\t},\r\n\t\t],\r\n\t\tMojiKumiSet: [\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet1' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet2' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet3' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet4' },\r\n\t\t],\r\n\t\tTheNormalStyleSheet: 0,\r\n\t\tTheNormalParagraphSheet: 0,\r\n\t\tParagraphSheetSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'Normal RGB',\r\n\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t},\r\n\t\t],\r\n\t\tStyleSheetSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'Normal RGB',\r\n\t\t\t\tStyleSheetData: styleSheetData,\r\n\t\t\t},\r\n\t\t],\r\n\t\tFontSet: fonts.map<FontSet>(f => ({\r\n\t\t\tName: f.name,\r\n\t\t\tScript: f.script || 0,\r\n\t\t\tFontType: f.type || 0,\r\n\t\t\tSynthetic: f.synthetic || 0,\r\n\t\t})),\r\n\t\tSuperscriptSize: data.superscriptSize ?? 0.583,\r\n\t\tSuperscriptPosition: data.superscriptPosition ?? 0.333,\r\n\t\tSubscriptSize: data.subscriptSize ?? 0.583,\r\n\t\tSubscriptPosition: data.subscriptPosition ?? 0.333,\r\n\t\tSmallCapSize: data.smallCapSize ?? 0.7,\r\n\t};\r\n\r\n\tconst engineData: EngineData = {\r\n\t\tEngineDict: {\r\n\t\t\tEditor: { Text: text },\r\n\t\t\tParagraphRun: {\r\n\t\t\t\tDefaultRunData: {\r\n\t\t\t\t\tParagraphSheet: { DefaultStyleSheet: 0, Properties: {} },\r\n\t\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t\t},\r\n\t\t\t\tRunArray: paragraphRunArray,\r\n\t\t\t\tRunLengthArray: paragraphRunLengthArray,\r\n\t\t\t\tIsJoinable: 1,\r\n\t\t\t},\r\n\t\t\tStyleRun: {\r\n\t\t\t\tDefaultRunData: { StyleSheet: { StyleSheetData: {} } },\r\n\t\t\t\tRunArray: styleRunArray,\r\n\t\t\t\tRunLengthArray: styleRunLengthArray,\r\n\t\t\t\tIsJoinable: 2,\r\n\t\t\t},\r\n\t\t\tGridInfo: {\r\n\t\t\t\tGridIsOn: !!gridInfo.isOn,\r\n\t\t\t\tShowGrid: !!gridInfo.show,\r\n\t\t\t\tGridSize: gridInfo.size ?? 18,\r\n\t\t\t\tGridLeading: gridInfo.leading ?? 22,\r\n\t\t\t\tGridColor: { Type: 1, Values: encodeColor(gridInfo.color) },\r\n\t\t\t\tGridLeadingFillColor: { Type: 1, Values: encodeColor(gridInfo.color) },\r\n\t\t\t\tAlignLineHeightToGridFlags: !!gridInfo.alignLineHeightToGridFlags,\r\n\t\t\t},\r\n\t\t\tAntiAlias: antialias.indexOf(data.antiAlias ?? 'sharp'),\r\n\t\t\tUseFractionalGlyphWidths: data.useFractionalGlyphWidths ?? true,\r\n\t\t\tRendered: {\r\n\t\t\t\tVersion: 1,\r\n\t\t\t\tShapes: {\r\n\t\t\t\t\tWritingDirection,\r\n\t\t\t\t\tChildren: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tShapeType,\r\n\t\t\t\t\t\t\tProcession,\r\n\t\t\t\t\t\t\tLines: { WritingDirection, Children: [] },\r\n\t\t\t\t\t\t\tCookie: { Photoshop },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tResourceDict: { ...defaultResources },\r\n\t\tDocumentResources: { ...defaultResources },\r\n\t};\r\n\r\n\t// console.log('encodeEngineData', require('util').inspect(engineData, false, 99, true));\r\n\treturn engineData;\r\n}\r\n","export type BlendMode = 'pass through' | 'normal' | 'dissolve' | 'darken' | 'multiply' |\n\t'color burn' | 'linear burn' | 'darker color' | 'lighten' | 'screen' | 'color dodge' |\n\t'linear dodge' | 'lighter color' | 'overlay' | 'soft light' | 'hard light' |\n\t'vivid light' | 'linear light' | 'pin light' | 'hard mix' | 'difference' | 'exclusion' |\n\t'subtract' | 'divide' | 'hue' | 'saturation' | 'color' | 'luminosity';\n\nexport const enum ColorMode {\n\tBitmap = 0,\n\tGrayscale = 1,\n\tIndexed = 2,\n\tRGB = 3,\n\tCMYK = 4,\n\tMultichannel = 7,\n\tDuotone = 8,\n\tLab = 9,\n}\n\nexport const enum SectionDividerType {\n\tOther = 0,\n\tOpenFolder = 1,\n\tClosedFolder = 2,\n\tBoundingSectionDivider = 3,\n}\n\nexport type RGBA = { r: number; g: number; b: number; a: number; };\nexport type RGB = { r: number; g: number; b: number; };\nexport type HSB = { h: number; s: number; b: number; };\nexport type CMYK = { c: number; m: number; y: number; k: number; };\nexport type LAB = { l: number; a: number; b: number; };\nexport type Grayscale = { k: number };\nexport type Color = RGBA | RGB | HSB | CMYK | LAB | Grayscale;\n\nexport interface EffectContour {\n\tname: string;\n\tcurve: { x: number; y: number; }[];\n}\n\nexport interface EffectPattern {\n\tname: string;\n\tid: string;\n\t// TODO: add fields\n}\n\nexport interface LayerEffectShadow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tangle?: number;\n\tdistance?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tuseGlobalLight?: boolean;\n\tantialiased?: boolean;\n\tcontour?: EffectContour;\n\tchoke?: UnitsValue; // spread\n\tlayerConceals?: boolean; // only drop shadow\n}\n\nexport interface LayerEffectsOuterGlow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tsource?: GlowSource;\n\tantialiased?: boolean;\n\tnoise?: number;\n\trange?: number;\n\tchoke?: UnitsValue;\n\tjitter?: number;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectInnerGlow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tsource?: GlowSource;\n\ttechnique?: GlowTechnique;\n\tantialiased?: boolean;\n\tnoise?: number;\n\trange?: number;\n\tchoke?: UnitsValue; // spread\n\tjitter?: number;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectBevel {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tangle?: number;\n\tstrength?: number; // depth\n\thighlightBlendMode?: BlendMode;\n\tshadowBlendMode?: BlendMode;\n\thighlightColor?: Color;\n\tshadowColor?: Color;\n\tstyle?: BevelStyle;\n\thighlightOpacity?: number;\n\tshadowOpacity?: number;\n\tsoften?: UnitsValue;\n\tuseGlobalLight?: boolean;\n\taltitude?: number;\n\ttechnique?: BevelTechnique;\n\tdirection?: BevelDirection;\n\tuseTexture?: boolean;\n\tuseShape?: boolean;\n\tantialiasGloss?: boolean;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectSolidFill {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: BlendMode;\n\tcolor?: Color;\n\topacity?: number;\n}\n\nexport interface LayerEffectStroke {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tposition?: 'inside' | 'center' | 'outside';\n\tfillType?: 'color' | 'gradient' | 'pattern';\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tcolor?: Color;\n\tgradient?: (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo;\n\tpattern?: EffectPattern & {}; // TODO: additional pattern info\n}\n\nexport interface LayerEffectSatin {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tblendMode?: BlendMode;\n\tcolor?: Color;\n\tantialiased?: boolean;\n\topacity?: number;\n\tdistance?: UnitsValue;\n\tinvert?: boolean;\n\tangle?: number;\n\tcontour?: EffectContour;\n}\n\n// not supported yet because of `Patt` section not implemented\nexport interface LayerEffectPatternOverlay {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tscale?: number;\n\tpattern?: EffectPattern;\n\tphase?: { x: number; y: number; };\n\talign?: boolean;\n}\n\nexport interface EffectSolidGradient {\n\tname: string;\n\ttype: 'solid';\n\tsmoothness?: number;\n\tcolorStops: ColorStop[];\n\topacityStops: OpacityStop[];\n}\n\nexport interface EffectNoiseGradient {\n\tname: string;\n\ttype: 'noise';\n\troughness?: number;\n\tcolorModel?: 'rgb' | 'hsb' | 'lab';\n\trandomSeed?: number;\n\trestrictColors?: boolean;\n\taddTransparency?: boolean;\n\tmin: number[];\n\tmax: number[];\n}\n\nexport interface LayerEffectGradientOverlay {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: string;\n\topacity?: number;\n\talign?: boolean;\n\tscale?: number;\n\tdither?: boolean;\n\treverse?: boolean;\n\ttype?: GradientStyle;\n\toffset?: { x: number; y: number; };\n\tgradient?: EffectSolidGradient | EffectNoiseGradient;\n}\n\nexport interface LayerEffectsInfo {\n\tdisabled?: boolean;\n\tscale?: number;\n\tdropShadow?: LayerEffectShadow;\n\tinnerShadow?: LayerEffectShadow;\n\touterGlow?: LayerEffectsOuterGlow;\n\tinnerGlow?: LayerEffectInnerGlow;\n\tbevel?: LayerEffectBevel;\n\tsolidFill?: LayerEffectSolidFill;\n\tsatin?: LayerEffectSatin;\n\tstroke?: LayerEffectStroke;\n\tgradientOverlay?: LayerEffectGradientOverlay;\n\tpatternOverlay?: LayerEffectPatternOverlay; // not supported yet because of `Patt` section not implemented\n}\n\nexport interface LayerMaskData {\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\tdefaultColor?: number;\n\tdisabled?: boolean;\n\tpositionRelativeToLayer?: boolean;\n\tfromVectorData?: boolean; // set to true if the mask is generated from vector data, false if it's a bitmap provided by user\n\tuserMaskDensity?: number;\n\tuserMaskFeather?: number; // px\n\tvectorMaskDensity?: number;\n\tvectorMaskFeather?: number;\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n}\n\nexport type TextGridding = 'none'; // TODO: other values\nexport type Orientation = 'horizontal' | 'vertical';\nexport type AntiAlias = 'none' | 'sharp' | 'crisp' | 'strong' | 'smooth';\nexport type WarpStyle =\n\t'none' | 'arc' | 'arcLower' | 'arcUpper' | 'arch' | 'bulge' | 'shellLower' | 'shellUpper' | 'flag' |\n\t'wave' | 'fish' | 'rise' | 'fisheye' | 'inflate' | 'squeeze' | 'twist' | 'custom';\nexport type BevelStyle = 'outer bevel' | 'inner bevel' | 'emboss' | 'pillow emboss' | 'stroke emboss';\nexport type BevelTechnique = 'smooth' | 'chisel hard' | 'chisel soft';\nexport type BevelDirection = 'up' | 'down';\nexport type GlowTechnique = 'softer' | 'precise';\nexport type GlowSource = 'edge' | 'center';\nexport type GradientStyle = 'linear' | 'radial' | 'angle' | 'reflected' | 'diamond';\nexport type Justification = 'left' | 'right' | 'center';\nexport type LineCapType = 'butt' | 'round' | 'square';\nexport type LineJoinType = 'miter' | 'round' | 'bevel';\nexport type LineAlignment = 'inside' | 'center' | 'outside';\n\nexport interface Warp {\n\tstyle?: WarpStyle;\n\tvalue?: number;\n\tperspective?: number;\n\tperspectiveOther?: number;\n\trotate?: Orientation;\n\n\t// for custom warps\n\tbounds?: { top: UnitsValue; left: UnitsValue; bottom: UnitsValue; right: UnitsValue; };\n\tuOrder?: number;\n\tvOrder?: number;\n\tcustomEnvelopeWarp?: {\n\t\tmeshPoints: { type: 'horizontal' | 'vertical'; values: number[]; }[];\n\t};\n}\n\nexport interface Font {\n\tname: string;\n\tscript?: number;\n\ttype?: number;\n\tsynthetic?: number;\n}\n\nexport interface ParagraphStyle {\n\tjustification?: Justification;\n\tfirstLineIndent?: number;\n\tstartIndent?: number;\n\tendIndent?: number;\n\tspaceBefore?: number;\n\tspaceAfter?: number;\n\tautoHyphenate?: boolean;\n\thyphenatedWordSize?: number;\n\tpreHyphen?: number;\n\tpostHyphen?: number;\n\tconsecutiveHyphens?: number;\n\tzone?: number;\n\twordSpacing?: number[];\n\tletterSpacing?: number[];\n\tglyphSpacing?: number[];\n\tautoLeading?: number;\n\tleadingType?: number;\n\thanging?: boolean;\n\tburasagari?: boolean;\n\tkinsokuOrder?: number;\n\teveryLineComposer?: boolean;\n}\n\nexport interface ParagraphStyleRun {\n\tlength: number;\n\tstyle: ParagraphStyle;\n}\n\nexport interface TextStyle {\n\tfont?: Font;\n\tfontSize?: number;\n\tfauxBold?: boolean;\n\tfauxItalic?: boolean;\n\tautoLeading?: boolean;\n\tleading?: number;\n\thorizontalScale?: number;\n\tverticalScale?: number;\n\ttracking?: number;\n\tautoKerning?: boolean;\n\tkerning?: number;\n\tbaselineShift?: number;\n\tfontCaps?: number; // 0 - none, 1 - small caps, 2 - all caps\n\tfontBaseline?: number; // 0 - normal, 1 - superscript, 2 - subscript\n\tunderline?: boolean;\n\tstrikethrough?: boolean;\n\tligatures?: boolean;\n\tdLigatures?: boolean;\n\tbaselineDirection?: number;\n\ttsume?: number;\n\tstyleRunAlignment?: number;\n\tlanguage?: number;\n\tnoBreak?: boolean;\n\tfillColor?: Color;\n\tstrokeColor?: Color;\n\tfillFlag?: boolean;\n\tstrokeFlag?: boolean;\n\tfillFirst?: boolean;\n\tyUnderline?: number;\n\toutlineWidth?: number;\n\tcharacterDirection?: number;\n\thindiNumbers?: boolean;\n\tkashida?: number;\n\tdiacriticPos?: number;\n}\n\nexport interface TextStyleRun {\n\tlength: number;\n\tstyle: TextStyle;\n}\n\nexport interface TextGridInfo {\n\tisOn?: boolean;\n\tshow?: boolean;\n\tsize?: number;\n\tleading?: number;\n\tcolor?: Color;\n\tleadingFillColor?: Color;\n\talignLineHeightToGridFlags?: boolean;\n}\n\nexport interface LayerTextData {\n\ttext: string;\n\ttransform?: number[];\n\tantiAlias?: AntiAlias;\n\tgridding?: TextGridding;\n\torientation?: Orientation;\n\tindex?: number;\n\twarp?: Warp;\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\n\tgridInfo?: TextGridInfo;\n\tuseFractionalGlyphWidths?: boolean;\n\tstyle?: TextStyle; // base style\n\tstyleRuns?: TextStyleRun[]; // spans of different style\n\tparagraphStyle?: ParagraphStyle; // base paragraph style\n\tparagraphStyleRuns?: ParagraphStyleRun[]; // style for each line\n\n\tsuperscriptSize?: number;\n\tsuperscriptPosition?: number;\n\tsubscriptSize?: number;\n\tsubscriptPosition?: number;\n\tsmallCapSize?: number;\n\n\tshapeType?: 'point' | 'box';\n\tpointBase?: number[];\n\tboxBounds?: number[];\n}\n\nexport interface PatternInfo {\n\tname: string;\n\tid: string;\n\tx: number;\n\ty: number;\n\tbounds: { x: number; y: number; w: number, h: number; };\n\tdata: Uint8Array;\n}\n\nexport interface BezierKnot {\n\tlinked: boolean;\n\tpoints: number[]; // x0, y0, x1, y1, x2, y2\n}\n\nexport type BooleanOperation = 'exclude' | 'combine' | 'subtract' | 'intersect';\n\nexport interface BezierPath {\n\topen: boolean;\n\toperation: BooleanOperation;\n\tknots: BezierKnot[];\n}\n\nexport interface ExtraGradientInfo {\n\tstyle?: GradientStyle;\n\tscale?: number;\n\tangle?: number;\n\tdither?: boolean;\n\treverse?: boolean;\n\talign?: boolean;\n\toffset?: { x: number; y: number; };\n}\n\nexport interface ExtraPatternInfo {\n\tlinked?: boolean;\n\tphase?: { x: number; y: number; };\n}\n\nexport type VectorContent = { type: 'color'; color: Color; } |\n\t(EffectSolidGradient & ExtraGradientInfo) |\n\t(EffectNoiseGradient & ExtraGradientInfo) |\n\t(EffectPattern & { type: 'pattern'; } & ExtraPatternInfo);\n\nexport type RenderingIntent = 'perceptual' | 'saturation' | 'relative colorimetric' | 'absolute colorimetric';\n\nexport type Units = 'Pixels' | 'Points' | 'Picas' | 'Millimeters' | 'Centimeters' | 'Inches' | 'None' | 'Density';\n\nexport interface UnitsValue {\n\tunits: Units;\n\tvalue: number;\n}\n\nexport interface BrightnessAdjustment {\n\ttype: 'brightness/contrast';\n\tbrightness?: number;\n\tcontrast?: number;\n\tmeanValue?: number;\n\tuseLegacy?: boolean;\n\tlabColorOnly?: boolean;\n\tauto?: boolean;\n}\n\nexport interface LevelsAdjustmentChannel {\n\tshadowInput: number;\n\thighlightInput: number;\n\tshadowOutput: number;\n\thighlightOutput: number;\n\tmidtoneInput: number;\n}\n\nexport interface PresetInfo {\n\tpresetKind?: number;\n\tpresetFileName?: string;\n}\n\nexport interface LevelsAdjustment extends PresetInfo {\n\ttype: 'levels';\n\trgb?: LevelsAdjustmentChannel;\n\tred?: LevelsAdjustmentChannel;\n\tgreen?: LevelsAdjustmentChannel;\n\tblue?: LevelsAdjustmentChannel;\n}\n\nexport type CurvesAdjustmentChannel = { input: number; output: number; }[];\n\nexport interface CurvesAdjustment extends PresetInfo {\n\ttype: 'curves';\n\trgb?: CurvesAdjustmentChannel;\n\tred?: CurvesAdjustmentChannel;\n\tgreen?: CurvesAdjustmentChannel;\n\tblue?: CurvesAdjustmentChannel;\n}\n\nexport interface ExposureAdjustment extends PresetInfo {\n\ttype: 'exposure';\n\texposure?: number;\n\toffset?: number;\n\tgamma?: number;\n}\n\nexport interface VibranceAdjustment {\n\ttype: 'vibrance';\n\tvibrance?: number;\n\tsaturation?: number;\n}\n\nexport interface HueSaturationAdjustmentChannel {\n\ta: number;\n\tb: number;\n\tc: number;\n\td: number;\n\thue: number;\n\tsaturation: number;\n\tlightness: number;\n}\n\nexport interface HueSaturationAdjustment extends PresetInfo {\n\ttype: 'hue/saturation';\n\tmaster?: HueSaturationAdjustmentChannel;\n\treds?: HueSaturationAdjustmentChannel;\n\tyellows?: HueSaturationAdjustmentChannel;\n\tgreens?: HueSaturationAdjustmentChannel;\n\tcyans?: HueSaturationAdjustmentChannel;\n\tblues?: HueSaturationAdjustmentChannel;\n\tmagentas?: HueSaturationAdjustmentChannel;\n}\n\nexport interface ColorBalanceValues {\n\tcyanRed: number;\n\tmagentaGreen: number;\n\tyellowBlue: number;\n}\n\nexport interface ColorBalanceAdjustment {\n\ttype: 'color balance';\n\tshadows?: ColorBalanceValues;\n\tmidtones?: ColorBalanceValues;\n\thighlights?: ColorBalanceValues;\n\tpreserveLuminosity?: boolean;\n}\n\nexport interface BlackAndWhiteAdjustment extends PresetInfo {\n\ttype: 'black & white';\n\treds?: number;\n\tyellows?: number;\n\tgreens?: number;\n\tcyans?: number;\n\tblues?: number;\n\tmagentas?: number;\n\tuseTint?: boolean;\n\ttintColor?: Color;\n}\n\nexport interface PhotoFilterAdjustment {\n\ttype: 'photo filter';\n\tcolor?: Color;\n\tdensity?: number;\n\tpreserveLuminosity?: boolean;\n}\n\nexport interface ChannelMixerChannel {\n\tred: number;\n\tgreen: number;\n\tblue: number;\n\tconstant: number;\n}\n\nexport interface ChannelMixerAdjustment extends PresetInfo {\n\ttype: 'channel mixer';\n\tmonochrome?: boolean;\n\tred?: ChannelMixerChannel;\n\tgreen?: ChannelMixerChannel;\n\tblue?: ChannelMixerChannel;\n\tgray?: ChannelMixerChannel;\n}\n\nexport interface ColorLookupAdjustment {\n\ttype: 'color lookup';\n\tlookupType?: '3dlut' | 'abstractProfile' | 'deviceLinkProfile';\n\tname?: string;\n\tdither?: boolean;\n\tprofile?: Uint8Array;\n\tlutFormat?: 'look' | 'cube' | '3dl';\n\tdataOrder?: 'rgb' | 'bgr';\n\ttableOrder?: 'rgb' | 'bgr';\n\tlut3DFileData?: Uint8Array;\n\tlut3DFileName?: string;\n}\n\nexport interface InvertAdjustment {\n\ttype: 'invert';\n}\n\nexport interface PosterizeAdjustment {\n\ttype: 'posterize';\n\tlevels?: number;\n}\n\nexport interface ThresholdAdjustment {\n\ttype: 'threshold';\n\tlevel?: number;\n}\n\nexport interface ColorStop {\n\tcolor: Color;\n\tlocation: number;\n\tmidpoint: number;\n}\n\nexport interface OpacityStop {\n\topacity: number;\n\tlocation: number;\n\tmidpoint: number;\n}\n\nexport interface GradientMapAdjustment {\n\ttype: 'gradient map';\n\tname?: string;\n\tgradientType: 'solid' | 'noise';\n\tdither?: boolean;\n\treverse?: boolean;\n\t// solid\n\tsmoothness?: number;\n\tcolorStops?: ColorStop[];\n\topacityStops?: OpacityStop[];\n\t// noise\n\troughness?: number;\n\tcolorModel?: 'rgb' | 'hsb' | 'lab';\n\trandomSeed?: number;\n\trestrictColors?: boolean;\n\taddTransparency?: boolean;\n\tmin?: number[];\n\tmax?: number[];\n}\n\nexport interface SelectiveColorAdjustment {\n\ttype: 'selective color';\n\tmode?: 'relative' | 'absolute';\n\treds?: CMYK;\n\tyellows?: CMYK;\n\tgreens?: CMYK;\n\tcyans?: CMYK;\n\tblues?: CMYK;\n\tmagentas?: CMYK;\n\twhites?: CMYK;\n\tneutrals?: CMYK;\n\tblacks?: CMYK;\n}\n\nexport interface LinkedFile {\n\tid: string;\n\tname: string;\n\ttype?: string;\n\tcreator?: string;\n\tdata?: Uint8Array;\n\ttime?: Date; // for external files\n\tdescriptor?: {\n\t\tcompInfo: { compID: number; originalCompID: number; };\n\t};\n\tchildDocumentID?: string;\n\tassetModTime?: number;\n\tassetLockedState?: number;\n}\n\nexport type PlacedLayerType = 'unknown' | 'vector' | 'raster' | 'image stack';\n\nexport interface PlacedLayer {\n\tid: string; // id of linked image file (psd.linkedFiles)\n\tplaced?: string; // ???\n\ttype: PlacedLayerType;\n\t// pageNumber: number; // ???\n\t// totalPages: number; // ???\n\t// frameStep?: { numerator: number; denominator: number; };\n\t// duration?: { numerator: number; denominator: number; };\n\t// frameCount?: number; // ???\n\ttransform: number[]; // x, y of 4 corners of the transform\n\twidth?: number;\n\theight?: number;\n\tresolution?: UnitsValue;\n\t// antialias ?\n\twarp?: Warp;\n\tcrop?: number;\n\tcomp?: number;\n\tcompInfo?: { compID: number; originalCompID: number; };\n}\n\nexport type AdjustmentLayer = BrightnessAdjustment | LevelsAdjustment | CurvesAdjustment |\n\tExposureAdjustment | VibranceAdjustment | HueSaturationAdjustment | ColorBalanceAdjustment |\n\tBlackAndWhiteAdjustment | PhotoFilterAdjustment | ChannelMixerAdjustment | ColorLookupAdjustment |\n\tInvertAdjustment | PosterizeAdjustment | ThresholdAdjustment | GradientMapAdjustment |\n\tSelectiveColorAdjustment;\n\nexport type LayerColor = 'none' | 'red' | 'orange' | 'yellow' | 'green' | 'blue' | 'violet' | 'gray';\n\nexport interface KeyDescriptorItem {\n\tkeyShapeInvalidated?: boolean;\n\tkeyOriginType?: number;\n\tkeyOriginResolution?: number;\n\tkeyOriginRRectRadii?: {\n\t\ttopRight: UnitsValue;\n\t\ttopLeft: UnitsValue;\n\t\tbottomLeft: UnitsValue;\n\t\tbottomRight: UnitsValue;\n\t};\n\tkeyOriginShapeBoundingBox?: {\n\t\ttop: UnitsValue;\n\t\tleft: UnitsValue;\n\t\tbottom: UnitsValue;\n\t\tright: UnitsValue;\n\t};\n}\n\nexport interface LayerAdditionalInfo {\n\tname?: string; // layer name\n\tnameSource?: string; // layer name source\n\tid?: number; // layer id\n\tversion?: number; // layer version\n\tmask?: LayerMaskData;\n\tblendClippendElements?: boolean;\n\tblendInteriorElements?: boolean;\n\tknockout?: boolean;\n\tprotected?: {\n\t\ttransparency?: boolean;\n\t\tcomposite?: boolean;\n\t\tposition?: boolean;\n\t\tartboards?: boolean;\n\t};\n\tlayerColor?: LayerColor;\n\treferencePoint?: {\n\t\tx: number;\n\t\ty: number;\n\t};\n\tsectionDivider?: {\n\t\ttype: SectionDividerType;\n\t\tkey?: string;\n\t\tsubType?: number;\n\t};\n\tfilterMask?: {\n\t\tcolorSpace: Color;\n\t\topacity: number;\n\t};\n\teffects?: LayerEffectsInfo;\n\ttext?: LayerTextData;\n\tpatterns?: PatternInfo[]; // not supported yet\n\tvectorFill?: VectorContent;\n\tvectorStroke?: {\n\t\tstrokeEnabled?: boolean;\n\t\tfillEnabled?: boolean;\n\t\tlineWidth?: UnitsValue;\n\t\tlineDashOffset?: UnitsValue;\n\t\tmiterLimit?: number;\n\t\tlineCapType?: LineCapType;\n\t\tlineJoinType?: LineJoinType;\n\t\tlineAlignment?: LineAlignment;\n\t\tscaleLock?: boolean;\n\t\tstrokeAdjust?: boolean;\n\t\tlineDashSet?: UnitsValue[];\n\t\tblendMode?: BlendMode;\n\t\topacity?: number;\n\t\tcontent?: VectorContent;\n\t\tresolution?: number;\n\t};\n\tvectorMask?: {\n\t\tinvert?: boolean;\n\t\tnotLink?: boolean;\n\t\tdisable?: boolean;\n\t\tfillStartsWithAllPixels?: boolean;\n\t\tclipboard?: {\n\t\t\ttop: number;\n\t\t\tleft: number;\n\t\t\tbottom: number;\n\t\t\tright: number;\n\t\t\tresolution: number;\n\t\t};\n\t\tpaths: BezierPath[];\n\t};\n\tusingAlignedRendering?: boolean;\n\ttimestamp?: number; // seconds\n\tpathList?: {\n\t}[];\n\tadjustment?: AdjustmentLayer;\n\tplacedLayer?: PlacedLayer;\n\tvectorOrigination?: {\n\t\tkeyDescriptorList: KeyDescriptorItem[];\n\t};\n\tcompositorUsed?: {\n\t\tdescription: string;\n\t\treason: string;\n\t\tengine: string;\n\t\tenableCompCore: string;\n\t\tenableCompCoreGPU: string;\n\t\tcompCoreSupport: string;\n\t\tcompCoreGPUSupport: string;\n\t};\n\tartboard?: {\n\t\trect: { top: number; left: number; bottom: number; right: number; };\n\t\tguideIndices?: any[];\n\t\tpresetName?: string;\n\t\tcolor?: Color;\n\t\tbackgroundType?: number;\n\t};\n\n\t// Base64 encoded raw EngineData, currently just kept in original state to support\n\t// loading and modifying PSD file without breaking text layers.\n\tengineData?: string;\n}\n\nexport interface ImageResources {\n\tlayerState?: number;\n\tlayersGroup?: number[];\n\tlayerSelectionIds?: number[];\n\tlayerGroupsEnabledId?: number[];\n\tversionInfo?: {\n\t\thasRealMergedData: boolean;\n\t\twriterName: string;\n\t\treaderName: string;\n\t\tfileVersion: number;\n\t};\n\talphaIdentifiers?: number[];\n\talphaChannelNames?: string[];\n\tglobalAngle?: number;\n\tglobalAltitude?: number;\n\tpixelAspectRatio?: {\n\t\taspect: number;\n\t};\n\turlsList?: any[];\n\tgridAndGuidesInformation?: {\n\t\tgrid?: {\n\t\t\thorizontal: number;\n\t\t\tvertical: number;\n\t\t},\n\t\tguides?: {\n\t\t\tlocation: number;\n\t\t\tdirection: 'horizontal' | 'vertical';\n\t\t}[];\n\t};\n\tresolutionInfo?: {\n\t\thorizontalResolution: number;\n\t\thorizontalResolutionUnit: 'PPI' | 'PPCM';\n\t\twidthUnit: 'Inches' | 'Centimeters' | 'Points' | 'Picas' | 'Columns';\n\t\tverticalResolution: number;\n\t\tverticalResolutionUnit: 'PPI' | 'PPCM';\n\t\theightUnit: 'Inches' | 'Centimeters' | 'Points' | 'Picas' | 'Columns';\n\t};\n\tthumbnail?: HTMLCanvasElement;\n\tthumbnailRaw?: { width: number; height: number; data: Uint8Array; };\n\tcaptionDigest?: string;\n\txmpMetadata?: string;\n\tprintScale?: {\n\t\tstyle?: 'centered' | 'size to fit' | 'user defined';\n\t\tx?: number;\n\t\ty?: number;\n\t\tscale?: number;\n\t};\n\tprintInformation?: {\n\t\tprinterManagesColors?: boolean;\n\t\tprinterName?: string;\n\t\tprinterProfile?: string;\n\t\tprintSixteenBit?: boolean;\n\t\trenderingIntent?: RenderingIntent;\n\t\thardProof?: boolean;\n\t\tblackPointCompensation?: boolean;\n\t\tproofSetup?: {\n\t\t\tbuiltin: string;\n\t\t} | {\n\t\t\tprofile: string;\n\t\t\trenderingIntent?: RenderingIntent;\n\t\t\tblackPointCompensation?: boolean;\n\t\t\tpaperWhite?: boolean;\n\t\t};\n\t};\n\tbackgroundColor?: Color;\n\tidsSeedNumber?: number;\n\tprintFlags?: {\n\t\tlabels?: boolean;\n\t\tcropMarks?: boolean;\n\t\tcolorBars?: boolean;\n\t\tregistrationMarks?: boolean;\n\t\tnegative?: boolean;\n\t\tflip?: boolean;\n\t\tinterpolate?: boolean;\n\t\tcaption?: boolean;\n\t\tprintFlags?: boolean;\n\t};\n\ticcUntaggedProfile?: boolean;\n}\n\nexport interface GlobalLayerMaskInfo {\n\toverlayColorSpace: number;\n\tcolorSpace1: number;\n\tcolorSpace2: number;\n\tcolorSpace3: number;\n\tcolorSpace4: number;\n\topacity: number;\n\tkind: number;\n}\n\nexport interface Layer extends LayerAdditionalInfo {\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\ttransparencyProtected?: boolean;\n\thidden?: boolean;\n\tclipping?: boolean;\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n\tchildren?: Layer[];\n\t/** applies only for layer groups */\n\topened?: boolean;\n}\n\nexport interface Psd extends LayerAdditionalInfo {\n\twidth: number;\n\theight: number;\n\tchannels?: number;\n\tbitsPerChannel?: number;\n\tcolorMode?: ColorMode;\n\tchildren?: Layer[];\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n\timageResources?: ImageResources;\n\tlinkedFiles?: LinkedFile[]; // used in smart objects\n\tartboards?: {\n\t\tcount: number;\n\t\tautoExpandOffset?: { horizontal: number; vertical: number; };\n\t\torigin?: { horizontal: number; vertical: number; };\n\t\tautoExpandEnabled?: boolean;\n\t\tautoNestEnabled?: boolean;\n\t\tautoPositionEnabled?: boolean;\n\t\tshrinkwrapOnSaveEnabled?: boolean;\n\t\tdocDefaultNewArtboardBackgroundColor?: Color;\n\t\tdocDefaultNewArtboardBackgroundType?: number;\n\t};\n\tglobalLayerMaskInfo?: GlobalLayerMaskInfo;\n}\n\nexport interface ReadOptions {\n\t/** Does not load layer image data. */\n\tskipLayerImageData?: boolean;\n\t/** Does not load composite image data. */\n\tskipCompositeImageData?: boolean;\n\t/** Does not load thumbnail. */\n\tskipThumbnail?: boolean;\n\t/** Does not load linked files (used in smart-objects). */\n\tskipLinkedFilesData?: boolean;\n\t/** Throws exception if features are missing. */\n\tthrowForMissingFeatures?: boolean;\n\t/** Logs if features are missing. */\n\tlogMissingFeatures?: boolean;\n\t/** Keep image data as byte array instead of canvas.\n\t * (image data will appear in `imageData` fields instead of `canvas` fields)\n\t * This avoids issues with canvas premultiplied alpha corrupting image data. */\n\tuseImageData?: boolean;\n\t/** Loads thumbnail raw data instead of decoding it's content into canvas.\n\t * `thumnailRaw` field is used instead. */\n\tuseRawThumbnail?: boolean;\n\t/** Usend only for development */\n\tlogDevFeatures?: boolean;\n}\n\nexport interface WriteOptions {\n\t/** Automatically generates thumbnail from composite image. */\n\tgenerateThumbnail?: boolean;\n\t/** Trims transparent pixels from layer image data. */\n\ttrimImageData?: boolean;\n\t/** Invalidates text layer data, forcing Photoshop to redraw them on load.\n\t *  Use this option if you're updating loaded text layer properties. */\n\tinvalidateTextLayers?: boolean;\n\t/** Logs if features are missing. */\n\tlogMissingFeatures?: boolean;\n\t/** Forces bottom layer to be treated as layer and not background even when it's missing any transparency\n\t * \t(by default Photoshop treats bottom layer as background it it doesn't have any transparent pixels) */\n\tnoBackground?: boolean;\n}\n"],"names":["Object","defineProperty","module","exports","enumerable","get","$jE67M","initializeCanvas","$1b6f6e28f7eac574$var$__exportStar","parcelRequire","$1b6f6e28f7eac574$var$writePsdUint8Array","psd","options","writer","$kCSTH","createWriter","writePsd","getWriterBufferNoCopy","byteArrayToBase64","$jWkTT","fromByteArray","readPsd","buffer","reader","$5OPaf","createReader","byteOffset","byteLength","getWriterBuffer","writePsdUint8Array","writePsdBuffer","$1b6f6e28f7eac574$require$Buffer","Error","from","$aa3bc52a91644a03$export$a143d493d941bafc","$aa3bc52a91644a03$export$f99ded8fe4b79145","$h9IAp","$aa3bc52a91644a03$var$customInspectSymbol","Symbol","$aa3bc52a91644a03$var$Buffer","$aa3bc52a91644a03$var$K_MAX_LENGTH","$aa3bc52a91644a03$var$createBuffer","length","RangeError","buf","Uint8Array","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","$aa3bc52a91644a03$var$allocUnsafe","$aa3bc52a91644a03$var$from","value","string","encoding","isEncoding","$aa3bc52a91644a03$var$byteLength","actual","write","slice","$aa3bc52a91644a03$var$fromString","ArrayBuffer","isView","arrayView","$aa3bc52a91644a03$var$isInstance","copy","$aa3bc52a91644a03$var$fromArrayBuffer","$aa3bc52a91644a03$var$fromArrayLike","$aa3bc52a91644a03$var$fromArrayView","$dfzUC","default","SharedArrayBuffer","valueOf","b","obj","isBuffer","len","$aa3bc52a91644a03$var$checked","undefined","$aa3bc52a91644a03$var$numberIsNaN","type","Array","isArray","data","$aa3bc52a91644a03$var$fromObject","toPrimitive","$aa3bc52a91644a03$var$assertSize","size","array","i","toString","mustMatch","arguments","loweredCase","$aa3bc52a91644a03$var$utf8ToBytes","$aa3bc52a91644a03$var$base64ToBytes","toLowerCase","$aa3bc52a91644a03$var$slowToString","start","end","this","$aa3bc52a91644a03$var$hexSlice","$aa3bc52a91644a03$var$utf8Slice","$aa3bc52a91644a03$var$asciiSlice","$aa3bc52a91644a03$var$latin1Slice","$aa3bc52a91644a03$var$base64Slice","$aa3bc52a91644a03$var$utf16leSlice","$aa3bc52a91644a03$var$swap","n","m","$aa3bc52a91644a03$var$bidirectionalIndexOf","val","dir","$aa3bc52a91644a03$var$arrayIndexOf","indexOf","call","lastIndexOf","arr","i1","read","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","$aa3bc52a91644a03$var$hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","$aa3bc52a91644a03$var$utf8Write","$aa3bc52a91644a03$var$blitBuffer","$aa3bc52a91644a03$var$asciiWrite","str","byteArray","push","charCodeAt","$aa3bc52a91644a03$var$asciiToBytes","$aa3bc52a91644a03$var$base64Write","$aa3bc52a91644a03$var$ucs2Write","units","c","hi","lo","$aa3bc52a91644a03$var$utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$aa3bc52a91644a03$var$MAX_ARGUMENTS_LENGTH","fromCharCode","apply","$aa3bc52a91644a03$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","$aa3bc52a91644a03$var$typedArraySupport","console","error","poolSize","alloc","fill","$aa3bc52a91644a03$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$aa3bc52a91644a03$var$hexSliceLookupTable","bytes","$aa3bc52a91644a03$var$checkOffset","ext","$aa3bc52a91644a03$var$checkInt","$aa3bc52a91644a03$var$wrtBigUInt64LE","$aa3bc52a91644a03$var$checkIntBI","BigInt","$aa3bc52a91644a03$var$wrtBigUInt64BE","$aa3bc52a91644a03$var$checkIEEE754","$aa3bc52a91644a03$var$writeFloat","littleEndian","noAssert","$4Ooth","$aa3bc52a91644a03$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$aa3bc52a91644a03$var$defineBigIntMethod","$aa3bc52a91644a03$var$validateNumber","first","last","$aa3bc52a91644a03$var$boundsError","pow","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","sub","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$aa3bc52a91644a03$var$errors","$aa3bc52a91644a03$var$E","sym","getMessage","Base1","Base","NodeError","_this","writable","configurable","name","stack","key","message","$aa3bc52a91644a03$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$aa3bc52a91644a03$var$checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","$aa3bc52a91644a03$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","$aa3bc52a91644a03$var$base64clean","src","dst","constructor","alphabet","table","i16","fn","$aa3bc52a91644a03$var$BufferBigIntNotDefined","$a3f71a6381ded169$export$2e2bcd8739ae039","self","ReferenceError","$73Cya","$cabf784fe941dd6c$export$2e2bcd8739ae039","subClass","superClass","create","$59d19f4a487d4f82$var$setPrototypeOf","o1","p1","o","p","__proto__","$59d19f4a487d4f82$export$2e2bcd8739ae039","$1fb4f258832d46e8$export$2e2bcd8739ae039","$9ABFb","$29d47fab759b9ce1$export$2e2bcd8739ae039","Derived","hasNativeReflectConstruct","result","Super","$8H8Uu","NewTarget","Reflect","construct","$hJfcY","$6b01c7e97885d76a$export$2e2bcd8739ae039","sham","Proxy","Boolean","$bcc01fca5793d5b8$var$getPrototypeOf","getPrototypeOf","$bcc01fca5793d5b8$export$2e2bcd8739ae039","$705c88c8dc40f407$export$2e2bcd8739ae039","$e843a57e209ac34b$export$d622b2ad8d90c771","$e843a57e209ac34b$export$6100ba28696e12de","b64","tmp","lens","$e843a57e209ac34b$var$getLens","validLen","placeHoldersLen","$e843a57e209ac34b$var$Arr","$e843a57e209ac34b$var$_byteLength","curByte","len2","$e843a57e209ac34b$var$revLookup","uint8","len3","extraBytes","parts","maxChunkLength","i3","$e843a57e209ac34b$var$encodeChunk","$e843a57e209ac34b$var$lookup","join","$e843a57e209ac34b$var$code","$e843a57e209ac34b$var$i","$e843a57e209ac34b$var$len","len1","num","output","i2","$380ed06a8f757827$export$aafa59e2e03f2942","$380ed06a8f757827$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","$f041f0b6e7a0d2ff$var$RAW_IMAGE_DATA","$f041f0b6e7a0d2ff$var$writeUint8","$f041f0b6e7a0d2ff$var$addSize","view","setUint8","$f041f0b6e7a0d2ff$var$writeInt16","setInt16","$f041f0b6e7a0d2ff$var$writeUint16","setUint16","$f041f0b6e7a0d2ff$var$writeInt32","setInt32","$f041f0b6e7a0d2ff$var$writeUint32","setUint32","$f041f0b6e7a0d2ff$var$writeFloat64","setFloat64","$f041f0b6e7a0d2ff$var$writeBytes","$f041f0b6e7a0d2ff$var$ensureSize","$f041f0b6e7a0d2ff$var$writeZeros","count","$f041f0b6e7a0d2ff$var$writeSignature","signature","$f041f0b6e7a0d2ff$var$writePascalString","text","padTo","$f041f0b6e7a0d2ff$var$getLargestLayerSize","layers","_i","layers_1","layer","canvas","imageData","_a","$f041f0b6e7a0d2ff$var$getLayerDimentions","width","height","children","$f041f0b6e7a0d2ff$var$writeSection","round","func","writeTotalLength","$f041f0b6e7a0d2ff$var$writeAdditionalLayerInfo","_loop_3","handler","invalidateTextLayers","has","infoHandlers_1","$cAUqy","infoHandlers","$f041f0b6e7a0d2ff$var$addChildren","children_1","sectionDivider","$f041f0b6e7a0d2ff$var$__assign","opened","fromBlendMode","blendMode","subType","newLength","newBuffer","newBytes","oldBytes","DataView","$f041f0b6e7a0d2ff$var$resizeBuffer","$f041f0b6e7a0d2ff$var$createThumbnail","createCanvas","scale","context","getContext","temp","putImageData","drawImage","$f041f0b6e7a0d2ff$var$isRowEmpty","left","right","$f041f0b6e7a0d2ff$var$isColEmpty","top","bottom","stride","writeInt16","writeUint16","writeInt32","writeUint32","writeFloat32","setFloat32","writeFloat64","writeFixedPoint32","writeFixedPointPath32","writeBytes","writeZeros","writeSignature","writePascalString","writeUnicodeString","writeUnicodeStringWithPadding","writeSection","imageResources","writeOptions","layerIds","generateThumbnail","thumbnail","getImageData","globalAlpha","hasAlpha","maxBufferSize","tempBuffer","_loop_1","resourceHandlers_1","$aqyg9","resourceHandlers","layersData","map","l","background","layerData","_b","_c","_d","_e","channels","channelId","compression","_f","trimImageData","trimmed","$f041f0b6e7a0d2ff$var$trimData","croppedData","createImageData","srcData","dstData","$f041f0b6e7a0d2ff$var$cropImageData","channelIds","noBackground","mask","unshift","channel","offsetForChannel","writeDataRLE","$f041f0b6e7a0d2ff$var$getLayerChannels","top_2","$f041f0b6e7a0d2ff$var$getChannels","_loop_2","top_1","channels_1","clamp","opacity","clipping","flags","transparencyProtected","hidden","vectorMask","defaultColor","params","userMaskDensity","userMaskFeather","vectorMaskDensity","vectorMaskFeather","disabled","positionRelativeToLayer","fromVectorData","$f041f0b6e7a0d2ff$var$writeLayerMaskData","$f041f0b6e7a0d2ff$var$writeLayerBlendingRanges","_i1","layersData_1","layersData_2","$f041f0b6e7a0d2ff$var$writeLayerInfo","info","overlayColorSpace","colorSpace1","colorSpace2","colorSpace3","colorSpace4","kind","$f041f0b6e7a0d2ff$var$writeGlobalLayerMaskInfo","globalLayerMaskInfo","writeColor","color","r","g","h","k","ColorSpace1","LayerMaskFlags1","MaskParams1","ChannelID1","Compression1","$e4d680eb7b71aa6d$var$revMap","keys","forEach","toBlendMode","pass","norm","diss","dark","idiv","lbrn","dkCl","lite","scrn","lddg","lgCl","over","sLit","hLit","vLit","lLit","pLit","hMix","diff","smud","fsub","fdiv","colr","layerColors","revMap","createEnum","prefix","def","rev","decode","encode","ColorSpace","LayerMaskFlags","MaskParams","ChannelID","Compression","resetImageData","Uint32Array","decodeBitmap","v","writeDataRaw","offsets","ol","offsets_1","strideStart","strideEnd","lastIndex","lastIndex2","startOffset","value1","value2","value3","countIndex","writeLast","length_1","createCanvasFromData","$e4d680eb7b71aa6d$var$tempCanvas","document","createElement","image","Image","createCanvasMethod","createCanvasFromDataMethod","createImageDataMethod","$92b49e225bf9343c$var$MOCK_HANDLERS","$92b49e225bf9343c$var$addHandler","infoHandlersMap","$92b49e225bf9343c$var$addHandlerAlias","$92b49e225bf9343c$var$hasKey","$92b49e225bf9343c$var$readBezierKnot","y0","readFixedPointPath32","x0","y1","x1","y2","$92b49e225bf9343c$var$writeBezierKnot","points","leftBytes","readInt16","transform","readFloat64","$klnll","readVersionAndDescriptor","warp","readFloat32","index","TextIndex","gridding","textGridding","antiAlias","Annt","AntA","orientation","Ornt","style","warpStyle","warpValue","perspective","warpPerspective","perspectiveOther","warpPerspectiveOther","rotate","warpRotate","EngineData","engineData","$6rQPt","decodeEngineData","$2TM27","parseEngineData","$92b49e225bf9343c$var$__assign","skipBytes","textDescriptor","serializeEngineData","encodeEngineData","writeVersionAndDescriptor","$92b49e225bf9343c$var$encodeWarp","vectorFill","vectorStroke","descriptor","$92b49e225bf9343c$var$parseVectorContent","$92b49e225bf9343c$var$serializeVectorContent","readSignature","desc","$92b49e225bf9343c$var$booleanOperations","readUint32","paths","invert","notLink","disable","path","selector","readUint16","boolOp","open","operation","knots","linked","left_1","resolution","clipboard","fillStartsWithAllPixels","linkedKnot","unlinkedKnot","readInt32","vectorOrigination","keyDescriptorList","item","keyShapeInvalidated","keyOriginType","keyOriginResolution","keyOriginShapeBBox","keyOriginShapeBoundingBox","parseUnits","Left","Btom","Rght","keyOriginRRectRadii","topRight","topLeft","bottomLeft","bottomRight","orig","keyOriginIndex","unitValueQuadVersion","unitsValue","readUnicodeString","nameSource","id","_psd","checkSignature","blendClippendElements","blendInteriorElements","knockout","protected","transparency","composite","position","artboards","layerColor","left1","_","readSection","layerTime","timestamp","logDevFeatures","unknown","propagate","unifyLayerPosition","unifyLayerStyle","unifyLayerVisibility","strokeEnabled","fillEnabled","lineWidth","strokeStyleLineWidth","lineDashOffset","strokeStyleLineDashOffset","miterLimit","strokeStyleMiterLimit","lineCapType","strokeStyleLineCapType","lineJoinType","strokeStyleLineJoinType","lineAlignment","strokeStyleLineAlignment","scaleLock","strokeStyleScaleLock","strokeAdjust","strokeStyleStrokeAdjust","lineDashSet","strokeStyleLineDashSet","BlnM","strokeStyleBlendMode","parsePercent","strokeStyleOpacity","content","strokeStyleContent","strokeStyleResolution","stroke","strokeStyleVersion","unitsPercent","artboard","rect","artboardRect","guideIndices","guideIndeces","presetName","artboardPresetName","$92b49e225bf9343c$var$parseColor","backgroundType","artboardBackgroundType","artb","$92b49e225bf9343c$var$serializeColor","usingAlignedRendering","$92b49e225bf9343c$var$placedLayerTypes","$92b49e225bf9343c$var$parseWarp","bounds","parseUnitsOrNumber","uOrder","vOrder","customEnvelopeWarp","meshPoints","pt","values","$92b49e225bf9343c$var$adjustmentType","adjustment","$92b49e225bf9343c$var$readLevelsChannel","shadowInput","highlightInput","shadowOutput","highlightOutput","midtoneInput","$92b49e225bf9343c$var$writeLevelsChannel","$92b49e225bf9343c$var$readCurveChannel","nodes","$92b49e225bf9343c$var$writeCurveChannel","channel_1","$92b49e225bf9343c$var$readHueChannel","hue","saturation","lightness","$92b49e225bf9343c$var$writeHueChannel","$92b49e225bf9343c$var$readColorBalance","cyanRed","magentaGreen","yellowBlue","$92b49e225bf9343c$var$writeColorBalance","$92b49e225bf9343c$var$readMixrChannel","red","green","blue","constant","$92b49e225bf9343c$var$writeMixrChannel","readPascalString","placedLayerType","warpVersion","placedLayer","placed","Idnt","Type","Trnf","Wdth","Hght","Rslt","Crop","crop","comp","compInfo","PgNm","totalPages","frameStep","numerator","denominator","duration","frameCount","nonAffineTransform","referencePoint","_target","_writer","linkedFiles","$92b49e225bf9343c$var$readLength64","version","name_1","fileType","fileCreator","dataSize","fileOpenDescriptor","file","creator","year","month","day","hour","minute","seconds","wholeSeconds","ms","time","Date","fileSize","readBytes","childDocumentID","assetModTime","assetLockedState","skipLinkedFilesData","sizeOffset","$92b49e225bf9343c$var$writeLength64","_lnkE","_psds","logMissingFeatures","_extn","pathList","effects","$26rz6","readEffects","writeEffects","brightness","contrast","meanValue","labColorOnly","useLegacy","rgb","defaultChannel","channelCount","exposure","gamma","vibrance","Strt","master","reds","yellows","greens","cyans","blues","magentas","shadows","midtones","highlights","preserveLuminosity","Yllw","Mgnt","useTint","presetKind","bwPresetKind","presetFileName","blackAndWhitePresetFileName","tintColor","readColor","density","monochrome","gray","$92b49e225bf9343c$var$colorLookupType","abstractProfile","deviceLinkProfile","$92b49e225bf9343c$var$LUTFormatType","look","cube","$92b49e225bf9343c$var$colorLookupOrder","bgr","lookupType","Dthr","dither","profile","LUTFormat","lutFormat","dataOrder","tableOrder","LUT3DFileData","lut3DFileData","LUT3DFileName","lut3DFileName","levels","level","$92b49e225bf9343c$var$grdmColorModels","$92b49e225bf9343c$var$readSelectiveColors","$92b49e225bf9343c$var$writeSelectiveColors","cmyk","$92b49e225bf9343c$var$parseGradient","grad","GrdF","samples_1","Intr","smoothness","colorStops","Clrs","location","Lctn","midpoint","Mdpn","opacityStops","Trns","Opct","roughness","Smth","colorModel","ClrS","randomSeed","RndS","restrictColors","VctC","addTransparency","ShTr","$92b49e225bf9343c$var$serializeGradient","samples_2","_a1","$92b49e225bf9343c$var$parseGradientContent","Grad","GrdT","Rvrs","reverse","Angl","angle","parseAngle","Algn","align","Ofst","Hrzn","Vrtc","$92b49e225bf9343c$var$parsePatternContent","Ptrn","Lnkd","phase","$92b49e225bf9343c$var$serializeGradientContent","unitsAngle","$92b49e225bf9343c$var$serializePatternContent","parsePercentOrAngle","Brgh","Blck","Lmnc","$92b49e225bf9343c$var$parseEffectObject","reportErrors","enabled","useGlobalLight","antialiased","highlightColor","shadowColor","FStl","highlightBlendMode","shadowBlendMode","BESl","direction","BESs","technique","bvlT","BETE","source","IGSr","highlightOpacity","shadowOpacity","altitude","soften","strength","noise","choke","jitter","distance","pattern","contour","curve","gradient","$92b49e225bf9343c$var$serializeEffectObject","objName","enab","uglg","Invr","hglC","sdwC","Styl","hglM","sdwM","bvlS","bvlD","GlwT","glwS","hglO","sdwO","lagl","Lald","Sftn","srgR","blur","Nose","Inpr","Ckmt","ShdN","Dstn","gradientType","stopsCount","opacityStopsCount","interpolation","mode","whites","neutrals","blacks","Vrsn","curvesPresetKind","curvesPresetFileName","mixerPresetKind","mixerPresetFileName","Cntr","means","auto","Auto","filterMask","colorSpace","autoExpandOffset","horizontal","vertical","origin","autoExpandEnabled","autoNestEnabled","autoPositionEnabled","shrinkwrapOnSaveEnabled","docDefaultNewArtboardBackgroundColor","docDefaultNewArtboardBackgroundType","masterFXSwitch","DrSh","dropShadow","IrSh","innerShadow","OrGl","outerGlow","IrGl","innerGlow","ebbl","bevel","SoFi","solidFill","patternFill","patternOverlay","GrFl","gradientOverlay","ChFX","satin","FrFX","fillType","FrFl","PntT","compositorUsed","description","reason","engine","Engn","enableCompCore","enableCompCoreGPU","compCoreSupport","compCoreGPUSupport","cinf","major","minor","fix","$18818631259b9992$var$bevelStyles","$18818631259b9992$var$readBlendMode","$18818631259b9992$var$writeBlendMode","$18818631259b9992$var$readFixedPoint8","$18818631259b9992$var$writeFixedPoint8","$18818631259b9992$var$writeShadowInfo","shadow","effectsCount","version_1","visible","blockSize","version_2","readFixedPoint32","shadowInfo","version_3","version_4","version_5","version_6","supportedColorModes","$43c94f66d9a06bba$var$colorModes","$43c94f66d9a06bba$var$setupGrayscale","$43c94f66d9a06bba$var$readUint8","getUint8","$43c94f66d9a06bba$var$peekUint8","$43c94f66d9a06bba$var$readInt16","getInt16","$43c94f66d9a06bba$var$readUint16","getUint16","$43c94f66d9a06bba$var$readInt32","getInt32","$43c94f66d9a06bba$var$readUint32","getUint32","$43c94f66d9a06bba$var$readFloat64","getFloat64","$43c94f66d9a06bba$var$readBytes","$43c94f66d9a06bba$var$readSignature","$43c94f66d9a06bba$var$readShortString","$43c94f66d9a06bba$var$readPascalString","$43c94f66d9a06bba$var$skipBytes","$43c94f66d9a06bba$var$readUnicodeString","$43c94f66d9a06bba$var$readUnicodeStringWithLength","$43c94f66d9a06bba$var$checkSignature","$43c94f66d9a06bba$var$readLayerRecord","channelID","channelLength","$43c94f66d9a06bba$var$readSection","$43c94f66d9a06bba$var$readLayerMaskData","compositeGrayBlendSource","compositeGraphBlendDestinationRange","ranges","sourceRange","destRange","$43c94f66d9a06bba$var$readLayerBlendingRanges","$43c94f66d9a06bba$var$readAdditionalLayerInfo","$43c94f66d9a06bba$var$readLayerChannelImageData","layerWidth","layerHeight","maskWidth","maskHeight","maskData","$43c94f66d9a06bba$var$readData","useImageData","targetData","throwForMissingFeatures","colorMode","$43c94f66d9a06bba$var$readDataRaw","$43c94f66d9a06bba$var$readDataRLE","pixelData","_width","step","lengths","Uint16Array","li","header","skipEmpty","peekUint8","getFloat32","readUnicodeStringWithLength","readAsciiString","bitsPerChannel","resourceHandlersMap","skip","skipThumbnail","layerCount","layerChannels","skipLayerImageData","pop","$43c94f66d9a06bba$var$readLayerInfo","$43c94f66d9a06bba$var$readGlobalLayerMaskInfo","hasChildren","skipCompositeImageData","ceil","$43c94f66d9a06bba$var$readImageData","readDataRLE","readPattern","version2","channelsCount","ch","length_2","pixelDepth","ctop","cleft","cbottom","cright","pixelDepth2","compressionMode","cdata","w","ox","oy","y_1","x_1","y_2","x_2","$7976e85542dc0fe3$var$addHandler","$7976e85542dc0fe3$var$RESOLUTION_UNITS","$7976e85542dc0fe3$var$MEASUREMENT_UNITS","$7976e85542dc0fe3$var$hex","$7976e85542dc0fe3$var$charToNibble","captionDigest","byte","xmpMetadata","$5wpNI","decodeString","$7976e85542dc0fe3$var$readUtf8String","encodeString","$7976e85542dc0fe3$var$writeUtf8String","$7976e85542dc0fe3$var$Inte","perceptual","printInformation","printerName","renderingIntent","Inte","PstS","printerManagesColors","printerProfile","MpBl","blackPointCompensation","printSixteenBit","hardProof","printProofSetup","proofSetup","builtin","Bltn","paperWhite","resolutionInfo","horizontalResolution","horizontalResolutionUnit","widthUnit","verticalResolution","verticalResolutionUnit","heightUnit","$7976e85542dc0fe3$var$printScaleStyles","printScale","alphaChannelNames","name_2","alphaIdentifiers","backgroundColor","globalAngle","globalAltitude","printFlags","labels","cropMarks","colorBars","registrationMarks","negative","flip","interpolate","caption","layerState","layersGroup","layerGroupsEnabledId","layerSelectionIds","gridAndGuidesInformation","grid","guides","guides_1","urlsList","pixelAspectRatio","aspect","iccUntaggedProfile","idsSeedNumber","thumbnailRaw","format","bitsPerPixel","planes","useRawThumbnail","toDataURL","widthBytes","totalSize","sizeAfterCompression","versionInfo","hasRealMergedData","writerName","readerName","fileVersion","none","dispose","$4053f470e500857f$var$charLengthInBytes","$4053f470e500857f$var$stringLengthInBytes","extra","$4053f470e500857f$var$writeCharacter","$4053f470e500857f$var$encodeStringTo","$4053f470e500857f$var$continuationByte","continuationByte1","stringLengthInBytes","encodeStringTo","byte1","toUpperCase","$ecf7e04a3a5ae4fa$var$unitsMap","RrPi","RrIn","RrCm","$ecf7e04a3a5ae4fa$var$unitsMapRev","$ecf7e04a3a5ae4fa$var$logErrors","$ecf7e04a3a5ae4fa$var$makeType","classID","setLogErrors","$ecf7e04a3a5ae4fa$var$fieldToExtType","MpgS","TrnS","psVersion","generatorSettings","$ecf7e04a3a5ae4fa$var$fieldToArrayExtType","$ecf7e04a3a5ae4fa$var$typeToField","TEXT","tdta","long","enum","bool","doub","UntF","VlLs","ObAr","$ecf7e04a3a5ae4fa$var$channels","$ecf7e04a3a5ae4fa$var$fieldToArrayType","FrLs","$ecf7e04a3a5ae4fa$var$fieldToType","$ecf7e04a3a5ae4fa$var$_i","$ecf7e04a3a5ae4fa$var$_a","$ecf7e04a3a5ae4fa$var$type","$ecf7e04a3a5ae4fa$var$_b","$ecf7e04a3a5ae4fa$var$_c","$ecf7e04a3a5ae4fa$var$field","$ecf7e04a3a5ae4fa$var$_d","$ecf7e04a3a5ae4fa$var$_e","$ecf7e04a3a5ae4fa$var$_f","$ecf7e04a3a5ae4fa$var$_g","$ecf7e04a3a5ae4fa$var$getTypeByKey","root","$ecf7e04a3a5ae4fa$var$readAsciiStringOrClassId","$ecf7e04a3a5ae4fa$var$writeAsciiStringOrClassId","$ecf7e04a3a5ae4fa$var$readDescriptorStructure","object","$ecf7e04a3a5ae4fa$var$readClassStructure","itemsCount","$ecf7e04a3a5ae4fa$var$readOSType","$ecf7e04a3a5ae4fa$var$writeDescriptorStructure","classId","keys_1","extType","$ecf7e04a3a5ae4fa$var$writeOSType","items","_a2","keyID","TypeID","name_3","$ecf7e04a3a5ae4fa$var$readReferenceStructure","type_1","low","high","length_3","length_4","type1","valuesCount","sig","charsCount","JSON","stringify","type_3","_type","$ecf7e04a3a5ae4fa$var$parseUnits","_a3","readAsciiStringOrClassId","readDescriptorStructure","writeDescriptorStructure","parseUnitsToNumber","_a4","expectedUnits","sharp","crisp","strong","smooth","arc","arcLower","arcUpper","arch","bulge","shellLower","shellUpper","flag","wave","fish","rise","fisheye","inflate","squeeze","twist","custom","normal","dissolve","darken","multiply","lighten","screen","overlay","difference","exclusion","subtract","divide","luminosity","emboss","up","down","softer","precise","edge","center","linear","radial","reflected","diamond","hsb","lab","outside","inside","butt","square","miter","$21c5fa39013f749a$var$isWhitespace","char","$21c5fa39013f749a$var$isNumber","skipWhitespace","getTextByte","getText","pushContainer","pushValue","pushProperty","char1","i_1","parseFloat","$21c5fa39013f749a$var$floatKeys","$21c5fa39013f749a$var$intArrays","condensed","writeString","writeIndent","indent","writeProperty","writeValue","serializeFloat","toFixed","serializeNumber","serializeInt","getKeys","splice","writeStringByte","inProperty","writePrefix","charAt","every","intArray","value_1","value_2","key_1","key1","$4b1e3e7817bb5a66$var$defaultFont","script","synthetic","$4b1e3e7817bb5a66$var$defaultParagraphStyle","justification","firstLineIndent","startIndent","endIndent","spaceBefore","spaceAfter","autoHyphenate","hyphenatedWordSize","preHyphen","postHyphen","consecutiveHyphens","zone","wordSpacing","letterSpacing","glyphSpacing","autoLeading","leadingType","hanging","burasagari","kinsokuOrder","everyLineComposer","$4b1e3e7817bb5a66$var$defaultStyle","font","fontSize","fauxBold","fauxItalic","leading","horizontalScale","verticalScale","tracking","autoKerning","kerning","baselineShift","fontCaps","fontBaseline","underline","strikethrough","ligatures","dLigatures","baselineDirection","tsume","styleRunAlignment","language","noBreak","fillColor","strokeColor","fillFlag","strokeFlag","fillFirst","yUnderline","outlineWidth","characterDirection","hindiNumbers","kashida","diacriticPos","$4b1e3e7817bb5a66$var$defaultGridInfo","isOn","show","leadingFillColor","alignLineHeightToGridFlags","$4b1e3e7817bb5a66$var$paragraphStyleKeys","$4b1e3e7817bb5a66$var$styleKeys","$4b1e3e7817bb5a66$var$antialias","$4b1e3e7817bb5a66$var$justification","$4b1e3e7817bb5a66$var$upperFirst","$4b1e3e7817bb5a66$var$encodeColor","$4b1e3e7817bb5a66$var$arraysEqual","$4b1e3e7817bb5a66$var$objectsEqual","$4b1e3e7817bb5a66$var$findOrAddFont","fonts","$4b1e3e7817bb5a66$var$decodeObject","Key","Values","$4b1e3e7817bb5a66$var$encodeObject","keys_2","$4b1e3e7817bb5a66$var$decodeParagraphStyle","$4b1e3e7817bb5a66$var$decodeStyle","$4b1e3e7817bb5a66$var$encodeParagraphStyle","$4b1e3e7817bb5a66$var$encodeStyle","$4b1e3e7817bb5a66$var$deduplicateValues","base","runs","runs_1","r1","keys_3","engineDict","EngineDict","resourceDict","ResourceDict","FontSet","f","Name","Script","FontType","Synthetic","Editor","Text","AntiAlias","useFractionalGlyphWidths","UseFractionalGlyphWidths","superscriptSize","SuperscriptSize","superscriptPosition","SuperscriptPosition","subscriptSize","SubscriptSize","subscriptPosition","SubscriptPosition","smallCapSize","SmallCapSize","photoshop","Rendered","Shapes","Children","Cookie","Photoshop","shapeType","ShapeType","PointBase","pointBase","BoxBounds","boxBounds","paragraphRun","ParagraphRun","paragraphStyle","paragraphStyleRuns","RunArray","run_1","RunLengthArray","ParagraphSheet","Properties","styleRun","StyleRun","styleRuns","StyleSheet","StyleSheetData","defFont","find","paragraphRunArray","paragraphRunLengthArray","_o","run_2","DefaultStyleSheet","$4b1e3e7817bb5a66$var$__assign","Adjustments","Axis","XY","styleSheetData","styleRunArray","styleRunLengthArray","_p","styleRuns_1","run_3","gridInfo","WritingDirection","Procession","TransformPoint0","TransformPoint1","TransformPoint2","defaultResources","KinsokuSet","NoStart","NoEnd","Keep","Hanging","MojiKumiSet","InternalName","TheNormalStyleSheet","TheNormalParagraphSheet","ParagraphSheetSet","StyleSheetSet","_g","_h","DefaultRunData","IsJoinable","GridInfo","GridIsOn","ShowGrid","GridSize","_j","GridLeading","_k","GridColor","GridLeadingFillColor","AlignLineHeightToGridFlags","_l","_m","Version","Lines","DocumentResources","ColorMode1","SectionDividerType1","ColorMode","SectionDividerType"],"version":3,"file":"dist.bb312f73.js.map"}