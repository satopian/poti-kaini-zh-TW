{"mappings":"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","sources":["node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/index.ts","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psdWriter.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/helpers.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/additionalInfo.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/effectsHelpers.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psdReader.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/imageResources.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/utf8.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/descriptor.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/engineData.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/text.ts","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psd.ts"],"sourcesContent":["import { Psd, ReadOptions, WriteOptions } from './psd';\nimport { PsdWriter, writePsd as writePsdInternal, getWriterBuffer, createWriter, getWriterBufferNoCopy } from './psdWriter';\nimport { PsdReader, readPsd as readPsdInternal, createReader } from './psdReader';\nexport { initializeCanvas } from './helpers';\nexport * from './psd';\nimport { fromByteArray } from 'base64-js';\nexport { PsdReader, PsdWriter };\n\ninterface BufferLike {\n\tbuffer: ArrayBuffer;\n\tbyteOffset: number;\n\tbyteLength: number;\n}\n\nexport const byteArrayToBase64 = fromByteArray;\n\nexport function readPsd(buffer: ArrayBuffer | BufferLike, options?: ReadOptions): Psd {\n\tconst reader = 'buffer' in buffer ?\n\t\tcreateReader(buffer.buffer, buffer.byteOffset, buffer.byteLength) :\n\t\tcreateReader(buffer);\n\treturn readPsdInternal(reader, options);\n}\n\nexport function writePsd(psd: Psd, options?: WriteOptions): ArrayBuffer {\n\tconst writer = createWriter();\n\twritePsdInternal(writer, psd, options);\n\treturn getWriterBuffer(writer);\n}\n\nexport function writePsdUint8Array(psd: Psd, options?: WriteOptions): Uint8Array {\n\tconst writer = createWriter();\n\twritePsdInternal(writer, psd, options);\n\treturn getWriterBufferNoCopy(writer);\n}\n\nexport function writePsdBuffer(psd: Psd, options?: WriteOptions): Buffer {\n\tif (typeof Buffer === 'undefined') {\n\t\tthrow new Error('Buffer not supported on this platform');\n\t}\n\n\treturn Buffer.from(writePsdUint8Array(psd, options));\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { Psd, Layer, LayerAdditionalInfo, ColorMode, SectionDividerType, WriteOptions, Color, GlobalLayerMaskInfo } from './psd';\nimport {\n\thasAlpha, createCanvas, writeDataRLE, PixelData, LayerChannelData, ChannelData,\n\toffsetForChannel, createImageData, fromBlendMode, ChannelID, Compression, clamp,\n\tLayerMaskFlags, MaskParams, ColorSpace, Bounds\n} from './helpers';\nimport { ExtendedWriteOptions, infoHandlers } from './additionalInfo';\nimport { resourceHandlers } from './imageResources';\n\nconst RAW_IMAGE_DATA = false;\n\nexport interface PsdWriter {\n\toffset: number;\n\tbuffer: ArrayBuffer;\n\tview: DataView;\n}\n\nexport function createWriter(size = 4096): PsdWriter {\n\tconst buffer = new ArrayBuffer(size);\n\tconst view = new DataView(buffer);\n\tconst offset = 0;\n\treturn { buffer, view, offset };\n}\n\nexport function getWriterBuffer(writer: PsdWriter) {\n\treturn writer.buffer.slice(0, writer.offset);\n}\n\nexport function getWriterBufferNoCopy(writer: PsdWriter) {\n\treturn new Uint8Array(writer.buffer, 0, writer.offset);\n}\n\nexport function writeUint8(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 1);\n\twriter.view.setUint8(offset, value);\n}\n\nexport function writeInt16(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 2);\n\twriter.view.setInt16(offset, value, false);\n}\n\nexport function writeUint16(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 2);\n\twriter.view.setUint16(offset, value, false);\n}\n\nexport function writeInt32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setInt32(offset, value, false);\n}\n\nexport function writeUint32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setUint32(offset, value, false);\n}\n\nexport function writeFloat32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setFloat32(offset, value, false);\n}\n\nexport function writeFloat64(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 8);\n\twriter.view.setFloat64(offset, value, false);\n}\n\n// 32-bit fixed-point number 16.16\nexport function writeFixedPoint32(writer: PsdWriter, value: number) {\n\twriteInt32(writer, value * (1 << 16));\n}\n\n// 32-bit fixed-point number 8.24\nexport function writeFixedPointPath32(writer: PsdWriter, value: number) {\n\twriteInt32(writer, value * (1 << 24));\n}\n\nexport function writeBytes(writer: PsdWriter, buffer: Uint8Array | undefined) {\n\tif (buffer) {\n\t\tensureSize(writer, writer.offset + buffer.length);\n\t\tconst bytes = new Uint8Array(writer.buffer);\n\t\tbytes.set(buffer, writer.offset);\n\t\twriter.offset += buffer.length;\n\t}\n}\n\nexport function writeZeros(writer: PsdWriter, count: number) {\n\tfor (let i = 0; i < count; i++) {\n\t\twriteUint8(writer, 0);\n\t}\n}\n\nexport function writeSignature(writer: PsdWriter, signature: string) {\n\tif (signature.length !== 4) throw new Error(`Invalid signature: '${signature}'`);\n\n\tfor (let i = 0; i < 4; i++) {\n\t\twriteUint8(writer, signature.charCodeAt(i));\n\t}\n}\n\nexport function writePascalString(writer: PsdWriter, text: string, padTo: number) {\n\tlet length = text.length;\n\twriteUint8(writer, length);\n\n\tfor (let i = 0; i < length; i++) {\n\t\tconst code = text.charCodeAt(i);\n\t\twriteUint8(writer, code < 128 ? code : '?'.charCodeAt(0));\n\t}\n\n\twhile (++length % padTo) {\n\t\twriteUint8(writer, 0);\n\t}\n}\n\nexport function writeUnicodeString(writer: PsdWriter, text: string) {\n\twriteUint32(writer, text.length);\n\n\tfor (let i = 0; i < text.length; i++) {\n\t\twriteUint16(writer, text.charCodeAt(i));\n\t}\n}\n\nexport function writeUnicodeStringWithPadding(writer: PsdWriter, text: string) {\n\twriteUint32(writer, text.length + 1);\n\n\tfor (let i = 0; i < text.length; i++) {\n\t\twriteUint16(writer, text.charCodeAt(i));\n\t}\n\n\twriteUint16(writer, 0);\n}\n\nfunction getLargestLayerSize(layers: Layer[] = []): number {\n\tlet max = 0;\n\n\tfor (const layer of layers) {\n\t\tif (layer.canvas || layer.imageData) {\n\t\t\tconst { width, height } = getLayerDimentions(layer);\n\t\t\tmax = Math.max(max, 2 * height + 2 * width * height);\n\t\t}\n\n\t\tif (layer.children) {\n\t\t\tmax = Math.max(max, getLargestLayerSize(layer.children));\n\t\t}\n\t}\n\n\treturn max;\n}\n\nexport function writeSection(writer: PsdWriter, round: number, func: () => void, writeTotalLength = false) {\n\tconst offset = writer.offset;\n\twriteInt32(writer, 0);\n\n\tfunc();\n\n\tlet length = writer.offset - offset - 4;\n\tlet len = length;\n\n\twhile ((len % round) !== 0) {\n\t\twriteUint8(writer, 0);\n\t\tlen++;\n\t}\n\n\tif (writeTotalLength) {\n\t\tlength = len;\n\t}\n\n\twriter.view.setInt32(offset, length, false);\n}\n\nexport function writePsd(writer: PsdWriter, psd: Psd, options: WriteOptions = {}) {\n\tif (!(+psd.width > 0 && +psd.height > 0))\n\t\tthrow new Error('Invalid document size');\n\n\tlet imageResources = psd.imageResources || {};\n\n\tconst writeOptions: ExtendedWriteOptions = { ...options, layerIds: [] };\n\n\tif (writeOptions.generateThumbnail) {\n\t\timageResources = { ...imageResources, thumbnail: createThumbnail(psd) };\n\t}\n\n\tlet imageData = psd.imageData;\n\n\tif (!imageData && psd.canvas) {\n\t\timageData = psd.canvas.getContext('2d')!.getImageData(0, 0, psd.canvas.width, psd.canvas.height);\n\t}\n\n\tif (imageData && (psd.width !== imageData.width || psd.height !== imageData.height))\n\t\tthrow new Error('Document canvas must have the same size as document');\n\n\tconst globalAlpha = !!imageData && hasAlpha(imageData);\n\tconst maxBufferSize = Math.max(getLargestLayerSize(psd.children), 4 * 2 * psd.width * psd.height + 2 * psd.height);\n\tconst tempBuffer = new Uint8Array(maxBufferSize);\n\n\t// header\n\twriteSignature(writer, '8BPS');\n\twriteUint16(writer, 1); // version\n\twriteZeros(writer, 6);\n\twriteUint16(writer, globalAlpha ? 4 : 3); // channels\n\twriteUint32(writer, psd.height);\n\twriteUint32(writer, psd.width);\n\twriteUint16(writer, 8); // bits per channel\n\twriteUint16(writer, ColorMode.RGB);\n\n\t// color mode data\n\twriteSection(writer, 1, () => {\n\t\t// TODO: implement\n\t});\n\n\t// image resources\n\twriteSection(writer, 1, () => {\n\t\tfor (const handler of resourceHandlers) {\n\t\t\tif (handler.has(imageResources)) {\n\t\t\t\twriteSignature(writer, '8BIM');\n\t\t\t\twriteUint16(writer, handler.key);\n\t\t\t\twritePascalString(writer, '', 2);\n\t\t\t\twriteSection(writer, 2, () => handler.write(writer, imageResources));\n\t\t\t}\n\t\t}\n\t});\n\n\t// layer and mask info\n\twriteSection(writer, 2, () => {\n\t\twriteLayerInfo(tempBuffer, writer, psd, globalAlpha, writeOptions);\n\t\twriteGlobalLayerMaskInfo(writer, psd.globalLayerMaskInfo);\n\t\twriteAdditionalLayerInfo(writer, psd, psd, writeOptions);\n\t});\n\n\t// image data\n\tconst channels = globalAlpha ? [0, 1, 2, 3] : [0, 1, 2];\n\tconst data: PixelData = imageData || {\n\t\tdata: new Uint8Array(4 * psd.width * psd.height),\n\t\twidth: psd.width,\n\t\theight: psd.height,\n\t};\n\n\twriteUint16(writer, Compression.RleCompressed);\n\n\tif (RAW_IMAGE_DATA && (psd as any).imageDataRaw) {\n\t\tconsole.log('writing raw image data');\n\t\twriteBytes(writer, (psd as any).imageDataRaw);\n\t} else {\n\t\twriteBytes(writer, writeDataRLE(tempBuffer, data, psd.width, psd.height, channels));\n\t}\n}\n\nfunction writeLayerInfo(tempBuffer: Uint8Array, writer: PsdWriter, psd: Psd, globalAlpha: boolean, options: ExtendedWriteOptions) {\n\twriteSection(writer, 4, () => {\n\t\tconst layers: Layer[] = [];\n\n\t\taddChildren(layers, psd.children);\n\n\t\tif (!layers.length) layers.push({});\n\n\t\twriteInt16(writer, globalAlpha ? -layers.length : layers.length);\n\n\t\tconst layersData = layers.map((l, i) => getChannels(tempBuffer, l, i === 0, options));\n\n\t\t// layer records\n\t\tfor (const layerData of layersData) {\n\t\t\tconst { layer, top, left, bottom, right, channels } = layerData;\n\n\t\t\twriteInt32(writer, top);\n\t\t\twriteInt32(writer, left);\n\t\t\twriteInt32(writer, bottom);\n\t\t\twriteInt32(writer, right);\n\t\t\twriteUint16(writer, channels.length);\n\n\t\t\tfor (const c of channels) {\n\t\t\t\twriteInt16(writer, c.channelId);\n\t\t\t\twriteInt32(writer, c.length);\n\t\t\t}\n\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, fromBlendMode[layer.blendMode!] || 'norm');\n\t\t\twriteUint8(writer, Math.round(clamp(layer.opacity ?? 1, 0, 1) * 255));\n\t\t\twriteUint8(writer, layer.clipping ? 1 : 0);\n\n\t\t\tlet flags = 0x08; // 1 for Photoshop 5.0 and later, tells if bit 4 has useful information\n\t\t\tif (layer.transparencyProtected) flags |= 0x01;\n\t\t\tif (layer.hidden) flags |= 0x02;\n\t\t\tif (layer.vectorMask || (layer.sectionDivider && layer.sectionDivider.type !== SectionDividerType.Other)) {\n\t\t\t\tflags |= 0x10; // pixel data irrelevant to appearance of document\n\t\t\t}\n\n\t\t\twriteUint8(writer, flags);\n\t\t\twriteUint8(writer, 0); // filler\n\t\t\twriteSection(writer, 1, () => {\n\t\t\t\twriteLayerMaskData(writer, layer, layerData);\n\t\t\t\twriteLayerBlendingRanges(writer, psd);\n\t\t\t\twritePascalString(writer, layer.name || '', 4);\n\t\t\t\twriteAdditionalLayerInfo(writer, layer, psd, options);\n\t\t\t});\n\t\t}\n\n\t\t// layer channel image data\n\t\tfor (const layerData of layersData) {\n\t\t\tfor (const channel of layerData.channels) {\n\t\t\t\twriteUint16(writer, channel.compression);\n\n\t\t\t\tif (channel.buffer) {\n\t\t\t\t\twriteBytes(writer, channel.buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, true);\n}\n\nfunction writeLayerMaskData(writer: PsdWriter, { mask }: Layer, layerData: LayerChannelData) {\n\twriteSection(writer, 1, () => {\n\t\tif (!mask) return;\n\n\t\tconst m = layerData.mask || {} as Partial<Bounds>;\n\t\twriteInt32(writer, m.top!);\n\t\twriteInt32(writer, m.left!);\n\t\twriteInt32(writer, m.bottom!);\n\t\twriteInt32(writer, m.right!);\n\t\twriteUint8(writer, mask.defaultColor!);\n\n\t\tlet params = 0;\n\t\tif (mask.userMaskDensity !== undefined) params |= MaskParams.UserMaskDensity;\n\t\tif (mask.userMaskFeather !== undefined) params |= MaskParams.UserMaskFeather;\n\t\tif (mask.vectorMaskDensity !== undefined) params |= MaskParams.VectorMaskDensity;\n\t\tif (mask.vectorMaskFeather !== undefined) params |= MaskParams.VectorMaskFeather;\n\n\t\tlet flags = 0;\n\t\tif (mask.disabled) flags |= LayerMaskFlags.LayerMaskDisabled;\n\t\tif (mask.positionRelativeToLayer) flags |= LayerMaskFlags.PositionRelativeToLayer;\n\t\tif (mask.fromVectorData) flags |= LayerMaskFlags.LayerMaskFromRenderingOtherData;\n\t\tif (params) flags |= LayerMaskFlags.MaskHasParametersAppliedToIt;\n\n\t\twriteUint8(writer, flags);\n\n\t\tif (params) {\n\t\t\twriteUint8(writer, params);\n\n\t\t\tif (mask.userMaskDensity !== undefined) writeUint8(writer, Math.round(mask.userMaskDensity * 0xff));\n\t\t\tif (mask.userMaskFeather !== undefined) writeFloat64(writer, mask.userMaskFeather);\n\t\t\tif (mask.vectorMaskDensity !== undefined) writeUint8(writer, Math.round(mask.vectorMaskDensity * 0xff));\n\t\t\tif (mask.vectorMaskFeather !== undefined) writeFloat64(writer, mask.vectorMaskFeather);\n\t\t}\n\n\t\t// TODO: handle rest of the fields\n\n\t\twriteZeros(writer, 2);\n\t});\n}\n\nfunction writeLayerBlendingRanges(writer: PsdWriter, psd: Psd) {\n\twriteSection(writer, 1, () => {\n\t\twriteUint32(writer, 65535);\n\t\twriteUint32(writer, 65535);\n\n\t\t// TODO: use always 4 instead ?\n\t\tconst channels = psd.channels || 0;\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\twriteUint32(writer, 65535);\n\t\t\twriteUint32(writer, 65535);\n\t\t}\n\t});\n}\n\nfunction writeGlobalLayerMaskInfo(writer: PsdWriter, info: GlobalLayerMaskInfo | undefined) {\n\twriteSection(writer, 1, () => {\n\t\tif (info) {\n\t\t\twriteUint16(writer, info.overlayColorSpace);\n\t\t\twriteUint16(writer, info.colorSpace1);\n\t\t\twriteUint16(writer, info.colorSpace2);\n\t\t\twriteUint16(writer, info.colorSpace3);\n\t\t\twriteUint16(writer, info.colorSpace4);\n\t\t\twriteUint16(writer, info.opacity * 0xff);\n\t\t\twriteUint8(writer, info.kind);\n\t\t\twriteZeros(writer, 3);\n\t\t}\n\t});\n}\n\nfunction writeAdditionalLayerInfo(writer: PsdWriter, target: LayerAdditionalInfo, psd: Psd, options: ExtendedWriteOptions) {\n\tfor (const handler of infoHandlers) {\n\t\tconst key = handler.key;\n\n\t\tif (key === 'Txt2' && options.invalidateTextLayers) continue;\n\n\t\tif (handler.has(target)) {\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, key);\n\n\t\t\tconst align = (key === 'Txt2' || key === 'luni' || key === 'vmsk' || key === 'artb' || key === 'artd' ||\n\t\t\t\tkey === 'vogk' || key === 'SoLd' || key === 'lnk2' || key === 'vscg' || key === 'vsms' ||\n\t\t\t\tkey === 'GdFl') ? 4 : 2;\n\t\t\twriteSection(writer, align, () => handler.write(writer, target, psd, options), key !== 'Txt2');\n\t\t}\n\t}\n}\n\nfunction addChildren(layers: Layer[], children: Layer[] | undefined) {\n\tif (!children) return;\n\n\tfor (const c of children) {\n\t\tif (c.children && c.canvas) throw new Error(`Invalid layer, cannot have both 'canvas' and 'children' properties`);\n\t\tif (c.children && c.imageData) throw new Error(`Invalid layer, cannot have both 'imageData' and 'children' properties`);\n\n\t\tif (c.children) {\n\t\t\tlayers.push({\n\t\t\t\tname: '</Layer group>',\n\t\t\t\tsectionDivider: {\n\t\t\t\t\ttype: SectionDividerType.BoundingSectionDivider,\n\t\t\t\t},\n\t\t\t\t// TESTING\n\t\t\t\t// nameSource: 'lset',\n\t\t\t\t// id: [4, 0, 0, 8, 11, 0, 0, 0, 0, 14][layers.length] || 0,\n\t\t\t\t// layerColor: 'none',\n\t\t\t\t// timestamp: [1611346817.349021, 0, 0, 1611346817.349175, 1611346817.3491833, 0, 0, 0, 0, 1611346817.349832][layers.length] || 0,\n\t\t\t\t// protected: {},\n\t\t\t\t// referencePoint: { x: 0, y: 0 },\n\t\t\t});\n\t\t\taddChildren(layers, c.children);\n\t\t\tlayers.push({\n\t\t\t\tsectionDivider: {\n\t\t\t\t\ttype: c.opened === false ? SectionDividerType.ClosedFolder : SectionDividerType.OpenFolder,\n\t\t\t\t\tkey: fromBlendMode[c.blendMode!] || 'pass',\n\t\t\t\t\tsubType: 0,\n\t\t\t\t},\n\t\t\t\t...c,\n\t\t\t});\n\t\t} else {\n\t\t\tlayers.push({ ...c });\n\t\t}\n\t}\n}\n\nfunction resizeBuffer(writer: PsdWriter, size: number) {\n\tlet newLength = writer.buffer.byteLength;\n\n\tdo {\n\t\tnewLength *= 2;\n\t} while (size > newLength);\n\n\tconst newBuffer = new ArrayBuffer(newLength);\n\tconst newBytes = new Uint8Array(newBuffer);\n\tconst oldBytes = new Uint8Array(writer.buffer);\n\tnewBytes.set(oldBytes);\n\twriter.buffer = newBuffer;\n\twriter.view = new DataView(writer.buffer);\n}\n\nfunction ensureSize(writer: PsdWriter, size: number) {\n\tif (size > writer.buffer.byteLength) {\n\t\tresizeBuffer(writer, size);\n\t}\n}\n\nfunction addSize(writer: PsdWriter, size: number) {\n\tconst offset = writer.offset;\n\tensureSize(writer, writer.offset += size);\n\treturn offset;\n}\n\nfunction createThumbnail(psd: Psd) {\n\tconst canvas = createCanvas(10, 10);\n\tlet scale = 1;\n\n\tif (psd.width > psd.height) {\n\t\tcanvas.width = 160;\n\t\tcanvas.height = Math.floor(psd.height * (canvas.width / psd.width));\n\t\tscale = canvas.width / psd.width;\n\t} else {\n\t\tcanvas.height = 160;\n\t\tcanvas.width = Math.floor(psd.width * (canvas.height / psd.height));\n\t\tscale = canvas.height / psd.height;\n\t}\n\n\tconst context = canvas.getContext('2d')!;\n\tcontext.scale(scale, scale);\n\n\tif (psd.imageData) {\n\t\tconst temp = createCanvas(psd.imageData.width, psd.imageData.height);\n\t\ttemp.getContext('2d')!.putImageData(psd.imageData, 0, 0);\n\t\tcontext.drawImage(temp, 0, 0);\n\t} else if (psd.canvas) {\n\t\tcontext.drawImage(psd.canvas, 0, 0);\n\t}\n\n\treturn canvas;\n}\n\nfunction getChannels(\n\ttempBuffer: Uint8Array, layer: Layer, background: boolean, options: WriteOptions\n): LayerChannelData {\n\tconst layerData = getLayerChannels(tempBuffer, layer, background, options);\n\tconst mask = layer.mask;\n\n\tif (mask) {\n\t\tlet { top = 0, left = 0, right = 0, bottom = 0 } = mask;\n\t\tlet { width, height } = getLayerDimentions(mask);\n\t\tlet imageData = mask.imageData;\n\n\t\tif (!imageData && mask.canvas && width && height) {\n\t\t\timageData = mask.canvas.getContext('2d')!.getImageData(0, 0, width, height);\n\t\t}\n\n\t\tif (width && height && imageData) {\n\t\t\tright = left + width;\n\t\t\tbottom = top + height;\n\n\t\t\tlet buffer = writeDataRLE(tempBuffer, imageData, width, height, [0])!;\n\n\t\t\tif (RAW_IMAGE_DATA && (layer as any).maskDataRaw) {\n\t\t\t\t// console.log('written raw layer image data');\n\t\t\t\tbuffer = (layer as any).maskDataRaw;\n\t\t\t}\n\n\t\t\tlayerData.mask = { top, left, right, bottom };\n\t\t\tlayerData.channels.push({\n\t\t\t\tchannelId: ChannelID.UserMask,\n\t\t\t\tcompression: Compression.RleCompressed,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tlength: 2 + buffer.length,\n\t\t\t});\n\t\t} else {\n\t\t\tlayerData.mask = { top: 0, left: 0, right: 0, bottom: 0 };\n\t\t\tlayerData.channels.push({\n\t\t\t\tchannelId: ChannelID.UserMask,\n\t\t\t\tcompression: Compression.RawData,\n\t\t\t\tbuffer: new Uint8Array(0),\n\t\t\t\tlength: 0,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn layerData;\n}\n\nfunction getLayerDimentions({ canvas, imageData }: Layer): { width: number; height: number; } {\n\treturn imageData || canvas || { width: 0, height: 0 };\n}\n\nfunction cropImageData(data: ImageData, left: number, top: number, width: number, height: number) {\n\tconst croppedData = createImageData(width, height);\n\tconst srcData = data.data;\n\tconst dstData = croppedData.data;\n\n\tfor (let y = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tlet src = ((x + left) + (y + top) * width) * 4;\n\t\t\tlet dst = (x + y * width) * 4;\n\t\t\tdstData[dst] = srcData[src];\n\t\t\tdstData[dst + 1] = srcData[src + 1];\n\t\t\tdstData[dst + 2] = srcData[src + 2];\n\t\t\tdstData[dst + 3] = srcData[src + 3];\n\t\t}\n\t}\n\n\treturn croppedData;\n}\n\nfunction getLayerChannels(\n\ttempBuffer: Uint8Array, layer: Layer, background: boolean, options: WriteOptions\n): LayerChannelData {\n\tlet { top = 0, left = 0, right = 0, bottom = 0 } = layer;\n\tlet channels: ChannelData[] = [\n\t\t{ channelId: ChannelID.Transparency, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Red, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Green, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Blue, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t];\n\n\tlet { width, height } = getLayerDimentions(layer);\n\n\tif (!(layer.canvas || layer.imageData) || !width || !height) {\n\t\tright = left;\n\t\tbottom = top;\n\t\treturn { layer, top, left, right, bottom, channels };\n\t}\n\n\tright = left + width;\n\tbottom = top + height;\n\n\tlet data = layer.imageData || layer.canvas!.getContext('2d')!.getImageData(0, 0, width, height);\n\n\tif (options.trimImageData) {\n\t\tconst trimmed = trimData(data);\n\n\t\tif (trimmed.left !== 0 || trimmed.top !== 0 || trimmed.right !== data.width || trimmed.bottom !== data.height) {\n\t\t\tleft += trimmed.left;\n\t\t\ttop += trimmed.top;\n\t\t\tright -= (data.width - trimmed.right);\n\t\t\tbottom -= (data.height - trimmed.bottom);\n\t\t\twidth = right - left;\n\t\t\theight = bottom - top;\n\n\t\t\tif (!width || !height) {\n\t\t\t\treturn { layer, top, left, right, bottom, channels };\n\t\t\t}\n\n\t\t\tif (layer.imageData) {\n\t\t\t\tdata = cropImageData(data, trimmed.left, trimmed.top, width, height);\n\t\t\t} else {\n\t\t\t\tdata = layer.canvas!.getContext('2d')!.getImageData(trimmed.left, trimmed.top, width, height);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst channelIds = [\n\t\tChannelID.Red,\n\t\tChannelID.Green,\n\t\tChannelID.Blue,\n\t];\n\n\tif (!background || options.noBackground || layer.mask || hasAlpha(data) || (RAW_IMAGE_DATA && (layer as any).imageDataRaw?.['-1'])) {\n\t\tchannelIds.unshift(ChannelID.Transparency);\n\t}\n\n\tchannels = channelIds.map(channel => {\n\t\tconst offset = offsetForChannel(channel);\n\t\tlet buffer = writeDataRLE(tempBuffer, data, width, height, [offset])!;\n\n\t\tif (RAW_IMAGE_DATA && (layer as any).imageDataRaw) {\n\t\t\t// console.log('written raw layer image data');\n\t\t\tbuffer = (layer as any).imageDataRaw[channel];\n\t\t}\n\n\t\treturn {\n\t\t\tchannelId: channel,\n\t\t\tcompression: Compression.RleCompressed,\n\t\t\tbuffer: buffer,\n\t\t\tlength: 2 + buffer.length,\n\t\t};\n\t});\n\n\treturn { layer, top, left, right, bottom, channels };\n}\n\nfunction isRowEmpty({ data, width }: PixelData, y: number, left: number, right: number) {\n\tconst start = ((y * width + left) * 4 + 3) | 0;\n\tconst end = (start + (right - left) * 4) | 0;\n\n\tfor (let i = start; i < end; i = (i + 4) | 0) {\n\t\tif (data[i] !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction isColEmpty({ data, width }: PixelData, x: number, top: number, bottom: number) {\n\tconst stride = (width * 4) | 0;\n\tconst start = (top * stride + x * 4 + 3) | 0;\n\n\tfor (let y = top, i = start; y < bottom; y++, i = (i + stride) | 0) {\n\t\tif (data[i] !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction trimData(data: PixelData) {\n\tlet top = 0;\n\tlet left = 0;\n\tlet right = data.width;\n\tlet bottom = data.height;\n\n\twhile (top < bottom && isRowEmpty(data, top, left, right))\n\t\ttop++;\n\twhile (bottom > top && isRowEmpty(data, bottom - 1, left, right))\n\t\tbottom--;\n\twhile (left < right && isColEmpty(data, left, top, bottom))\n\t\tleft++;\n\twhile (right > left && isColEmpty(data, right - 1, top, bottom))\n\t\tright--;\n\n\treturn { top, left, right, bottom };\n}\n\nexport function writeColor(writer: PsdWriter, color: Color | undefined) {\n\tif (!color) {\n\t\twriteUint16(writer, ColorSpace.RGB);\n\t\twriteZeros(writer, 8);\n\t} else if ('r' in color) {\n\t\twriteUint16(writer, ColorSpace.RGB);\n\t\twriteUint16(writer, Math.round(color.r * 257));\n\t\twriteUint16(writer, Math.round(color.g * 257));\n\t\twriteUint16(writer, Math.round(color.b * 257));\n\t\twriteUint16(writer, 0);\n\t} else if ('l' in color) {\n\t\twriteUint16(writer, ColorSpace.Lab);\n\t\twriteUint16(writer, Math.round(color.l * 100));\n\t\twriteUint16(writer, Math.round(color.a * 100));\n\t\twriteUint16(writer, Math.round(color.b * 100));\n\t\twriteUint16(writer, 0);\n\t} else if ('h' in color) {\n\t\twriteUint16(writer, ColorSpace.HSB);\n\t\twriteUint16(writer, Math.round(color.h));\n\t\twriteUint16(writer, Math.round(color.s));\n\t\twriteUint16(writer, Math.round(color.b));\n\t\twriteUint16(writer, 0);\n\t} else if ('c' in color) {\n\t\twriteUint16(writer, ColorSpace.CMYK);\n\t\twriteUint16(writer, Math.round(color.c));\n\t\twriteUint16(writer, Math.round(color.m));\n\t\twriteUint16(writer, Math.round(color.y));\n\t\twriteUint16(writer, Math.round(color.k));\n\t} else {\n\t\twriteUint16(writer, ColorSpace.Grayscale);\n\t\twriteUint16(writer, Math.round(color.k));\n\t\twriteZeros(writer, 6);\n\t}\n}\n","import { fromByteArray } from 'base64-js';\nimport { Layer, BlendMode, LayerColor } from './psd';\n\nexport const fromBlendMode: { [key: string]: string } = {};\nexport const toBlendMode: { [key: string]: BlendMode } = {\n\t'pass': 'pass through',\n\t'norm': 'normal',\n\t'diss': 'dissolve',\n\t'dark': 'darken',\n\t'mul ': 'multiply',\n\t'idiv': 'color burn',\n\t'lbrn': 'linear burn',\n\t'dkCl': 'darker color',\n\t'lite': 'lighten',\n\t'scrn': 'screen',\n\t'div ': 'color dodge',\n\t'lddg': 'linear dodge',\n\t'lgCl': 'lighter color',\n\t'over': 'overlay',\n\t'sLit': 'soft light',\n\t'hLit': 'hard light',\n\t'vLit': 'vivid light',\n\t'lLit': 'linear light',\n\t'pLit': 'pin light',\n\t'hMix': 'hard mix',\n\t'diff': 'difference',\n\t'smud': 'exclusion',\n\t'fsub': 'subtract',\n\t'fdiv': 'divide',\n\t'hue ': 'hue',\n\t'sat ': 'saturation',\n\t'colr': 'color',\n\t'lum ': 'luminosity',\n};\n\nObject.keys(toBlendMode).forEach(key => fromBlendMode[toBlendMode[key]] = key);\n\nexport const layerColors: LayerColor[] = [\n\t'none', 'red', 'orange', 'yellow', 'green', 'blue', 'violet', 'gray'\n];\n\nexport interface Dict {\n\t[key: string]: string;\n}\n\nexport function revMap(map: Dict) {\n\tconst result: Dict = {};\n\tObject.keys(map).forEach(key => result[map[key]] = key);\n\treturn result;\n}\n\nexport function createEnum<T>(prefix: string, def: string, map: Dict) {\n\tconst rev = revMap(map);\n\tconst decode = (val: string): T => {\n\t\tconst value = val.split('.')[1];\n\t\tif (value && !rev[value]) throw new Error(`Unrecognized value for enum: ${val}`);\n\t\treturn (rev[value] as any) || def;\n\t};\n\tconst encode = (val: T | undefined): string => {\n\t\tif (val && !map[val as any]) throw new Error(`Invalid value for enum: ${val}`);\n\t\treturn `${prefix}.${map[val as any] || map[def]}`;\n\t};\n\treturn { decode, encode };\n}\n\nexport const enum ColorSpace {\n\tRGB = 0,\n\tHSB = 1,\n\tCMYK = 2,\n\tLab = 7,\n\tGrayscale = 8,\n}\n\nexport const enum LayerMaskFlags {\n\tPositionRelativeToLayer = 1,\n\tLayerMaskDisabled = 2,\n\tInvertLayerMaskWhenBlending = 4, // obsolete\n\tLayerMaskFromRenderingOtherData = 8,\n\tMaskHasParametersAppliedToIt = 16,\n}\n\nexport const enum MaskParams {\n\tUserMaskDensity = 1,\n\tUserMaskFeather = 2,\n\tVectorMaskDensity = 4,\n\tVectorMaskFeather = 8,\n}\n\nexport const enum ChannelID {\n\tRed = 0,\n\tGreen = 1,\n\tBlue = 2,\n\tTransparency = -1,\n\tUserMask = -2,\n\tRealUserMask = -3,\n}\n\nexport const enum Compression {\n\tRawData = 0,\n\tRleCompressed = 1,\n\tZipWithoutPrediction = 2,\n\tZipWithPrediction = 3,\n}\n\nexport interface ChannelData {\n\tchannelId: ChannelID;\n\tcompression: Compression;\n\tbuffer: Uint8Array | undefined;\n\tlength: number;\n}\n\nexport interface Bounds {\n\ttop: number;\n\tleft: number;\n\tright: number;\n\tbottom: number;\n}\n\nexport interface LayerChannelData {\n\tlayer: Layer;\n\tchannels: ChannelData[];\n\ttop: number;\n\tleft: number;\n\tright: number;\n\tbottom: number;\n\tmask?: Bounds;\n}\n\nexport type PixelArray = Uint8ClampedArray | Uint8Array;\n\nexport interface PixelData {\n\tdata: PixelArray;\n\twidth: number;\n\theight: number;\n}\n\nexport function offsetForChannel(channelId: ChannelID) {\n\tswitch (channelId) {\n\t\tcase ChannelID.Red: return 0;\n\t\tcase ChannelID.Green: return 1;\n\t\tcase ChannelID.Blue: return 2;\n\t\tcase ChannelID.Transparency: return 3;\n\t\tdefault: return channelId + 1;\n\t}\n}\n\nexport function clamp(value: number, min: number, max: number) {\n\treturn value < min ? min : (value > max ? max : value);\n}\n\nexport function hasAlpha(data: PixelData) {\n\tconst size = data.width * data.height * 4;\n\n\tfor (let i = 3; i < size; i += 4) {\n\t\tif (data.data[i] !== 255) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function resetImageData({ width, height, data }: PixelData) {\n\tconst size = (width * height) | 0;\n\tconst buffer = new Uint32Array(data.buffer);\n\n\tfor (let p = 0; p < size; p = (p + 1) | 0) {\n\t\tbuffer[p] = 0xff000000;\n\t}\n}\n\nexport function decodeBitmap(input: PixelArray, output: PixelArray, width: number, height: number) {\n\tfor (let y = 0, p = 0, o = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width;) {\n\t\t\tlet b = input[o++];\n\n\t\t\tfor (let i = 0; i < 8 && x < width; i++, x++) {\n\t\t\t\tconst v = b & 0x80 ? 0 : 255;\n\t\t\t\tb = b << 1;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = 255;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function writeDataRaw(data: PixelData, offset: number, width: number, height: number) {\n\tif (!width || !height)\n\t\treturn undefined;\n\n\tconst array = new Uint8Array(width * height);\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tarray[i] = data.data[i * 4 + offset];\n\t}\n\n\treturn array;\n}\n\nexport function writeDataRLE(buffer: Uint8Array, { data }: PixelData, width: number, height: number, offsets: number[]) {\n\tif (!width || !height)\n\t\treturn undefined;\n\n\tconst stride = (4 * width) | 0;\n\n\tlet ol = 0;\n\tlet o = (offsets.length * 2 * height) | 0;\n\n\tfor (const offset of offsets) {\n\t\tfor (let y = 0, p = offset | 0; y < height; y++) {\n\t\t\tconst strideStart = (y * stride) | 0;\n\t\t\tconst strideEnd = (strideStart + stride) | 0;\n\t\t\tconst lastIndex = (strideEnd + offset - 4) | 0;\n\t\t\tconst lastIndex2 = (lastIndex - 4) | 0;\n\t\t\tconst startOffset = o;\n\n\t\t\tfor (p = (strideStart + offset) | 0; p < strideEnd; p = (p + 4) | 0) {\n\t\t\t\tif (p < lastIndex2) {\n\t\t\t\t\tlet value1 = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tlet value2 = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tlet value3 = data[p];\n\n\t\t\t\t\tif (value1 === value2 && value1 === value3) {\n\t\t\t\t\t\tlet count = 3;\n\n\t\t\t\t\t\twhile (count < 128 && p < lastIndex && data[(p + 4) | 0] === value1) {\n\t\t\t\t\t\t\tcount = (count + 1) | 0;\n\t\t\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuffer[o++] = 1 - count;\n\t\t\t\t\t\tbuffer[o++] = value1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst countIndex = o;\n\t\t\t\t\t\tlet writeLast = true;\n\t\t\t\t\t\tlet count = 1;\n\t\t\t\t\t\tbuffer[o++] = 0;\n\t\t\t\t\t\tbuffer[o++] = value1;\n\n\t\t\t\t\t\twhile (p < lastIndex && count < 128) {\n\t\t\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\t\t\tvalue1 = value2;\n\t\t\t\t\t\t\tvalue2 = value3;\n\t\t\t\t\t\t\tvalue3 = data[p];\n\n\t\t\t\t\t\t\tif (value1 === value2 && value1 === value3) {\n\t\t\t\t\t\t\t\tp = (p - 12) | 0;\n\t\t\t\t\t\t\t\twriteLast = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\tbuffer[o++] = value1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (writeLast) {\n\t\t\t\t\t\t\tif (count < 127) {\n\t\t\t\t\t\t\t\tbuffer[o++] = value2;\n\t\t\t\t\t\t\t\tbuffer[o++] = value3;\n\t\t\t\t\t\t\t\tcount += 2;\n\t\t\t\t\t\t\t} else if (count < 128) {\n\t\t\t\t\t\t\t\tbuffer[o++] = value2;\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\tp = (p - 4) | 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tp = (p - 8) | 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuffer[countIndex] = count - 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (p === lastIndex) {\n\t\t\t\t\tbuffer[o++] = 0;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t} else { // p === lastIndex2\n\t\t\t\t\tbuffer[o++] = 1;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst length = o - startOffset;\n\t\t\tbuffer[ol++] = (length >> 8) & 0xff;\n\t\t\tbuffer[ol++] = length & 0xff;\n\t\t}\n\t}\n\n\treturn buffer.slice(0, o);\n}\n\nexport let createCanvas: (width: number, height: number) => HTMLCanvasElement = () => {\n\tthrow new Error('Canvas not initialized, use initializeCanvas method to set up createCanvas method');\n};\n\nexport let createCanvasFromData: (data: Uint8Array) => HTMLCanvasElement = () => {\n\tthrow new Error('Canvas not initialized, use initializeCanvas method to set up createCanvasFromData method');\n};\n\nlet tempCanvas: HTMLCanvasElement | undefined = undefined;\n\nexport let createImageData: (width: number, height: number) => ImageData = (width, height) => {\n\tif (!tempCanvas) tempCanvas = createCanvas(1, 1);\n\treturn tempCanvas.getContext('2d')!.createImageData(width, height);\n};\n\nif (typeof document !== 'undefined') {\n\tcreateCanvas = (width, height) => {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\treturn canvas;\n\t};\n\n\tcreateCanvasFromData = (data) => {\n\t\tconst image = new Image();\n\t\timage.src = 'data:image/jpeg;base64,' + fromByteArray(data);\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\t\tcanvas.getContext('2d')!.drawImage(image, 0, 0);\n\t\treturn canvas;\n\t};\n}\n\nexport function initializeCanvas(\n\tcreateCanvasMethod: (width: number, height: number) => HTMLCanvasElement,\n\tcreateCanvasFromDataMethod?: (data: Uint8Array) => HTMLCanvasElement,\n\tcreateImageDataMethod?: (width: number, height: number) => ImageData\n) {\n\tcreateCanvas = createCanvasMethod;\n\tcreateCanvasFromData = createCanvasFromDataMethod || createCanvasFromData;\n\tcreateImageData = createImageDataMethod || createImageData;\n}\n","import { fromByteArray, toByteArray } from 'base64-js';\nimport { readEffects, writeEffects } from './effectsHelpers';\nimport { clamp, createEnum, layerColors } from './helpers';\nimport {\n\tLayerAdditionalInfo, LayerEffectShadow, LayerEffectsOuterGlow, LayerEffectInnerGlow, LayerEffectBevel,\n\tLayerEffectSolidFill, LayerEffectPatternOverlay, LayerEffectGradientOverlay, LayerEffectSatin, EffectContour,\n\tEffectNoiseGradient, BezierPath, Psd, VectorContent, LayerEffectStroke, ExtraGradientInfo, EffectPattern,\n\tExtraPatternInfo, ReadOptions, BrightnessAdjustment, ExposureAdjustment, VibranceAdjustment,\n\tColorBalanceAdjustment, BlackAndWhiteAdjustment, PhotoFilterAdjustment, ChannelMixerChannel,\n\tChannelMixerAdjustment, PosterizeAdjustment, ThresholdAdjustment, GradientMapAdjustment, CMYK,\n\tSelectiveColorAdjustment, ColorLookupAdjustment, LevelsAdjustmentChannel, LevelsAdjustment,\n\tCurvesAdjustment, CurvesAdjustmentChannel, HueSaturationAdjustment, HueSaturationAdjustmentChannel,\n\tPresetInfo, Color, ColorBalanceValues, WriteOptions, LinkedFile, PlacedLayerType, Warp, EffectSolidGradient, KeyDescriptorItem, BooleanOperation,\n} from './psd';\nimport {\n\tPsdReader, readSignature, readUnicodeString, skipBytes, readUint32, readUint8, readFloat64, readUint16,\n\treadBytes, readInt16, checkSignature, readFloat32, readFixedPointPath32, readSection, readColor, readInt32,\n\treadPascalString,\n} from './psdReader';\nimport {\n\tPsdWriter, writeZeros, writeSignature, writeBytes, writeUint32, writeUint16, writeFloat64, writeUint8,\n\twriteInt16, writeFloat32, writeFixedPointPath32, writeUnicodeString, writeSection, writeUnicodeStringWithPadding,\n\twriteColor, writePascalString, writeInt32,\n} from './psdWriter';\nimport {\n\tAnnt, BESl, BESs, BETE, BlnM, bvlT, ClrS, DesciptorGradient, DescriptorColor, DescriptorGradientContent,\n\tDescriptorPatternContent, DescriptorUnitsValue, DescriptorVectorContent, FrFl, FStl, GrdT, IGSr, Ornt,\n\tparseAngle, parsePercent, parsePercentOrAngle, parseUnits, parseUnitsOrNumber, readVersionAndDescriptor, StrokeDescriptor,\n\tstrokeStyleLineAlignment, strokeStyleLineCapType, strokeStyleLineJoinType, TextDescriptor, textGridding,\n\tunitsAngle, unitsPercent, unitsValue, WarpDescriptor, warpStyle, writeVersionAndDescriptor\n} from './descriptor';\nimport { serializeEngineData, parseEngineData } from './engineData';\nimport { encodeEngineData, decodeEngineData } from './text';\n\nconst MOCK_HANDLERS = false;\n\nexport interface ExtendedWriteOptions extends WriteOptions {\n\tlayerIds: number[];\n}\n\ntype HasMethod = (target: LayerAdditionalInfo) => boolean;\ntype ReadMethod = (reader: PsdReader, target: LayerAdditionalInfo, left: () => number, psd: Psd, options: ReadOptions) => void;\ntype WriteMethod = (writer: PsdWriter, target: LayerAdditionalInfo, psd: Psd, options: ExtendedWriteOptions) => void;\n\nexport interface InfoHandler {\n\tkey: string;\n\thas: HasMethod;\n\tread: ReadMethod;\n\twrite: WriteMethod;\n}\n\nexport const infoHandlers: InfoHandler[] = [];\nexport const infoHandlersMap: { [key: string]: InfoHandler } = {};\n\nfunction addHandler(key: string, has: HasMethod, read: ReadMethod, write: WriteMethod) {\n\tconst handler: InfoHandler = { key, has, read, write };\n\tinfoHandlers.push(handler);\n\tinfoHandlersMap[handler.key] = handler;\n}\n\nfunction addHandlerAlias(key: string, target: string) {\n\tinfoHandlersMap[key] = infoHandlersMap[target];\n}\n\nfunction hasKey(key: keyof LayerAdditionalInfo) {\n\treturn (target: LayerAdditionalInfo) => target[key] !== undefined;\n}\n\naddHandler(\n\t'TySh',\n\thasKey('text'),\n\t(reader, target, leftBytes) => {\n\t\tif (readInt16(reader) !== 1) throw new Error(`Invalid TySh version`);\n\n\t\tconst transform: number[] = [];\n\t\tfor (let i = 0; i < 6; i++) transform.push(readFloat64(reader));\n\n\t\tif (readInt16(reader) !== 50) throw new Error(`Invalid TySh text version`);\n\t\tconst text: TextDescriptor = readVersionAndDescriptor(reader);\n\n\t\tif (readInt16(reader) !== 1) throw new Error(`Invalid TySh warp version`);\n\t\tconst warp: WarpDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.text = {\n\t\t\ttransform,\n\t\t\tleft: readFloat32(reader),\n\t\t\ttop: readFloat32(reader),\n\t\t\tright: readFloat32(reader),\n\t\t\tbottom: readFloat32(reader),\n\t\t\ttext: text['Txt '].replace(/\\r/g, '\\n'),\n\t\t\tindex: text.TextIndex || 0,\n\t\t\tgridding: textGridding.decode(text.textGridding),\n\t\t\tantiAlias: Annt.decode(text.AntA),\n\t\t\torientation: Ornt.decode(text.Ornt),\n\t\t\twarp: {\n\t\t\t\tstyle: warpStyle.decode(warp.warpStyle),\n\t\t\t\tvalue: warp.warpValue || 0,\n\t\t\t\tperspective: warp.warpPerspective || 0,\n\t\t\t\tperspectiveOther: warp.warpPerspectiveOther || 0,\n\t\t\t\trotate: Ornt.decode(warp.warpRotate),\n\t\t\t},\n\t\t};\n\n\t\tif (text.EngineData) {\n\t\t\tconst engineData = decodeEngineData(parseEngineData(text.EngineData));\n\n\t\t\t// const before = parseEngineData(text.EngineData);\n\t\t\t// const after = encodeEngineData(engineData);\n\t\t\t// require('fs').writeFileSync('before.txt', require('util').inspect(before, false, 99, false), 'utf8');\n\t\t\t// require('fs').writeFileSync('after.txt', require('util').inspect(after, false, 99, false), 'utf8');\n\n\t\t\t// console.log(require('util').inspect(parseEngineData(text.EngineData), false, 99, true));\n\t\t\ttarget.text = { ...target.text, ...engineData };\n\t\t\t// console.log(require('util').inspect(target.text, false, 99, true));\n\t\t}\n\n\t\tskipBytes(reader, leftBytes());\n\t},\n\t(writer, target) => {\n\t\tconst text = target.text!;\n\t\tconst warp = text.warp || {};\n\t\tconst transform = text.transform || [1, 0, 0, 1, 0, 0];\n\n\t\tconst textDescriptor: TextDescriptor = {\n\t\t\t'Txt ': (text.text || '').replace(/\\r?\\n/g, '\\r'),\n\t\t\ttextGridding: textGridding.encode(text.gridding),\n\t\t\tOrnt: Ornt.encode(text.orientation),\n\t\t\tAntA: Annt.encode(text.antiAlias),\n\t\t\tTextIndex: text.index || 0,\n\t\t\tEngineData: serializeEngineData(encodeEngineData(text)),\n\t\t};\n\n\t\twriteInt16(writer, 1); // version\n\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\twriteFloat64(writer, transform[i]);\n\t\t}\n\n\t\twriteInt16(writer, 50); // text version\n\t\twriteVersionAndDescriptor(writer, '', 'TxLr', textDescriptor);\n\n\t\twriteInt16(writer, 1); // warp version\n\t\twriteVersionAndDescriptor(writer, '', 'warp', encodeWarp(warp));\n\n\t\twriteFloat32(writer, text.left!);\n\t\twriteFloat32(writer, text.top!);\n\t\twriteFloat32(writer, text.right!);\n\t\twriteFloat32(writer, text.bottom!);\n\n\t\t// writeZeros(writer, 2);\n\t},\n);\n\n// vector fills\n\naddHandler(\n\t'SoCo',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\ttarget.vectorFill.type === 'color',\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'GdFl',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\t(target.vectorFill.type === 'solid' || target.vectorFill.type === 'noise'),\n\t(reader, target, left) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'PtFl',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\ttarget.vectorFill.type === 'pattern',\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'vscg',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke !== undefined,\n\t(reader, target, left) => {\n\t\treadSignature(reader); // key\n\t\tconst desc = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(desc);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor, key } = serializeVectorContent(target.vectorFill!);\n\t\twriteSignature(writer, key);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\nfunction readBezierKnot(reader: PsdReader, width: number, height: number) {\n\tconst y0 = readFixedPointPath32(reader) * height;\n\tconst x0 = readFixedPointPath32(reader) * width;\n\tconst y1 = readFixedPointPath32(reader) * height;\n\tconst x1 = readFixedPointPath32(reader) * width;\n\tconst y2 = readFixedPointPath32(reader) * height;\n\tconst x2 = readFixedPointPath32(reader) * width;\n\treturn [x0, y0, x1, y1, x2, y2];\n}\n\nfunction writeBezierKnot(writer: PsdWriter, points: number[], width: number, height: number) {\n\twriteFixedPointPath32(writer, points[1] / height); // y0\n\twriteFixedPointPath32(writer, points[0] / width); // x0\n\twriteFixedPointPath32(writer, points[3] / height); // y1\n\twriteFixedPointPath32(writer, points[2] / width); // x1\n\twriteFixedPointPath32(writer, points[5] / height); // y2\n\twriteFixedPointPath32(writer, points[4] / width); // x2\n}\n\nconst booleanOperations: BooleanOperation[] = ['exclude', 'combine', 'subtract', 'intersect'];\n\naddHandler(\n\t'vmsk',\n\thasKey('vectorMask'),\n\t(reader, target, left, { width, height }) => {\n\t\tif (readUint32(reader) !== 3) throw new Error('Invalid vmsk version');\n\n\t\ttarget.vectorMask = { paths: [] };\n\t\tconst vectorMask = target.vectorMask;\n\n\t\tconst flags = readUint32(reader);\n\t\tvectorMask.invert = (flags & 1) !== 0;\n\t\tvectorMask.notLink = (flags & 2) !== 0;\n\t\tvectorMask.disable = (flags & 4) !== 0;\n\n\t\tconst paths = vectorMask.paths;\n\t\tlet path: BezierPath | undefined = undefined;\n\n\t\twhile (left() >= 26) {\n\t\t\tconst selector = readUint16(reader);\n\n\t\t\tswitch (selector) {\n\t\t\t\tcase 0: // Closed subpath length record\n\t\t\t\tcase 3: { // Open subpath length record\n\t\t\t\t\treadUint16(reader); // count\n\t\t\t\t\tconst boolOp = readUint16(reader);\n\t\t\t\t\treadUint16(reader); // always 1 ?\n\t\t\t\t\tskipBytes(reader, 18);\n\t\t\t\t\tpath = { open: selector === 3, operation: booleanOperations[boolOp], knots: [] };\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 1: // Closed subpath Bezier knot, linked\n\t\t\t\tcase 2: // Closed subpath Bezier knot, unlinked\n\t\t\t\tcase 4: // Open subpath Bezier knot, linked\n\t\t\t\tcase 5: // Open subpath Bezier knot, unlinked\n\t\t\t\t\tpath!.knots.push({ linked: (selector === 1 || selector === 4), points: readBezierKnot(reader, width, height) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6: // Path fill rule record\n\t\t\t\t\tskipBytes(reader, 24);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7: { // Clipboard record\n\t\t\t\t\t// TODO: check if these need to be multiplied by document size\n\t\t\t\t\tconst top = readFixedPointPath32(reader);\n\t\t\t\t\tconst left = readFixedPointPath32(reader);\n\t\t\t\t\tconst bottom = readFixedPointPath32(reader);\n\t\t\t\t\tconst right = readFixedPointPath32(reader);\n\t\t\t\t\tconst resolution = readFixedPointPath32(reader);\n\t\t\t\t\tskipBytes(reader, 4);\n\t\t\t\t\tvectorMask.clipboard = { top, left, bottom, right, resolution };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 8: // Initial fill rule record\n\t\t\t\t\tvectorMask.fillStartsWithAllPixels = !!readUint16(reader);\n\t\t\t\t\tskipBytes(reader, 22);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: throw new Error('Invalid vmsk section');\n\t\t\t}\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, { width, height }) => {\n\t\tconst vectorMask = target.vectorMask!;\n\t\tconst flags =\n\t\t\t(vectorMask.invert ? 1 : 0) |\n\t\t\t(vectorMask.notLink ? 2 : 0) |\n\t\t\t(vectorMask.disable ? 4 : 0);\n\n\t\twriteUint32(writer, 3); // version\n\t\twriteUint32(writer, flags);\n\n\t\t// initial entry\n\t\twriteUint16(writer, 6);\n\t\twriteZeros(writer, 24);\n\n\t\tconst clipboard = vectorMask.clipboard;\n\t\tif (clipboard) {\n\t\t\twriteUint16(writer, 7);\n\t\t\twriteFixedPointPath32(writer, clipboard.top);\n\t\t\twriteFixedPointPath32(writer, clipboard.left);\n\t\t\twriteFixedPointPath32(writer, clipboard.bottom);\n\t\t\twriteFixedPointPath32(writer, clipboard.right);\n\t\t\twriteFixedPointPath32(writer, clipboard.resolution);\n\t\t\twriteZeros(writer, 4);\n\t\t}\n\n\t\tif (vectorMask.fillStartsWithAllPixels !== undefined) {\n\t\t\twriteUint16(writer, 8);\n\t\t\twriteUint16(writer, vectorMask.fillStartsWithAllPixels ? 1 : 0);\n\t\t\twriteZeros(writer, 22);\n\t\t}\n\n\t\tfor (const path of vectorMask.paths) {\n\t\t\twriteUint16(writer, path.open ? 3 : 0);\n\t\t\twriteUint16(writer, path.knots.length);\n\t\t\twriteUint16(writer, Math.abs(booleanOperations.indexOf(path.operation))); // default to 1 if not found\n\t\t\twriteUint16(writer, 1);\n\t\t\twriteZeros(writer, 18); // TODO: these are sometimes non-zero\n\n\t\t\tconst linkedKnot = path.open ? 4 : 1;\n\t\t\tconst unlinkedKnot = path.open ? 5 : 2;\n\n\t\t\tfor (const { linked, points } of path.knots) {\n\t\t\t\twriteUint16(writer, linked ? linkedKnot : unlinkedKnot);\n\t\t\t\twriteBezierKnot(writer, points, width, height);\n\t\t\t}\n\t\t}\n\t},\n);\n\n// TODO: need to write vmsk if has outline ?\naddHandlerAlias('vsms', 'vmsk');\n// addHandlerAlias('vmsk', 'vsms');\n\ninterface VogkDescriptor {\n\tkeyDescriptorList: {\n\t\tkeyShapeInvalidated?: boolean;\n\t\tkeyOriginType?: number;\n\t\tkeyOriginResolution?: number;\n\t\tkeyOriginRRectRadii?: {\n\t\t\tunitValueQuadVersion: number;\n\t\t\ttopRight: DescriptorUnitsValue;\n\t\t\ttopLeft: DescriptorUnitsValue;\n\t\t\tbottomLeft: DescriptorUnitsValue;\n\t\t\tbottomRight: DescriptorUnitsValue;\n\t\t};\n\t\tkeyOriginShapeBBox?: {\n\t\t\tunitValueQuadVersion: number;\n\t\t\t'Top ': DescriptorUnitsValue;\n\t\t\tLeft: DescriptorUnitsValue;\n\t\t\tBtom: DescriptorUnitsValue;\n\t\t\tRght: DescriptorUnitsValue;\n\t\t};\n\t\tkeyOriginIndex: number;\n\t}[];\n}\n\naddHandler(\n\t'vogk',\n\thasKey('vectorOrigination'),\n\t(reader, target, left) => {\n\t\tif (readInt32(reader) !== 1) throw new Error(`Invalid vogk version`);\n\t\tconst desc = readVersionAndDescriptor(reader) as VogkDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\t\ttarget.vectorOrigination = { keyDescriptorList: [] };\n\n\t\tfor (const i of desc.keyDescriptorList) {\n\t\t\tconst item: KeyDescriptorItem = {};\n\n\t\t\tif (i.keyShapeInvalidated != null) item.keyShapeInvalidated = i.keyShapeInvalidated;\n\t\t\tif (i.keyOriginType != null) item.keyOriginType = i.keyOriginType;\n\t\t\tif (i.keyOriginResolution != null) item.keyOriginResolution = i.keyOriginResolution;\n\t\t\tif (i.keyOriginShapeBBox != null) {\n\t\t\t\titem.keyOriginShapeBoundingBox = {\n\t\t\t\t\ttop: parseUnits(i.keyOriginShapeBBox['Top ']),\n\t\t\t\t\tleft: parseUnits(i.keyOriginShapeBBox.Left),\n\t\t\t\t\tbottom: parseUnits(i.keyOriginShapeBBox.Btom),\n\t\t\t\t\tright: parseUnits(i.keyOriginShapeBBox.Rght),\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (i.keyOriginRRectRadii != null) {\n\t\t\t\titem.keyOriginRRectRadii = {\n\t\t\t\t\ttopRight: parseUnits(i.keyOriginRRectRadii.topRight),\n\t\t\t\t\ttopLeft: parseUnits(i.keyOriginRRectRadii.topLeft),\n\t\t\t\t\tbottomLeft: parseUnits(i.keyOriginRRectRadii.bottomLeft),\n\t\t\t\t\tbottomRight: parseUnits(i.keyOriginRRectRadii.bottomRight),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttarget.vectorOrigination.keyDescriptorList.push(item);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\ttarget;\n\t\tconst orig = target.vectorOrigination!;\n\t\tconst desc: VogkDescriptor = { keyDescriptorList: [] };\n\n\t\tfor (let i = 0; i < orig.keyDescriptorList.length; i++) {\n\t\t\tconst item = orig.keyDescriptorList[i];\n\n\t\t\tif (item.keyShapeInvalidated) {\n\t\t\t\tdesc.keyDescriptorList.push({ keyShapeInvalidated: true, keyOriginIndex: i });\n\t\t\t} else {\n\t\t\t\tdesc.keyDescriptorList.push({\n\t\t\t\t\tkeyOriginType: item.keyOriginType ?? 4,\n\t\t\t\t\tkeyOriginResolution: item.keyOriginResolution ?? 72,\n\t\t\t\t} as any);\n\n\t\t\t\tconst out = desc.keyDescriptorList[desc.keyDescriptorList.length - 1];\n\n\t\t\t\tif (item.keyOriginRRectRadii) {\n\t\t\t\t\tout.keyOriginRRectRadii = {\n\t\t\t\t\t\tunitValueQuadVersion: 1,\n\t\t\t\t\t\ttopRight: unitsValue(item.keyOriginRRectRadii.topRight, 'topRight'),\n\t\t\t\t\t\ttopLeft: unitsValue(item.keyOriginRRectRadii.topLeft, 'topLeft'),\n\t\t\t\t\t\tbottomLeft: unitsValue(item.keyOriginRRectRadii.bottomLeft, 'bottomLeft'),\n\t\t\t\t\t\tbottomRight: unitsValue(item.keyOriginRRectRadii.bottomRight, 'bottomRight'),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (item.keyOriginShapeBoundingBox) {\n\t\t\t\t\tout.keyOriginShapeBBox = {\n\t\t\t\t\t\tunitValueQuadVersion: 1,\n\t\t\t\t\t\t'Top ': unitsValue(item.keyOriginShapeBoundingBox.top, 'top'),\n\t\t\t\t\t\tLeft: unitsValue(item.keyOriginShapeBoundingBox.left, 'left'),\n\t\t\t\t\t\tBtom: unitsValue(item.keyOriginShapeBoundingBox.bottom, 'bottom'),\n\t\t\t\t\t\tRght: unitsValue(item.keyOriginShapeBoundingBox.right, 'right'),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tout.keyOriginIndex = i;\n\t\t\t}\n\t\t}\n\n\t\twriteInt32(writer, 1); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t}\n);\n\naddHandler(\n\t'luni',\n\thasKey('name'),\n\t(reader, target, left) => {\n\t\ttarget.name = readUnicodeString(reader);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteUnicodeString(writer, target.name!);\n\t\t// writeUint16(writer, 0); // padding (but not extending string length)\n\t},\n);\n\naddHandler(\n\t'lnsr',\n\thasKey('nameSource'),\n\t(reader, target) => target.nameSource = readSignature(reader),\n\t(writer, target) => writeSignature(writer, target.nameSource!),\n);\n\naddHandler(\n\t'lyid',\n\thasKey('id'),\n\t(reader, target) => target.id = readUint32(reader),\n\t(writer, target, _psd, options) => {\n\t\tlet id = target.id!;\n\t\twhile (options.layerIds.indexOf(id) !== -1) id += 100; // make sure we don't have duplicate layer ids\n\t\twriteUint32(writer, id);\n\t\toptions.layerIds.push(id);\n\t},\n);\n\naddHandler(\n\t'lsct',\n\thasKey('sectionDivider'),\n\t(reader, target, left) => {\n\t\ttarget.sectionDivider = { type: readUint32(reader) };\n\n\t\tif (left()) {\n\t\t\tcheckSignature(reader, '8BIM');\n\t\t\ttarget.sectionDivider.key = readSignature(reader);\n\t\t}\n\n\t\tif (left()) {\n\t\t\t// 0 = normal\n\t\t\t// 1 = scene group, affects the animation timeline.\n\t\t\ttarget.sectionDivider.subType = readUint32(reader);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, target.sectionDivider!.type);\n\n\t\tif (target.sectionDivider!.key) {\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, target.sectionDivider!.key);\n\n\t\t\tif (target.sectionDivider!.subType !== undefined) {\n\t\t\t\twriteUint32(writer, target.sectionDivider!.subType);\n\t\t\t}\n\t\t}\n\t},\n);\n\naddHandler(\n\t'clbl',\n\thasKey('blendClippendElements'),\n\t(reader, target) => {\n\t\ttarget.blendClippendElements = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.blendClippendElements ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'infx',\n\thasKey('blendInteriorElements'),\n\t(reader, target) => {\n\t\ttarget.blendInteriorElements = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.blendInteriorElements ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'knko',\n\thasKey('knockout'),\n\t(reader, target) => {\n\t\ttarget.knockout = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.knockout ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'lspf',\n\thasKey('protected'),\n\t(reader, target) => {\n\t\tconst flags = readUint32(reader);\n\t\ttarget.protected = {\n\t\t\ttransparency: (flags & 0x01) !== 0,\n\t\t\tcomposite: (flags & 0x02) !== 0,\n\t\t\tposition: (flags & 0x04) !== 0,\n\t\t};\n\n\t\tif (flags & 0x08) target.protected.artboards = true;\n\t},\n\t(writer, target) => {\n\t\tconst flags =\n\t\t\t(target.protected!.transparency ? 0x01 : 0) |\n\t\t\t(target.protected!.composite ? 0x02 : 0) |\n\t\t\t(target.protected!.position ? 0x04 : 0) |\n\t\t\t(target.protected!.artboards ? 0x08 : 0);\n\n\t\twriteUint32(writer, flags);\n\t},\n);\n\naddHandler(\n\t'lclr',\n\thasKey('layerColor'),\n\t(reader, target) => {\n\t\tconst color = readUint16(reader);\n\t\tskipBytes(reader, 6);\n\t\ttarget.layerColor = layerColors[color];\n\t},\n\t(writer, target) => {\n\t\tconst index = layerColors.indexOf(target.layerColor!);\n\t\twriteUint16(writer, index === -1 ? 0 : index);\n\t\twriteZeros(writer, 6);\n\t},\n);\n\ninterface CustomDescriptor {\n\tlayerTime?: number;\n}\n\ninterface FrameListDescriptor {\n\tLaID: number;\n\tLaSt: {\n\t\tenab?: boolean;\n\t\tIMsk?: { Ofst: { Hrzn: number; Vrtc: number; } };\n\t\tVMsk?: { Ofst: { Hrzn: number; Vrtc: number; } };\n\t\tFXRf?: { Hrzn: number; Vrtc: number; };\n\t\tFrLs: number[];\n\t}[];\n}\n\naddHandler(\n\t'shmd',\n\thasKey('timestamp'),\n\t(reader, target, left, _, options) => {\n\t\tconst count = readUint32(reader);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tcheckSignature(reader, '8BIM');\n\t\t\tconst key = readSignature(reader);\n\t\t\treadUint8(reader); // copy\n\t\t\tskipBytes(reader, 3);\n\n\t\t\treadSection(reader, 1, left => {\n\t\t\t\tif (key === 'cust') {\n\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as CustomDescriptor;\n\t\t\t\t\tif (desc.layerTime !== undefined) target.timestamp = desc.layerTime;\n\t\t\t\t} else if (key === 'mlst') {\n\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as FrameListDescriptor;\n\t\t\t\t\toptions.logDevFeatures && console.log('mlst', desc);\n\t\t\t\t\t// options.logDevFeatures && console.log('mlst', require('util').inspect(desc, false, 99, true));\n\t\t\t\t} else if (key === 'mdyn') {\n\t\t\t\t\t// frame flags\n\t\t\t\t\tconst unknown = readUint16(reader);\n\t\t\t\t\tconst propagate = readUint8(reader);\n\t\t\t\t\tconst flags = readUint8(reader);\n\t\t\t\t\tconst unifyLayerPosition = (flags & 1) !== 0;\n\t\t\t\t\tconst unifyLayerStyle = (flags & 2) !== 0;\n\t\t\t\t\tconst unifyLayerVisibility = (flags & 4) !== 0;\n\t\t\t\t\toptions.logDevFeatures && console.log(\n\t\t\t\t\t\t'mdyn', 'unknown:', unknown, 'propagate:', propagate,\n\t\t\t\t\t\t'flags:', flags, { unifyLayerPosition, unifyLayerStyle, unifyLayerVisibility });\n\n\t\t\t\t\t// const desc = readVersionAndDescriptor(reader) as FrameListDescriptor;\n\t\t\t\t\t// console.log('mdyn', require('util').inspect(desc, false, 99, true));\n\t\t\t\t} else {\n\t\t\t\t\toptions.logDevFeatures && console.log('Unhandled metadata', key);\n\t\t\t\t}\n\n\t\t\t\tskipBytes(reader, left());\n\t\t\t});\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst desc: CustomDescriptor = {\n\t\t\tlayerTime: target.timestamp!,\n\t\t};\n\n\t\twriteUint32(writer, 1); // count\n\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'cust');\n\t\twriteUint8(writer, 0); // copy (always false)\n\t\twriteZeros(writer, 3);\n\t\twriteSection(writer, 2, () => writeVersionAndDescriptor(writer, '', 'metadata', desc), true);\n\t},\n);\n\naddHandler(\n\t'vstk',\n\thasKey('vectorStroke'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as StrokeDescriptor;\n\t\ttarget.vectorStroke = {\n\t\t\tstrokeEnabled: desc.strokeEnabled,\n\t\t\tfillEnabled: desc.fillEnabled,\n\t\t\tlineWidth: parseUnits(desc.strokeStyleLineWidth),\n\t\t\tlineDashOffset: parseUnits(desc.strokeStyleLineDashOffset),\n\t\t\tmiterLimit: desc.strokeStyleMiterLimit,\n\t\t\tlineCapType: strokeStyleLineCapType.decode(desc.strokeStyleLineCapType),\n\t\t\tlineJoinType: strokeStyleLineJoinType.decode(desc.strokeStyleLineJoinType),\n\t\t\tlineAlignment: strokeStyleLineAlignment.decode(desc.strokeStyleLineAlignment),\n\t\t\tscaleLock: desc.strokeStyleScaleLock,\n\t\t\tstrokeAdjust: desc.strokeStyleStrokeAdjust,\n\t\t\tlineDashSet: desc.strokeStyleLineDashSet.map(parseUnits),\n\t\t\tblendMode: BlnM.decode(desc.strokeStyleBlendMode),\n\t\t\topacity: parsePercent(desc.strokeStyleOpacity),\n\t\t\tcontent: parseVectorContent(desc.strokeStyleContent),\n\t\t\tresolution: desc.strokeStyleResolution,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst stroke = target.vectorStroke!;\n\t\tconst descriptor: StrokeDescriptor = {\n\t\t\tstrokeStyleVersion: 2,\n\t\t\tstrokeEnabled: !!stroke.strokeEnabled,\n\t\t\tfillEnabled: !!stroke.fillEnabled,\n\t\t\tstrokeStyleLineWidth: stroke.lineWidth || { value: 3, units: 'Points' },\n\t\t\tstrokeStyleLineDashOffset: stroke.lineDashOffset || { value: 0, units: 'Points' },\n\t\t\tstrokeStyleMiterLimit: stroke.miterLimit ?? 100,\n\t\t\tstrokeStyleLineCapType: strokeStyleLineCapType.encode(stroke.lineCapType),\n\t\t\tstrokeStyleLineJoinType: strokeStyleLineJoinType.encode(stroke.lineJoinType),\n\t\t\tstrokeStyleLineAlignment: strokeStyleLineAlignment.encode(stroke.lineAlignment),\n\t\t\tstrokeStyleScaleLock: !!stroke.scaleLock,\n\t\t\tstrokeStyleStrokeAdjust: !!stroke.strokeAdjust,\n\t\t\tstrokeStyleLineDashSet: stroke.lineDashSet || [],\n\t\t\tstrokeStyleBlendMode: BlnM.encode(stroke.blendMode),\n\t\t\tstrokeStyleOpacity: unitsPercent(stroke.opacity ?? 1),\n\t\t\tstrokeStyleContent: serializeVectorContent(\n\t\t\t\tstroke.content || { type: 'color', color: { r: 0, g: 0, b: 0 } }).descriptor,\n\t\t\tstrokeStyleResolution: stroke.resolution ?? 72,\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'strokeStyle', descriptor);\n\t},\n);\n\ninterface ArtbDescriptor {\n\tartboardRect: { 'Top ': number; Left: number; Btom: number; Rght: number; };\n\tguideIndeces: any[];\n\tartboardPresetName: string;\n\t'Clr ': DescriptorColor;\n\tartboardBackgroundType: number;\n}\n\naddHandler(\n\t'artb', // per-layer arboard info\n\thasKey('artboard'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as ArtbDescriptor;\n\t\ttarget.artboard = {\n\t\t\trect: { top: desc.artboardRect['Top '], left: desc.artboardRect.Left, bottom: desc.artboardRect.Btom, right: desc.artboardRect.Rght },\n\t\t\tguideIndices: desc.guideIndeces,\n\t\t\tpresetName: desc.artboardPresetName,\n\t\t\tcolor: parseColor(desc['Clr ']),\n\t\t\tbackgroundType: desc.artboardBackgroundType,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst artb = target.artboard!;\n\t\tconst desc: ArtbDescriptor = {\n\t\t\tartboardRect: { 'Top ': artb.rect.top, Left: artb.rect.left, Btom: artb.rect.bottom, Rght: artb.rect.right },\n\t\t\tguideIndeces: artb.guideIndices || [],\n\t\t\tartboardPresetName: artb.presetName || '',\n\t\t\t'Clr ': serializeColor(artb.color),\n\t\t\tartboardBackgroundType: artb.backgroundType ?? 1,\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'artboard', desc);\n\t},\n);\n\naddHandler(\n\t'sn2P',\n\thasKey('usingAlignedRendering'),\n\t(reader, target) => target.usingAlignedRendering = !!readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.usingAlignedRendering ? 1 : 0),\n);\n\nconst placedLayerTypes: PlacedLayerType[] = ['unknown', 'vector', 'raster', 'image stack'];\n\nfunction parseWarp(warp: WarpDescriptor): Warp {\n\treturn {\n\t\tstyle: warpStyle.decode(warp.warpStyle),\n\t\tvalue: warp.warpValue || 0,\n\t\tperspective: warp.warpPerspective || 0,\n\t\tperspectiveOther: warp.warpPerspectiveOther || 0,\n\t\trotate: Ornt.decode(warp.warpRotate),\n\t\tbounds: warp.bounds && {\n\t\t\ttop: parseUnitsOrNumber(warp.bounds['Top ']),\n\t\t\tleft: parseUnitsOrNumber(warp.bounds.Left),\n\t\t\tbottom: parseUnitsOrNumber(warp.bounds.Btom),\n\t\t\tright: parseUnitsOrNumber(warp.bounds.Rght),\n\t\t},\n\t\tuOrder: warp.uOrder,\n\t\tvOrder: warp.vOrder,\n\t\tcustomEnvelopeWarp: warp.customEnvelopeWarp && {\n\t\t\tmeshPoints: warp.customEnvelopeWarp.meshPoints.map(pt => ({\n\t\t\t\ttype: pt.type === 'Hrzn' ? 'horizontal' : 'vertical',\n\t\t\t\tvalues: pt.values,\n\t\t\t})),\n\t\t},\n\t};\n}\n\nfunction encodeWarp(warp: Warp): WarpDescriptor {\n\tconst desc: WarpDescriptor = {\n\t\twarpStyle: warpStyle.encode(warp.style),\n\t\twarpValue: warp.value || 0,\n\t\twarpPerspective: warp.perspective || 0,\n\t\twarpPerspectiveOther: warp.perspectiveOther || 0,\n\t\twarpRotate: Ornt.encode(warp.rotate),\n\t\tbounds: {\n\t\t\t'Top ': unitsValue(warp.bounds?.top || { units: 'Pixels', value: 0 }, 'bounds.top'),\n\t\t\tLeft: unitsValue(warp.bounds?.left || { units: 'Pixels', value: 0 }, 'bounds.left'),\n\t\t\tBtom: unitsValue(warp.bounds?.bottom || { units: 'Pixels', value: 0 }, 'bounds.bottom'),\n\t\t\tRght: unitsValue(warp.bounds?.right || { units: 'Pixels', value: 0 }, 'bounds.right'),\n\t\t},\n\t\tuOrder: warp.uOrder || 0,\n\t\tvOrder: warp.vOrder || 0,\n\t};\n\n\tif (warp.customEnvelopeWarp) {\n\t\tdesc.customEnvelopeWarp = {\n\t\t\tmeshPoints: (warp.customEnvelopeWarp.meshPoints || []).map(pt => ({\n\t\t\t\ttype: pt.type === 'horizontal' ? 'Hrzn' : 'Vrtc',\n\t\t\t\tvalues: pt.values,\n\t\t\t})),\n\t\t};\n\t}\n\n\treturn desc;\n}\n\naddHandler(\n\t'PlLd',\n\thasKey('placedLayer'),\n\t(reader, target, left) => {\n\t\tif (readSignature(reader) !== 'plcL') throw new Error(`Invalid PlLd signature`);\n\t\tif (readInt32(reader) !== 3) throw new Error(`Invalid PlLd version`);\n\t\tconst id = readPascalString(reader, 1);\n\t\treadInt32(reader); // pageNumber\n\t\treadInt32(reader); // totalPages, TODO: check how this works ?\n\t\treadInt32(reader); // anitAliasPolicy 16\n\t\tconst placedLayerType = readInt32(reader); // 0 = unknown, 1 = vector, 2 = raster, 3 = image stack\n\t\tif (!placedLayerTypes[placedLayerType]) throw new Error('Invalid PlLd type');\n\t\tconst transform: number[] = [];\n\t\tfor (let i = 0; i < 8; i++) transform.push(readFloat64(reader)); // x, y of 4 corners of the transform\n\t\tconst warpVersion = readInt32(reader);\n\t\tif (warpVersion !== 0) throw new Error(`Invalid Warp version ${warpVersion}`);\n\t\tconst warp: WarpDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.placedLayer = target.placedLayer || { // skip if SoLd already set it\n\t\t\tid,\n\t\t\ttype: placedLayerTypes[placedLayerType],\n\t\t\t// pageNumber,\n\t\t\t// totalPages,\n\t\t\ttransform,\n\t\t\twarp: parseWarp(warp),\n\t\t};\n\n\t\t// console.log('PlLd warp', require('util').inspect(warp, false, 99, true));\n\t\t// console.log('PlLd', require('util').inspect(target.placedLayer, false, 99, true));\n\n\t\tskipBytes(reader, left()); // HACK\n\t},\n\t(writer, target) => {\n\t\tconst placed = target.placedLayer!;\n\t\twriteSignature(writer, 'plcL');\n\t\twriteInt32(writer, 3); // version\n\t\twritePascalString(writer, placed.id, 1);\n\t\twriteInt32(writer, 1); // pageNumber\n\t\twriteInt32(writer, 1); // totalPages\n\t\twriteInt32(writer, 16); // anitAliasPolicy\n\t\tif (placedLayerTypes.indexOf(placed.type) === -1) throw new Error('Invalid placedLayer type');\n\t\twriteInt32(writer, placedLayerTypes.indexOf(placed.type));\n\t\tfor (let i = 0; i < 8; i++) writeFloat64(writer, placed.transform[i]);\n\t\twriteInt32(writer, 0); // warp version\n\t\twriteVersionAndDescriptor(writer, '', 'warp', encodeWarp(placed.warp || {}));\n\t},\n);\n\ninterface SoLdDescriptor {\n\tIdnt: string;\n\tplaced: string;\n\tPgNm: number;\n\ttotalPages: number;\n\tCrop?: number;\n\tframeStep: { numerator: number; denominator: number; };\n\tduration: { numerator: number; denominator: number; };\n\tframeCount: number;\n\tAnnt: number;\n\tType: number;\n\tTrnf: number[];\n\tnonAffineTransform: number[];\n\twarp: WarpDescriptor;\n\t'Sz  ': { Wdth: number; Hght: number; };\n\tRslt: DescriptorUnitsValue;\n\tcomp?: number;\n\tcompInfo?: { compID: number; originalCompID: number; };\n}\n\naddHandler(\n\t'SoLd',\n\thasKey('placedLayer'),\n\t(reader, target, left) => {\n\t\tif (readSignature(reader) !== 'soLD') throw new Error(`Invalid SoLd type`);\n\t\tif (readInt32(reader) !== 4) throw new Error(`Invalid SoLd version`);\n\t\tconst desc: SoLdDescriptor = readVersionAndDescriptor(reader);\n\t\t// console.log('SoLd', require('util').inspect(desc, false, 99, true));\n\t\t// console.log('SoLd.warp', require('util').inspect(desc.warp, false, 99, true));\n\n\t\ttarget.placedLayer = {\n\t\t\tid: desc.Idnt,\n\t\t\tplaced: desc.placed,\n\t\t\ttype: placedLayerTypes[desc.Type],\n\t\t\t// pageNumber: info.PgNm,\n\t\t\t// totalPages: info.totalPages,\n\t\t\t// frameStep: info.frameStep,\n\t\t\t// duration: info.duration,\n\t\t\t// frameCount: info.frameCount,\n\t\t\ttransform: desc.Trnf,\n\t\t\twidth: desc['Sz  '].Wdth,\n\t\t\theight: desc['Sz  '].Hght,\n\t\t\tresolution: parseUnits(desc.Rslt),\n\t\t\twarp: parseWarp(desc.warp),\n\t\t};\n\n\t\tif (desc.Crop) target.placedLayer.crop = desc.Crop;\n\t\tif (desc.comp) target.placedLayer.comp = desc.comp;\n\t\tif (desc.compInfo) target.placedLayer.compInfo = desc.compInfo;\n\n\t\tskipBytes(reader, left()); // HACK\n\t},\n\t(writer, target) => {\n\t\twriteSignature(writer, 'soLD');\n\t\twriteInt32(writer, 4); // version\n\n\t\tconst placed = target.placedLayer!;\n\t\tconst desc: SoLdDescriptor = {\n\t\t\tIdnt: placed.id,\n\t\t\tplaced: placed.placed ?? placed.id, // ???\n\t\t\tPgNm: 1,\n\t\t\ttotalPages: 1,\n\t\t\t...(placed.crop ? { Crop: placed.crop } : {}),\n\t\t\tframeStep: {\n\t\t\t\tnumerator: 0,\n\t\t\t\tdenominator: 600\n\t\t\t},\n\t\t\tduration: {\n\t\t\t\tnumerator: 0,\n\t\t\t\tdenominator: 600\n\t\t\t},\n\t\t\tframeCount: 1,\n\t\t\tAnnt: 16,\n\t\t\tType: placedLayerTypes.indexOf(placed.type),\n\t\t\tTrnf: placed.transform,\n\t\t\tnonAffineTransform: placed.transform,\n\t\t\twarp: encodeWarp(placed.warp || {}),\n\t\t\t'Sz  ': {\n\t\t\t\tWdth: placed.width || 0, // TODO: find size ?\n\t\t\t\tHght: placed.height || 0, // TODO: find size ?\n\t\t\t},\n\t\t\tRslt: placed.resolution ? unitsValue(placed.resolution, 'resolution') : { units: 'Density', value: 72 }\n\t\t};\n\n\t\tif (placed.comp) desc.comp = placed.comp;\n\t\tif (placed.compInfo) desc.compInfo = placed.compInfo;\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'fxrp',\n\thasKey('referencePoint'),\n\t(reader, target) => {\n\t\ttarget.referencePoint = {\n\t\t\tx: readFloat64(reader),\n\t\t\ty: readFloat64(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\twriteFloat64(writer, target.referencePoint!.x);\n\t\twriteFloat64(writer, target.referencePoint!.y);\n\t},\n);\n\nif (MOCK_HANDLERS) {\n\taddHandler(\n\t\t'Patt',\n\t\ttarget => (target as any)._Patt !== undefined,\n\t\t(reader, target, left) => {\n\t\t\t// console.log('additional info: Patt');\n\t\t\t(target as any)._Patt = readBytes(reader, left());\n\t\t},\n\t\t(writer, target) => false && writeBytes(writer, (target as any)._Patt),\n\t);\n} else {\n\taddHandler(\n\t\t'Patt', // TODO: handle also Pat2 & Pat3\n\t\ttarget => !target,\n\t\t(reader, _target, left) => {\n\t\t\tif (!left()) return;\n\n\t\t\tskipBytes(reader, left()); return; // not supported yet\n\n\t\t\t// if (!target.patterns) target.patterns = [];\n\t\t\t// target.patterns.push(readPattern(reader));\n\t\t\t// skipBytes(reader, left());\n\t\t},\n\t\t(_writer, _target) => {\n\t\t},\n\t);\n}\n\ninterface FileOpenDescriptor {\n\tcompInfo: { compID: number; originalCompID: number; };\n}\n\naddHandler(\n\t'lnk2',\n\t(target: any) => !!(target as Psd).linkedFiles && (target as Psd).linkedFiles!.length > 0,\n\t(reader, target, left, _, options) => {\n\t\tconst psd = target as Psd;\n\t\tpsd.linkedFiles = [];\n\n\t\twhile (left() > 8) {\n\t\t\tlet size = readLength64(reader); // size\n\t\t\tconst startOffset = reader.offset;\n\t\t\tconst type = readSignature(reader) as 'liFD' | 'liFE' | 'liFA';\n\t\t\tconst version = readInt32(reader);\n\t\t\tconst id = readPascalString(reader, 1);\n\t\t\tconst name = readUnicodeString(reader);\n\t\t\tconst fileType = readSignature(reader).trim(); // '    ' if empty\n\t\t\tconst fileCreator = readSignature(reader).trim(); // '    ' or '\\0\\0\\0\\0' if empty\n\t\t\tconst dataSize = readLength64(reader);\n\t\t\tconst hasFileOpenDescriptor = readUint8(reader);\n\t\t\tconst fileOpenDescriptor = hasFileOpenDescriptor ? readVersionAndDescriptor(reader) as FileOpenDescriptor : undefined;\n\t\t\tconst linkedFileDescriptor = type === 'liFE' ? readVersionAndDescriptor(reader) : undefined;\n\t\t\tconst file: LinkedFile = { id, name, data: undefined };\n\n\t\t\tif (fileType) file.type = fileType;\n\t\t\tif (fileCreator) file.creator = fileCreator;\n\t\t\tif (fileOpenDescriptor) file.descriptor = fileOpenDescriptor;\n\n\t\t\tif (type === 'liFE' && version > 3) {\n\t\t\t\tconst year = readInt32(reader);\n\t\t\t\tconst month = readUint8(reader);\n\t\t\t\tconst day = readUint8(reader);\n\t\t\t\tconst hour = readUint8(reader);\n\t\t\t\tconst minute = readUint8(reader);\n\t\t\t\tconst seconds = readFloat64(reader);\n\t\t\t\tconst wholeSeconds = Math.floor(seconds);\n\t\t\t\tconst ms = (seconds - wholeSeconds) * 1000;\n\t\t\t\tfile.time = new Date(year, month, day, hour, minute, wholeSeconds, ms);\n\t\t\t}\n\n\t\t\tconst fileSize = type === 'liFE' ? readLength64(reader) : 0;\n\t\t\tif (type === 'liFA') skipBytes(reader, 8);\n\t\t\tif (type === 'liFD') file.data = readBytes(reader, dataSize);\n\t\t\tif (version >= 5) file.childDocumentID = readUnicodeString(reader);\n\t\t\tif (version >= 6) file.assetModTime = readFloat64(reader);\n\t\t\tif (version >= 7) file.assetLockedState = readUint8(reader);\n\t\t\tif (type === 'liFE') file.data = readBytes(reader, fileSize);\n\n\t\t\tif (options.skipLinkedFilesData) file.data = undefined;\n\n\t\t\tpsd.linkedFiles.push(file);\n\t\t\tlinkedFileDescriptor;\n\n\t\t\twhile (size % 4) size++;\n\t\t\treader.offset = startOffset + size;\n\t\t}\n\n\t\tskipBytes(reader, left()); // ?\n\t},\n\t(writer, target) => {\n\t\tconst psd = target as Psd;\n\n\t\tfor (const file of psd.linkedFiles!) {\n\t\t\tlet version = 2;\n\n\t\t\tif (file.assetLockedState != null) version = 7;\n\t\t\telse if (file.assetModTime != null) version = 6;\n\t\t\telse if (file.childDocumentID != null) version = 5;\n\t\t\t// TODO: else if (file.time != null) version = 3; (only for liFE)\n\n\t\t\twriteUint32(writer, 0);\n\t\t\twriteUint32(writer, 0); // size\n\t\t\tconst sizeOffset = writer.offset;\n\t\t\twriteSignature(writer, file.data ? 'liFD' : 'liFA');\n\t\t\twriteInt32(writer, version);\n\t\t\twritePascalString(writer, file.id || '', 1);\n\t\t\twriteUnicodeStringWithPadding(writer, file.name || '');\n\t\t\twriteSignature(writer, file.type ? `${file.type}    `.substr(0, 4) : '    ');\n\t\t\twriteSignature(writer, file.creator ? `${file.creator}    `.substr(0, 4) : '\\0\\0\\0\\0');\n\t\t\twriteLength64(writer, file.data ? file.data.byteLength : 0);\n\n\t\t\tif (file.descriptor && file.descriptor.compInfo) {\n\t\t\t\tconst desc: FileOpenDescriptor = {\n\t\t\t\t\tcompInfo: file.descriptor.compInfo,\n\t\t\t\t};\n\n\t\t\t\twriteUint8(writer, 1);\n\t\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t\t} else {\n\t\t\t\twriteUint8(writer, 0);\n\t\t\t}\n\n\t\t\tif (file.data) writeBytes(writer, file.data);\n\t\t\telse writeLength64(writer, 0);\n\t\t\tif (version >= 5) writeUnicodeStringWithPadding(writer, file.childDocumentID || '');\n\t\t\tif (version >= 6) writeFloat64(writer, file.assetModTime || 0);\n\t\t\tif (version >= 7) writeUint8(writer, file.assetLockedState || 0);\n\n\t\t\tlet size = writer.offset - sizeOffset;\n\t\t\twriter.view.setUint32(sizeOffset - 4, size, false); // write size\n\n\t\t\twhile (size % 4) {\n\t\t\t\tsize++;\n\t\t\t\twriteUint8(writer, 0);\n\t\t\t}\n\t\t}\n\t},\n);\naddHandlerAlias('lnkD', 'lnk2');\naddHandlerAlias('lnk3', 'lnk2');\n\n// this seems to just be zero size block, ignore it\naddHandler(\n\t'lnkE',\n\ttarget => (target as any)._lnkE !== undefined,\n\t(reader, target, left, _psds, options) => {\n\t\tif (options.logMissingFeatures && left()) {\n\t\t\tconsole.log(`Non-empty lnkE layer info (${left()} bytes)`);\n\t\t}\n\n\t\tif (MOCK_HANDLERS) {\n\t\t\t(target as any)._lnkE = readBytes(reader, left());\n\t\t}\n\t},\n\t(writer, target) => MOCK_HANDLERS && writeBytes(writer, (target as any)._lnkE),\n);\n\ninterface ExtensionDesc {\n\tgeneratorSettings: {\n\t\tgenerator_45_assets: { json: string; };\n\t\tlayerTime: number;\n\t};\n}\n\n// extension settings ?, ignore it\naddHandler(\n\t'extn',\n\ttarget => (target as any)._extn !== undefined,\n\t(reader, target) => {\n\t\tconst desc: ExtensionDesc = readVersionAndDescriptor(reader);\n\n\t\tif (MOCK_HANDLERS) {\n\t\t\t(target as any)._ext = desc;\n\t\t}\n\t},\n\t(_writer, _target) => {\n\t\t// TODO: need to add correct types for desc fields (resources/src.psd)\n\t\t// if (MOCK_HANDLERS) writeVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'pths',\n\thasKey('pathList'),\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.pathList = []; // TODO: read paths (find example with non-empty list)\n\n\t\tdescriptor;\n\t\t// console.log('pths', descriptor); // TODO: remove this\n\t},\n\t(writer, _target) => {\n\t\tconst descriptor = {\n\t\t\tpathList: [], // TODO: write paths\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'pathsDataClass', descriptor);\n\t},\n);\n\naddHandler(\n\t'lyvr',\n\thasKey('version'),\n\t(reader, target) => target.version = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.version!),\n);\n\naddHandler(\n\t'lrFX',\n\thasKey('effects'),\n\t(reader, target, left) => {\n\t\tif (!target.effects) {\n\t\t\ttarget.effects = readEffects(reader);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteEffects(writer, target.effects!);\n\t},\n);\n\nfunction adjustmentType(type: string) {\n\treturn (target: LayerAdditionalInfo) => !!target.adjustment && target.adjustment.type === type;\n}\n\naddHandler(\n\t'brit',\n\tadjustmentType('brightness/contrast'),\n\t(reader, target, left) => {\n\t\tif (!target.adjustment) { // ignore if got one from CgEd block\n\t\t\ttarget.adjustment = {\n\t\t\t\ttype: 'brightness/contrast',\n\t\t\t\tbrightness: readInt16(reader),\n\t\t\t\tcontrast: readInt16(reader),\n\t\t\t\tmeanValue: readInt16(reader),\n\t\t\t\tlabColorOnly: !!readUint8(reader),\n\t\t\t\tuseLegacy: true,\n\t\t\t};\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as BrightnessAdjustment;\n\t\twriteInt16(writer, info.brightness || 0);\n\t\twriteInt16(writer, info.contrast || 0);\n\t\twriteInt16(writer, info.meanValue ?? 127);\n\t\twriteUint8(writer, info.labColorOnly ? 1 : 0);\n\t\twriteZeros(writer, 1);\n\t},\n);\n\nfunction readLevelsChannel(reader: PsdReader): LevelsAdjustmentChannel {\n\tconst shadowInput = readInt16(reader);\n\tconst highlightInput = readInt16(reader);\n\tconst shadowOutput = readInt16(reader);\n\tconst highlightOutput = readInt16(reader);\n\tconst midtoneInput = readInt16(reader) / 100;\n\treturn { shadowInput, highlightInput, shadowOutput, highlightOutput, midtoneInput };\n}\n\nfunction writeLevelsChannel(writer: PsdWriter, channel: LevelsAdjustmentChannel) {\n\twriteInt16(writer, channel.shadowInput);\n\twriteInt16(writer, channel.highlightInput);\n\twriteInt16(writer, channel.shadowOutput);\n\twriteInt16(writer, channel.highlightOutput);\n\twriteInt16(writer, Math.round(channel.midtoneInput * 100));\n}\n\naddHandler(\n\t'levl',\n\tadjustmentType('levels'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 2) throw new Error('Invalid levl version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'levels',\n\t\t\trgb: readLevelsChannel(reader),\n\t\t\tred: readLevelsChannel(reader),\n\t\t\tgreen: readLevelsChannel(reader),\n\t\t\tblue: readLevelsChannel(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as LevelsAdjustment;\n\t\tconst defaultChannel = {\n\t\t\tshadowInput: 0,\n\t\t\thighlightInput: 255,\n\t\t\tshadowOutput: 0,\n\t\t\thighlightOutput: 255,\n\t\t\tmidtoneInput: 1,\n\t\t};\n\n\t\twriteUint16(writer, 2); // version\n\t\twriteLevelsChannel(writer, info.rgb || defaultChannel);\n\t\twriteLevelsChannel(writer, info.red || defaultChannel);\n\t\twriteLevelsChannel(writer, info.blue || defaultChannel);\n\t\twriteLevelsChannel(writer, info.green || defaultChannel);\n\t\tfor (let i = 0; i < 59; i++) writeLevelsChannel(writer, defaultChannel);\n\t},\n);\n\nfunction readCurveChannel(reader: PsdReader) {\n\tconst nodes = readUint16(reader);\n\tconst channel: CurvesAdjustmentChannel = [];\n\n\tfor (let j = 0; j < nodes; j++) {\n\t\tconst output = readInt16(reader);\n\t\tconst input = readInt16(reader);\n\t\tchannel.push({ input, output });\n\t}\n\n\treturn channel;\n}\n\nfunction writeCurveChannel(writer: PsdWriter, channel: CurvesAdjustmentChannel) {\n\twriteUint16(writer, channel.length);\n\n\tfor (const n of channel) {\n\t\twriteUint16(writer, n.output);\n\t\twriteUint16(writer, n.input);\n\t}\n}\n\naddHandler(\n\t'curv',\n\tadjustmentType('curves'),\n\t(reader, target, left) => {\n\t\treadUint8(reader);\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid curv version');\n\t\treadUint16(reader);\n\t\tconst channels = readUint16(reader);\n\t\tconst info: CurvesAdjustment = { type: 'curves' };\n\n\t\tif (channels & 1) info.rgb = readCurveChannel(reader);\n\t\tif (channels & 2) info.red = readCurveChannel(reader);\n\t\tif (channels & 4) info.green = readCurveChannel(reader);\n\t\tif (channels & 8) info.blue = readCurveChannel(reader);\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\t...info,\n\t\t};\n\n\t\t// ignoring, duplicate information\n\t\t// checkSignature(reader, 'Crv ');\n\n\t\t// const cVersion = readUint16(reader);\n\t\t// readUint16(reader);\n\t\t// const channelCount = readUint16(reader);\n\n\t\t// for (let i = 0; i < channelCount; i++) {\n\t\t// \tconst index = readUint16(reader);\n\t\t// \tconst nodes = readUint16(reader);\n\n\t\t// \tfor (let j = 0; j < nodes; j++) {\n\t\t// \t\tconst output = readInt16(reader);\n\t\t// \t\tconst input = readInt16(reader);\n\t\t// \t}\n\t\t// }\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as CurvesAdjustment;\n\t\tconst { rgb, red, green, blue } = info;\n\t\tlet channels = 0;\n\t\tlet channelCount = 0;\n\n\t\tif (rgb && rgb.length) { channels |= 1; channelCount++; }\n\t\tif (red && red.length) { channels |= 2; channelCount++; }\n\t\tif (green && green.length) { channels |= 4; channelCount++; }\n\t\tif (blue && blue.length) { channels |= 8; channelCount++; }\n\n\t\twriteUint8(writer, 0);\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, 0);\n\t\twriteUint16(writer, channels);\n\n\t\tif (rgb && rgb.length) writeCurveChannel(writer, rgb);\n\t\tif (red && red.length) writeCurveChannel(writer, red);\n\t\tif (green && green.length) writeCurveChannel(writer, green);\n\t\tif (blue && blue.length) writeCurveChannel(writer, blue);\n\n\t\twriteSignature(writer, 'Crv ');\n\t\twriteUint16(writer, 4); // version\n\t\twriteUint16(writer, 0);\n\t\twriteUint16(writer, channelCount);\n\n\t\tif (rgb && rgb.length) { writeUint16(writer, 0); writeCurveChannel(writer, rgb); }\n\t\tif (red && red.length) { writeUint16(writer, 1); writeCurveChannel(writer, red); }\n\t\tif (green && green.length) { writeUint16(writer, 2); writeCurveChannel(writer, green); }\n\t\tif (blue && blue.length) { writeUint16(writer, 3); writeCurveChannel(writer, blue); }\n\n\t\twriteZeros(writer, 2);\n\t},\n);\n\naddHandler(\n\t'expA',\n\tadjustmentType('exposure'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid expA version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'exposure',\n\t\t\texposure: readFloat32(reader),\n\t\t\toffset: readFloat32(reader),\n\t\t\tgamma: readFloat32(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ExposureAdjustment;\n\t\twriteUint16(writer, 1); // version\n\t\twriteFloat32(writer, info.exposure!);\n\t\twriteFloat32(writer, info.offset!);\n\t\twriteFloat32(writer, info.gamma!);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\ninterface VibranceDescriptor {\n\tvibrance?: number;\n\tStrt?: number;\n}\n\naddHandler(\n\t'vibA',\n\tadjustmentType('vibrance'),\n\t(reader, target, left) => {\n\t\tconst desc: VibranceDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = { type: 'vibrance' };\n\t\tif (desc.vibrance !== undefined) target.adjustment.vibrance = desc.vibrance;\n\t\tif (desc.Strt !== undefined) target.adjustment.saturation = desc.Strt;\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as VibranceAdjustment;\n\t\tconst desc: VibranceDescriptor = {};\n\t\tif (info.vibrance !== undefined) desc.vibrance = info.vibrance;\n\t\tif (info.saturation !== undefined) desc.Strt = info.saturation;\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\nfunction readHueChannel(reader: PsdReader): HueSaturationAdjustmentChannel {\n\treturn {\n\t\ta: readInt16(reader),\n\t\tb: readInt16(reader),\n\t\tc: readInt16(reader),\n\t\td: readInt16(reader),\n\t\thue: readInt16(reader),\n\t\tsaturation: readInt16(reader),\n\t\tlightness: readInt16(reader),\n\t};\n}\n\nfunction writeHueChannel(writer: PsdWriter, channel: HueSaturationAdjustmentChannel | undefined) {\n\tconst c = channel || {} as Partial<HueSaturationAdjustmentChannel>;\n\twriteInt16(writer, c.a || 0);\n\twriteInt16(writer, c.b || 0);\n\twriteInt16(writer, c.c || 0);\n\twriteInt16(writer, c.d || 0);\n\twriteInt16(writer, c.hue || 0);\n\twriteInt16(writer, c.saturation || 0);\n\twriteInt16(writer, c.lightness || 0);\n}\n\naddHandler(\n\t'hue2',\n\tadjustmentType('hue/saturation'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 2) throw new Error('Invalid hue2 version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'hue/saturation',\n\t\t\tmaster: readHueChannel(reader),\n\t\t\treds: readHueChannel(reader),\n\t\t\tyellows: readHueChannel(reader),\n\t\t\tgreens: readHueChannel(reader),\n\t\t\tcyans: readHueChannel(reader),\n\t\t\tblues: readHueChannel(reader),\n\t\t\tmagentas: readHueChannel(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as HueSaturationAdjustment;\n\n\t\twriteUint16(writer, 2); // version\n\t\twriteHueChannel(writer, info.master);\n\t\twriteHueChannel(writer, info.reds);\n\t\twriteHueChannel(writer, info.yellows);\n\t\twriteHueChannel(writer, info.greens);\n\t\twriteHueChannel(writer, info.cyans);\n\t\twriteHueChannel(writer, info.blues);\n\t\twriteHueChannel(writer, info.magentas);\n\t},\n);\n\nfunction readColorBalance(reader: PsdReader): ColorBalanceValues {\n\treturn {\n\t\tcyanRed: readInt16(reader),\n\t\tmagentaGreen: readInt16(reader),\n\t\tyellowBlue: readInt16(reader),\n\t};\n}\n\nfunction writeColorBalance(writer: PsdWriter, value: Partial<ColorBalanceValues>) {\n\twriteInt16(writer, value.cyanRed || 0);\n\twriteInt16(writer, value.magentaGreen || 0);\n\twriteInt16(writer, value.yellowBlue || 0);\n}\n\naddHandler(\n\t'blnc',\n\tadjustmentType('color balance'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'color balance',\n\t\t\tshadows: readColorBalance(reader),\n\t\t\tmidtones: readColorBalance(reader),\n\t\t\thighlights: readColorBalance(reader),\n\t\t\tpreserveLuminosity: !!readUint8(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ColorBalanceAdjustment;\n\t\twriteColorBalance(writer, info.shadows || {});\n\t\twriteColorBalance(writer, info.midtones || {});\n\t\twriteColorBalance(writer, info.highlights || {});\n\t\twriteUint8(writer, info.preserveLuminosity ? 1 : 0);\n\t\twriteZeros(writer, 1);\n\t},\n);\n\ninterface BlackAndWhiteDescriptor {\n\t'Rd  ': number;\n\tYllw: number;\n\t'Grn ': number;\n\t'Cyn ': number;\n\t'Bl  ': number;\n\tMgnt: number;\n\tuseTint: boolean;\n\ttintColor?: DescriptorColor;\n\tbwPresetKind: number;\n\tblackAndWhitePresetFileName: string;\n}\n\naddHandler(\n\t'blwh',\n\tadjustmentType('black & white'),\n\t(reader, target, left) => {\n\t\tconst desc: BlackAndWhiteDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = {\n\t\t\ttype: 'black & white',\n\t\t\treds: desc['Rd  '],\n\t\t\tyellows: desc.Yllw,\n\t\t\tgreens: desc['Grn '],\n\t\t\tcyans: desc['Cyn '],\n\t\t\tblues: desc['Bl  '],\n\t\t\tmagentas: desc.Mgnt,\n\t\t\tuseTint: !!desc.useTint,\n\t\t\tpresetKind: desc.bwPresetKind,\n\t\t\tpresetFileName: desc.blackAndWhitePresetFileName,\n\t\t};\n\n\t\tif (desc.tintColor !== undefined) target.adjustment.tintColor = parseColor(desc.tintColor);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as BlackAndWhiteAdjustment;\n\t\tconst desc: BlackAndWhiteDescriptor = {\n\t\t\t'Rd  ': info.reds || 0,\n\t\t\tYllw: info.yellows || 0,\n\t\t\t'Grn ': info.greens || 0,\n\t\t\t'Cyn ': info.cyans || 0,\n\t\t\t'Bl  ': info.blues || 0,\n\t\t\tMgnt: info.magentas || 0,\n\t\t\tuseTint: !!info.useTint,\n\t\t\ttintColor: serializeColor(info.tintColor),\n\t\t\tbwPresetKind: info.presetKind || 0,\n\t\t\tblackAndWhitePresetFileName: info.presetFileName || '',\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'phfl',\n\tadjustmentType('photo filter'),\n\t(reader, target, left) => {\n\t\tconst version = readUint16(reader);\n\t\tif (version !== 2 && version !== 3) throw new Error('Invalid phfl version');\n\n\t\tlet color: Color;\n\n\t\tif (version === 2) {\n\t\t\tcolor = readColor(reader);\n\t\t} else { // version 3\n\t\t\t// TODO: test this, this is probably wrong\n\t\t\tcolor = {\n\t\t\t\tl: readInt32(reader) / 100,\n\t\t\t\ta: readInt32(reader) / 100,\n\t\t\t\tb: readInt32(reader) / 100,\n\t\t\t};\n\t\t}\n\n\t\ttarget.adjustment = {\n\t\t\ttype: 'photo filter',\n\t\t\tcolor,\n\t\t\tdensity: readUint32(reader) / 100,\n\t\t\tpreserveLuminosity: !!readUint8(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as PhotoFilterAdjustment;\n\t\twriteUint16(writer, 2); // version\n\t\twriteColor(writer, info.color || { l: 0, a: 0, b: 0 });\n\t\twriteUint32(writer, (info.density || 0) * 100);\n\t\twriteUint8(writer, info.preserveLuminosity ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\nfunction readMixrChannel(reader: PsdReader): ChannelMixerChannel {\n\tconst red = readInt16(reader);\n\tconst green = readInt16(reader);\n\tconst blue = readInt16(reader);\n\tskipBytes(reader, 2);\n\tconst constant = readInt16(reader);\n\treturn { red, green, blue, constant };\n}\n\nfunction writeMixrChannel(writer: PsdWriter, channel: ChannelMixerChannel | undefined) {\n\tconst c = channel || {} as Partial<ChannelMixerChannel>;\n\twriteInt16(writer, c.red!);\n\twriteInt16(writer, c.green!);\n\twriteInt16(writer, c.blue!);\n\twriteZeros(writer, 2);\n\twriteInt16(writer, c.constant!);\n}\n\naddHandler(\n\t'mixr',\n\tadjustmentType('channel mixer'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid mixr version');\n\n\t\tconst adjustment: ChannelMixerAdjustment = target.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'channel mixer',\n\t\t\tmonochrome: !!readUint16(reader),\n\t\t};\n\n\t\tif (!adjustment.monochrome) {\n\t\t\tadjustment.red = readMixrChannel(reader);\n\t\t\tadjustment.green = readMixrChannel(reader);\n\t\t\tadjustment.blue = readMixrChannel(reader);\n\t\t}\n\n\t\tadjustment.gray = readMixrChannel(reader);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ChannelMixerAdjustment;\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, info.monochrome ? 1 : 0);\n\n\t\tif (info.monochrome) {\n\t\t\twriteMixrChannel(writer, info.gray);\n\t\t\twriteZeros(writer, 3 * 5 * 2);\n\t\t} else {\n\t\t\twriteMixrChannel(writer, info.red);\n\t\t\twriteMixrChannel(writer, info.green);\n\t\t\twriteMixrChannel(writer, info.blue);\n\t\t\twriteMixrChannel(writer, info.gray);\n\t\t}\n\t},\n);\n\nconst colorLookupType = createEnum<'3dlut' | 'abstractProfile' | 'deviceLinkProfile'>('colorLookupType', '3DLUT', {\n\t'3dlut': '3DLUT',\n\tabstractProfile: 'abstractProfile',\n\tdeviceLinkProfile: 'deviceLinkProfile',\n});\n\nconst LUTFormatType = createEnum<'look' | 'cube' | '3dl'>('LUTFormatType', 'look', {\n\tlook: 'LUTFormatLOOK',\n\tcube: 'LUTFormatCUBE',\n\t'3dl': 'LUTFormat3DL',\n});\n\nconst colorLookupOrder = createEnum<'rgb' | 'bgr'>('colorLookupOrder', 'rgb', {\n\trgb: 'rgbOrder',\n\tbgr: 'bgrOrder',\n});\n\ninterface ColorLookupDescriptor {\n\tlookupType?: string;\n\t'Nm  '?: string;\n\tDthr?: boolean;\n\tprofile?: Uint8Array;\n\tLUTFormat?: string;\n\tdataOrder?: string;\n\ttableOrder?: string;\n\tLUT3DFileData?: Uint8Array;\n\tLUT3DFileName?: string;\n}\n\naddHandler(\n\t'clrL',\n\tadjustmentType('color lookup'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid clrL version');\n\n\t\tconst desc: ColorLookupDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = { type: 'color lookup' };\n\t\tconst info = target.adjustment;\n\n\t\tif (desc.lookupType !== undefined) info.lookupType = colorLookupType.decode(desc.lookupType);\n\t\tif (desc['Nm  '] !== undefined) info.name = desc['Nm  '];\n\t\tif (desc.Dthr !== undefined) info.dither = desc.Dthr;\n\t\tif (desc.profile !== undefined) info.profile = desc.profile;\n\t\tif (desc.LUTFormat !== undefined) info.lutFormat = LUTFormatType.decode(desc.LUTFormat);\n\t\tif (desc.dataOrder !== undefined) info.dataOrder = colorLookupOrder.decode(desc.dataOrder);\n\t\tif (desc.tableOrder !== undefined) info.tableOrder = colorLookupOrder.decode(desc.tableOrder);\n\t\tif (desc.LUT3DFileData !== undefined) info.lut3DFileData = desc.LUT3DFileData;\n\t\tif (desc.LUT3DFileName !== undefined) info.lut3DFileName = desc.LUT3DFileName;\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ColorLookupAdjustment;\n\t\tconst desc: ColorLookupDescriptor = {};\n\n\t\tif (info.lookupType !== undefined) desc.lookupType = colorLookupType.encode(info.lookupType);\n\t\tif (info.name !== undefined) desc['Nm  '] = info.name;\n\t\tif (info.dither !== undefined) desc.Dthr = info.dither;\n\t\tif (info.profile !== undefined) desc.profile = info.profile;\n\t\tif (info.lutFormat !== undefined) desc.LUTFormat = LUTFormatType.encode(info.lutFormat);\n\t\tif (info.dataOrder !== undefined) desc.dataOrder = colorLookupOrder.encode(info.dataOrder);\n\t\tif (info.tableOrder !== undefined) desc.tableOrder = colorLookupOrder.encode(info.tableOrder);\n\t\tif (info.lut3DFileData !== undefined) desc.LUT3DFileData = info.lut3DFileData;\n\t\tif (info.lut3DFileName !== undefined) desc.LUT3DFileName = info.lut3DFileName;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'nvrt',\n\tadjustmentType('invert'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = { type: 'invert' };\n\t\tskipBytes(reader, left());\n\t},\n\t() => {\n\t\t// nothing to write here\n\t},\n);\n\naddHandler(\n\t'post',\n\tadjustmentType('posterize'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'posterize',\n\t\t\tlevels: readUint16(reader),\n\t\t};\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as PosterizeAdjustment;\n\t\twriteUint16(writer, info.levels ?? 4);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\naddHandler(\n\t'thrs',\n\tadjustmentType('threshold'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'threshold',\n\t\t\tlevel: readUint16(reader),\n\t\t};\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ThresholdAdjustment;\n\t\twriteUint16(writer, info.level ?? 128);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\nconst grdmColorModels = ['', '', '', 'rgb', 'hsb', '', 'lab'];\n\naddHandler(\n\t'grdm',\n\tadjustmentType('gradient map'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid grdm version');\n\n\t\tconst info: GradientMapAdjustment = {\n\t\t\ttype: 'gradient map',\n\t\t\tgradientType: 'solid',\n\t\t};\n\n\t\tinfo.reverse = !!readUint8(reader);\n\t\tinfo.dither = !!readUint8(reader);\n\t\tinfo.name = readUnicodeString(reader);\n\t\tinfo.colorStops = [];\n\t\tinfo.opacityStops = [];\n\n\t\tconst stopsCount = readUint16(reader);\n\n\t\tfor (let i = 0; i < stopsCount; i++) {\n\t\t\tinfo.colorStops.push({\n\t\t\t\tlocation: readUint32(reader),\n\t\t\t\tmidpoint: readUint32(reader) / 100,\n\t\t\t\tcolor: readColor(reader),\n\t\t\t});\n\t\t\tskipBytes(reader, 2);\n\t\t}\n\n\t\tconst opacityStopsCount = readUint16(reader);\n\n\t\tfor (let i = 0; i < opacityStopsCount; i++) {\n\t\t\tinfo.opacityStops.push({\n\t\t\t\tlocation: readUint32(reader),\n\t\t\t\tmidpoint: readUint32(reader) / 100,\n\t\t\t\topacity: readUint16(reader) / 0xff,\n\t\t\t});\n\t\t}\n\n\t\tconst expansionCount = readUint16(reader);\n\t\tif (expansionCount !== 2) throw new Error('Invalid grdm expansion count');\n\n\t\tconst interpolation = readUint16(reader);\n\t\tinfo.smoothness = interpolation / 4096;\n\n\t\tconst length = readUint16(reader);\n\t\tif (length !== 32) throw new Error('Invalid grdm length');\n\n\t\tinfo.gradientType = readUint16(reader) ? 'noise' : 'solid';\n\t\tinfo.randomSeed = readUint32(reader);\n\t\tinfo.addTransparency = !!readUint16(reader);\n\t\tinfo.restrictColors = !!readUint16(reader);\n\t\tinfo.roughness = readUint32(reader) / 4096;\n\t\tinfo.colorModel = (grdmColorModels[readUint16(reader)] || 'rgb') as 'rgb' | 'hsb' | 'lab';\n\n\t\tinfo.min = [\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t];\n\n\t\tinfo.max = [\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t];\n\n\t\tskipBytes(reader, left());\n\n\t\tfor (const s of info.colorStops) s.location /= interpolation;\n\t\tfor (const s of info.opacityStops) s.location /= interpolation;\n\n\t\ttarget.adjustment = info;\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as GradientMapAdjustment;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint8(writer, info.reverse ? 1 : 0);\n\t\twriteUint8(writer, info.dither ? 1 : 0);\n\t\twriteUnicodeStringWithPadding(writer, info.name || '');\n\t\twriteUint16(writer, info.colorStops && info.colorStops.length || 0);\n\n\t\tconst interpolation = Math.round((info.smoothness ?? 1) * 4096);\n\n\t\tfor (const s of info.colorStops || []) {\n\t\t\twriteUint32(writer, Math.round(s.location * interpolation));\n\t\t\twriteUint32(writer, Math.round(s.midpoint * 100));\n\t\t\twriteColor(writer, s.color);\n\t\t\twriteZeros(writer, 2);\n\t\t}\n\n\t\twriteUint16(writer, info.opacityStops && info.opacityStops.length || 0);\n\n\t\tfor (const s of info.opacityStops || []) {\n\t\t\twriteUint32(writer, Math.round(s.location * interpolation));\n\t\t\twriteUint32(writer, Math.round(s.midpoint * 100));\n\t\t\twriteUint16(writer, Math.round(s.opacity * 0xff));\n\t\t}\n\n\t\twriteUint16(writer, 2); // expansion count\n\t\twriteUint16(writer, interpolation);\n\t\twriteUint16(writer, 32); // length\n\t\twriteUint16(writer, info.gradientType === 'noise' ? 1 : 0);\n\t\twriteUint32(writer, info.randomSeed || 0);\n\t\twriteUint16(writer, info.addTransparency ? 1 : 0);\n\t\twriteUint16(writer, info.restrictColors ? 1 : 0);\n\t\twriteUint32(writer, Math.round((info.roughness ?? 1) * 4096));\n\t\tconst colorModel = grdmColorModels.indexOf(info.colorModel ?? 'rgb');\n\t\twriteUint16(writer, colorModel === -1 ? 3 : colorModel);\n\n\t\tfor (let i = 0; i < 4; i++)\n\t\t\twriteUint16(writer, Math.round((info.min && info.min[i] || 0) * 0x8000));\n\n\t\tfor (let i = 0; i < 4; i++)\n\t\t\twriteUint16(writer, Math.round((info.max && info.max[i] || 0) * 0x8000));\n\n\t\twriteZeros(writer, 4);\n\t},\n);\n\nfunction readSelectiveColors(reader: PsdReader): CMYK {\n\treturn {\n\t\tc: readInt16(reader),\n\t\tm: readInt16(reader),\n\t\ty: readInt16(reader),\n\t\tk: readInt16(reader),\n\t};\n}\n\nfunction writeSelectiveColors(writer: PsdWriter, cmyk: CMYK | undefined) {\n\tconst c = cmyk || {} as Partial<CMYK>;\n\twriteInt16(writer, c.c!);\n\twriteInt16(writer, c.m!);\n\twriteInt16(writer, c.y!);\n\twriteInt16(writer, c.k!);\n}\n\naddHandler(\n\t'selc',\n\tadjustmentType('selective color'),\n\t(reader, target) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid selc version');\n\n\t\tconst mode = readUint16(reader) ? 'absolute' : 'relative';\n\t\tskipBytes(reader, 8);\n\n\t\ttarget.adjustment = {\n\t\t\ttype: 'selective color',\n\t\t\tmode,\n\t\t\treds: readSelectiveColors(reader),\n\t\t\tyellows: readSelectiveColors(reader),\n\t\t\tgreens: readSelectiveColors(reader),\n\t\t\tcyans: readSelectiveColors(reader),\n\t\t\tblues: readSelectiveColors(reader),\n\t\t\tmagentas: readSelectiveColors(reader),\n\t\t\twhites: readSelectiveColors(reader),\n\t\t\tneutrals: readSelectiveColors(reader),\n\t\t\tblacks: readSelectiveColors(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as SelectiveColorAdjustment;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, info.mode === 'absolute' ? 1 : 0);\n\t\twriteZeros(writer, 8);\n\t\twriteSelectiveColors(writer, info.reds);\n\t\twriteSelectiveColors(writer, info.yellows);\n\t\twriteSelectiveColors(writer, info.greens);\n\t\twriteSelectiveColors(writer, info.cyans);\n\t\twriteSelectiveColors(writer, info.blues);\n\t\twriteSelectiveColors(writer, info.magentas);\n\t\twriteSelectiveColors(writer, info.whites);\n\t\twriteSelectiveColors(writer, info.neutrals);\n\t\twriteSelectiveColors(writer, info.blacks);\n\t},\n);\n\ninterface BrightnessContrastDescriptor {\n\tVrsn: number;\n\tBrgh: number;\n\tCntr: number;\n\tmeans: number;\n\t'Lab ': boolean;\n\tuseLegacy: boolean;\n\tAuto: boolean;\n}\n\ninterface PresetDescriptor {\n\tVrsn: number;\n\tpresetKind: number;\n\tpresetFileName: string;\n}\n\ninterface CurvesPresetDescriptor {\n\tVrsn: number;\n\tcurvesPresetKind: number;\n\tcurvesPresetFileName: string;\n}\n\ninterface MixerPresetDescriptor {\n\tVrsn: number;\n\tmixerPresetKind: number;\n\tmixerPresetFileName: string;\n}\n\naddHandler(\n\t'CgEd',\n\ttarget => {\n\t\tconst a = target.adjustment;\n\n\t\tif (!a) return false;\n\n\t\treturn (a.type === 'brightness/contrast' && !a.useLegacy) ||\n\t\t\t((a.type === 'levels' || a.type === 'curves' || a.type === 'exposure' || a.type === 'channel mixer' ||\n\t\t\t\ta.type === 'hue/saturation') && a.presetFileName !== undefined);\n\t},\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as\n\t\t\tBrightnessContrastDescriptor | PresetDescriptor | CurvesPresetDescriptor | MixerPresetDescriptor;\n\t\tif (desc.Vrsn !== 1) throw new Error('Invalid CgEd version');\n\n\t\t// this section can specify preset file name for other adjustment types\n\t\tif ('presetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as LevelsAdjustment | ExposureAdjustment | HueSaturationAdjustment,\n\t\t\t\tpresetKind: desc.presetKind,\n\t\t\t\tpresetFileName: desc.presetFileName,\n\t\t\t};\n\t\t} else if ('curvesPresetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as CurvesAdjustment,\n\t\t\t\tpresetKind: desc.curvesPresetKind,\n\t\t\t\tpresetFileName: desc.curvesPresetFileName,\n\t\t\t};\n\t\t} else if ('mixerPresetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as CurvesAdjustment,\n\t\t\t\tpresetKind: desc.mixerPresetKind,\n\t\t\t\tpresetFileName: desc.mixerPresetFileName,\n\t\t\t};\n\t\t} else {\n\t\t\ttarget.adjustment = {\n\t\t\t\ttype: 'brightness/contrast',\n\t\t\t\tbrightness: desc.Brgh,\n\t\t\t\tcontrast: desc.Cntr,\n\t\t\t\tmeanValue: desc.means,\n\t\t\t\tuseLegacy: !!desc.useLegacy,\n\t\t\t\tlabColorOnly: !!desc['Lab '],\n\t\t\t\tauto: !!desc.Auto,\n\t\t\t};\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment!;\n\n\t\tif (info.type === 'levels' || info.type === 'exposure' || info.type === 'hue/saturation') {\n\t\t\tconst desc: PresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tpresetKind: info.presetKind ?? 1,\n\t\t\t\tpresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'curves') {\n\t\t\tconst desc: CurvesPresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tcurvesPresetKind: info.presetKind ?? 1,\n\t\t\t\tcurvesPresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'channel mixer') {\n\t\t\tconst desc: MixerPresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tmixerPresetKind: info.presetKind ?? 1,\n\t\t\t\tmixerPresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'brightness/contrast') {\n\t\t\tconst desc: BrightnessContrastDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tBrgh: info.brightness || 0,\n\t\t\t\tCntr: info.contrast || 0,\n\t\t\t\tmeans: info.meanValue ?? 127,\n\t\t\t\t'Lab ': !!info.labColorOnly,\n\t\t\t\tuseLegacy: !!info.useLegacy,\n\t\t\t\tAuto: !!info.auto,\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else {\n\t\t\tthrow new Error('Unhandled CgEd case');\n\t\t}\n\t},\n);\n\naddHandler(\n\t'Txt2',\n\thasKey('engineData'),\n\t(reader, target, left) => {\n\t\tconst data = readBytes(reader, left());\n\t\ttarget.engineData = fromByteArray(data);\n\t\t// const engineData = parseEngineData(data);\n\t\t// console.log(require('util').inspect(engineData, false, 99, true));\n\t\t// require('fs').writeFileSync('resources/engineData2Simple.txt', require('util').inspect(engineData, false, 99, false), 'utf8');\n\t\t// require('fs').writeFileSync('test_data.json', JSON.stringify(ed, null, 2), 'utf8');\n\t},\n\t(writer, target) => {\n\t\tconst buffer = toByteArray(target.engineData!);\n\t\twriteBytes(writer, buffer);\n\t},\n);\n\naddHandler(\n\t'FMsk',\n\thasKey('filterMask'),\n\t(reader, target) => {\n\t\ttarget.filterMask = {\n\t\t\tcolorSpace: readColor(reader),\n\t\t\topacity: readUint16(reader) / 0xff,\n\t\t};\n\t},\n\t(writer, target) => {\n\t\twriteColor(writer, target.filterMask!.colorSpace);\n\t\twriteUint16(writer, clamp(target.filterMask!.opacity ?? 1, 0, 1) * 0xff);\n\t},\n);\n\ninterface ArtdDescriptor {\n\t'Cnt ': number;\n\tautoExpandOffset: { Hrzn: number; Vrtc: number; };\n\torigin: { Hrzn: number; Vrtc: number; };\n\tautoExpandEnabled: boolean;\n\tautoNestEnabled: boolean;\n\tautoPositionEnabled: boolean;\n\tshrinkwrapOnSaveEnabled: boolean;\n\tdocDefaultNewArtboardBackgroundColor: DescriptorColor;\n\tdocDefaultNewArtboardBackgroundType: number;\n}\n\naddHandler(\n\t'artd', // document-wide artboard info\n\ttarget => (target as Psd).artboards !== undefined,\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as ArtdDescriptor;\n\t\t(target as Psd).artboards = {\n\t\t\tcount: desc['Cnt '],\n\t\t\tautoExpandOffset: { horizontal: desc.autoExpandOffset.Hrzn, vertical: desc.autoExpandOffset.Vrtc },\n\t\t\torigin: { horizontal: desc.origin.Hrzn, vertical: desc.origin.Vrtc },\n\t\t\tautoExpandEnabled: desc.autoExpandEnabled,\n\t\t\tautoNestEnabled: desc.autoNestEnabled,\n\t\t\tautoPositionEnabled: desc.autoPositionEnabled,\n\t\t\tshrinkwrapOnSaveEnabled: desc.shrinkwrapOnSaveEnabled,\n\t\t\tdocDefaultNewArtboardBackgroundColor: parseColor(desc.docDefaultNewArtboardBackgroundColor),\n\t\t\tdocDefaultNewArtboardBackgroundType: desc.docDefaultNewArtboardBackgroundType,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst artb = (target as Psd).artboards!;\n\t\tconst desc: ArtdDescriptor = {\n\t\t\t'Cnt ': artb.count,\n\t\t\tautoExpandOffset: artb.autoExpandOffset ? { Hrzn: artb.autoExpandOffset.horizontal, Vrtc: artb.autoExpandOffset.vertical } : { Hrzn: 0, Vrtc: 0 },\n\t\t\torigin: artb.origin ? { Hrzn: artb.origin.horizontal, Vrtc: artb.origin.vertical } : { Hrzn: 0, Vrtc: 0 },\n\t\t\tautoExpandEnabled: artb.autoExpandEnabled ?? true,\n\t\t\tautoNestEnabled: artb.autoNestEnabled ?? true,\n\t\t\tautoPositionEnabled: artb.autoPositionEnabled ?? true,\n\t\t\tshrinkwrapOnSaveEnabled: artb.shrinkwrapOnSaveEnabled ?? true,\n\t\t\tdocDefaultNewArtboardBackgroundColor: serializeColor(artb.docDefaultNewArtboardBackgroundColor),\n\t\t\tdocDefaultNewArtboardBackgroundType: artb.docDefaultNewArtboardBackgroundType ?? 1,\n\t\t};\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc, 'artd');\n\t},\n);\n\naddHandler(\n\t'lfx2',\n\thasKey('effects'),\n\t(reader, target, left, _, options) => {\n\t\tconst log = !!options.logMissingFeatures;\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 0) throw new Error(`Invalid lfx2 version`);\n\n\t\tconst info = readVersionAndDescriptor(reader);\n\n\t\ttarget.effects = {}; // discard if read in 'lrFX' section\n\t\tconst effects = target.effects;\n\n\t\tif (!info.masterFXSwitch) effects.disabled = true;\n\t\tif (info['Scl ']) effects.scale = parsePercent(info['Scl ']);\n\t\tif (info.DrSh) effects.dropShadow = parseEffectObject(info.DrSh, log);\n\t\tif (info.IrSh) effects.innerShadow = parseEffectObject(info.IrSh, log);\n\t\tif (info.OrGl) effects.outerGlow = parseEffectObject(info.OrGl, log);\n\t\tif (info.IrGl) effects.innerGlow = parseEffectObject(info.IrGl, log);\n\t\tif (info.ebbl) effects.bevel = parseEffectObject(info.ebbl, log);\n\t\tif (info.SoFi) effects.solidFill = parseEffectObject(info.SoFi, log);\n\t\tif (info.patternFill) effects.patternOverlay = parseEffectObject(info.patternFill, log);\n\t\tif (info.GrFl) effects.gradientOverlay = parseEffectObject(info.GrFl, log);\n\t\tif (info.ChFX) effects.satin = parseEffectObject(info.ChFX, log);\n\t\tif (info.FrFX) {\n\t\t\teffects.stroke = {\n\t\t\t\tenabled: !!info.FrFX.enab,\n\t\t\t\tposition: FStl.decode(info.FrFX.Styl),\n\t\t\t\tfillType: FrFl.decode(info.FrFX.PntT),\n\t\t\t\tblendMode: BlnM.decode(info.FrFX['Md  ']),\n\t\t\t\topacity: parsePercent(info.FrFX.Opct),\n\t\t\t\tsize: parseUnits(info.FrFX['Sz  ']),\n\t\t\t};\n\n\t\t\tif (info.FrFX['Clr ']) effects.stroke.color = parseColor(info.FrFX['Clr ']);\n\t\t\tif (info.FrFX.Grad) effects.stroke.gradient = parseGradientContent(info.FrFX);\n\t\t\tif (info.FrFX.Ptrn) effects.stroke.pattern = parsePatternContent(info.FrFX);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, _, options) => {\n\t\tconst log = !!options.logMissingFeatures;\n\t\tconst effects = target.effects!;\n\t\tconst info: any = {\n\t\t\tmasterFXSwitch: !effects.disabled,\n\t\t\t'Scl ': unitsPercent(effects.scale ?? 1),\n\t\t};\n\n\t\tif (effects.dropShadow) info.DrSh = serializeEffectObject(effects.dropShadow, 'dropShadow', log);\n\t\tif (effects.innerShadow) info.IrSh = serializeEffectObject(effects.innerShadow, 'innerShadow', log);\n\t\tif (effects.outerGlow) info.OrGl = serializeEffectObject(effects.outerGlow, 'outerGlow', log);\n\t\tif (effects.innerGlow) info.IrGl = serializeEffectObject(effects.innerGlow, 'innerGlow', log);\n\t\tif (effects.bevel) info.ebbl = serializeEffectObject(effects.bevel, 'bevel', log);\n\t\tif (effects.solidFill) info.SoFi = serializeEffectObject(effects.solidFill, 'solidFill', log);\n\t\tif (effects.patternOverlay) info.patternFill = serializeEffectObject(effects.patternOverlay, 'patternOverlay', log);\n\t\tif (effects.gradientOverlay) info.GrFl = serializeEffectObject(effects.gradientOverlay, 'gradientOverlay', log);\n\t\tif (effects.satin) info.ChFX = serializeEffectObject(effects.satin, 'satin', log);\n\n\t\tconst stroke = effects.stroke;\n\n\t\tif (stroke) {\n\t\t\tinfo.FrFX = {\n\t\t\t\tenab: !!stroke.enabled,\n\t\t\t\tStyl: FStl.encode(stroke.position),\n\t\t\t\tPntT: FrFl.encode(stroke.fillType),\n\t\t\t\t'Md  ': BlnM.encode(stroke.blendMode),\n\t\t\t\tOpct: unitsPercent(stroke.opacity),\n\t\t\t\t'Sz  ': unitsValue(stroke.size, 'size'),\n\t\t\t};\n\n\t\t\tif (stroke.color)\n\t\t\t\tinfo.FrFX['Clr '] = serializeColor(stroke.color);\n\t\t\tif (stroke.gradient)\n\t\t\t\tinfo.FrFX = { ...info.FrFX, ...serializeGradientContent(stroke.gradient) };\n\t\t\tif (stroke.pattern)\n\t\t\t\tinfo.FrFX = { ...info.FrFX, ...serializePatternContent(stroke.pattern) };\n\t\t}\n\n\t\twriteUint32(writer, 0); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', info);\n\t},\n);\n\nfunction readLength64(reader: PsdReader) {\n\tif (readUint32(reader)) throw new Error(`Resource size above 4 GB limit at ${reader.offset.toString(16)}`);\n\treturn readUint32(reader);\n}\n\nfunction writeLength64(writer: PsdWriter, length: number) {\n\twriteUint32(writer, 0);\n\twriteUint32(writer, length);\n}\n\n// addHandler(\n// \t'lmfx',\n// \ttarget => !target,\n// \t(reader, _target) => {\n// \t\tconst version = readUint32(reader);\n// \t\tif (version !== 0) throw new Error('Invalid lmfx version');\n\n// \t\tconst descriptor = readVersionAndDescriptor(reader);\n// \t\tconsole.log(require('util').inspect(descriptor, false, 99, true));\n// \t},\n// \t(_writer, _target) => {\n// \t},\n// );\n\ninterface CinfDescriptor {\n\tVrsn: { major: number; minor: number; fix: number; };\n\tpsVersion?: { major: number; minor: number; fix: number; };\n\tdescription: string;\n\treason: string;\n\tEngn: string; // 'Engn.compCore';\n\tenableCompCore: string; // 'enable.feature';\n\tenableCompCoreGPU: string; // 'enable.feature';\n\tcompCoreSupport: string; // 'reason.supported';\n\tcompCoreGPUSupport: string; // 'reason.featureDisabled';\n}\n\naddHandler(\n\t'cinf',\n\thasKey('compositorUsed'),\n\t(reader, target) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as CinfDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\t\ttarget.compositorUsed = {\n\t\t\tdescription: desc.description,\n\t\t\treason: desc.reason,\n\t\t\tengine: desc.Engn.split('.')[1],\n\t\t\tenableCompCore: desc.enableCompCore.split('.')[1],\n\t\t\tenableCompCoreGPU: desc.enableCompCoreGPU.split('.')[1],\n\t\t\tcompCoreSupport: desc.compCoreSupport.split('.')[1],\n\t\t\tcompCoreGPUSupport: desc.compCoreGPUSupport.split('.')[1],\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst cinf = target.compositorUsed!;\n\t\tconst desc: CinfDescriptor = {\n\t\t\tVrsn: { major: 1, minor: 0, fix: 0 },\n\t\t\t// psVersion: { major: 22, minor: 1, fix: 0 }, // TESTING\n\t\t\tdescription: cinf.description,\n\t\t\treason: cinf.reason,\n\t\t\tEngn: `Engn.${cinf.engine}`,\n\t\t\tenableCompCore: `enable.${cinf.enableCompCore}`,\n\t\t\tenableCompCoreGPU: `enable.${cinf.enableCompCoreGPU}`,\n\t\t\tcompCoreSupport: `reason.${cinf.compCoreSupport}`,\n\t\t\tcompCoreGPUSupport: `reason.${cinf.compCoreGPUSupport}`,\n\t\t};\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\n// descriptor helpers\n\nfunction parseGradient(grad: DesciptorGradient): EffectSolidGradient | EffectNoiseGradient {\n\tif (grad.GrdF === 'GrdF.CstS') {\n\t\tconst samples: number = grad.Intr || 4096;\n\n\t\treturn {\n\t\t\ttype: 'solid',\n\t\t\tname: grad['Nm  '],\n\t\t\tsmoothness: grad.Intr / 4096,\n\t\t\tcolorStops: grad.Clrs.map(s => ({\n\t\t\t\tcolor: parseColor(s['Clr ']),\n\t\t\t\tlocation: s.Lctn / samples,\n\t\t\t\tmidpoint: s.Mdpn / 100,\n\t\t\t})),\n\t\t\topacityStops: grad.Trns.map(s => ({\n\t\t\t\topacity: parsePercent(s.Opct),\n\t\t\t\tlocation: s.Lctn / samples,\n\t\t\t\tmidpoint: s.Mdpn / 100,\n\t\t\t})),\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\ttype: 'noise',\n\t\t\tname: grad['Nm  '],\n\t\t\troughness: grad.Smth / 4096,\n\t\t\tcolorModel: ClrS.decode(grad.ClrS),\n\t\t\trandomSeed: grad.RndS,\n\t\t\trestrictColors: !!grad.VctC,\n\t\t\taddTransparency: !!grad.ShTr,\n\t\t\tmin: grad['Mnm '].map(x => x / 100),\n\t\t\tmax: grad['Mxm '].map(x => x / 100),\n\t\t};\n\t}\n}\n\nfunction serializeGradient(grad: EffectSolidGradient | EffectNoiseGradient): DesciptorGradient {\n\tif (grad.type === 'solid') {\n\t\tconst samples = Math.round((grad.smoothness ?? 1) * 4096);\n\n\t\treturn {\n\t\t\t'Nm  ': grad.name,\n\t\t\tGrdF: 'GrdF.CstS',\n\t\t\tIntr: samples,\n\t\t\tClrs: grad.colorStops.map(s => ({\n\t\t\t\t'Clr ': serializeColor(s.color),\n\t\t\t\tType: 'Clry.UsrS',\n\t\t\t\tLctn: Math.round(s.location * samples),\n\t\t\t\tMdpn: Math.round((s.midpoint ?? 0.5) * 100),\n\t\t\t})),\n\t\t\tTrns: grad.opacityStops.map(s => ({\n\t\t\t\tOpct: unitsPercent(s.opacity),\n\t\t\t\tLctn: Math.round(s.location * samples),\n\t\t\t\tMdpn: Math.round((s.midpoint ?? 0.5) * 100),\n\t\t\t})),\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tGrdF: 'GrdF.ClNs',\n\t\t\t'Nm  ': grad.name,\n\t\t\tShTr: !!grad.addTransparency,\n\t\t\tVctC: !!grad.restrictColors,\n\t\t\tClrS: ClrS.encode(grad.colorModel),\n\t\t\tRndS: grad.randomSeed || 0,\n\t\t\tSmth: Math.round((grad.roughness ?? 1) * 4096),\n\t\t\t'Mnm ': (grad.min || [0, 0, 0, 0]).map(x => x * 100),\n\t\t\t'Mxm ': (grad.max || [1, 1, 1, 1]).map(x => x * 100),\n\t\t};\n\t}\n}\n\nfunction parseGradientContent(descriptor: DescriptorGradientContent) {\n\tconst result = parseGradient(descriptor.Grad) as (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo;\n\tresult.style = GrdT.decode(descriptor.Type);\n\tif (descriptor.Dthr !== undefined) result.dither = descriptor.Dthr;\n\tif (descriptor.Rvrs !== undefined) result.reverse = descriptor.Rvrs;\n\tif (descriptor.Angl !== undefined) result.angle = parseAngle(descriptor.Angl);\n\tif (descriptor['Scl '] !== undefined) result.scale = parsePercent(descriptor['Scl ']);\n\tif (descriptor.Algn !== undefined) result.align = descriptor.Algn;\n\tif (descriptor.Ofst !== undefined) {\n\t\tresult.offset = {\n\t\t\tx: parsePercent(descriptor.Ofst.Hrzn),\n\t\t\ty: parsePercent(descriptor.Ofst.Vrtc)\n\t\t};\n\t}\n\treturn result;\n}\n\nfunction parsePatternContent(descriptor: DescriptorPatternContent) {\n\tconst result: EffectPattern & ExtraPatternInfo = {\n\t\tname: descriptor.Ptrn['Nm  '],\n\t\tid: descriptor.Ptrn.Idnt,\n\t};\n\tif (descriptor.Lnkd !== undefined) result.linked = descriptor.Lnkd;\n\tif (descriptor.phase !== undefined) result.phase = { x: descriptor.phase.Hrzn, y: descriptor.phase.Vrtc };\n\treturn result;\n}\n\nfunction parseVectorContent(descriptor: DescriptorVectorContent): VectorContent {\n\tif ('Grad' in descriptor) {\n\t\treturn parseGradientContent(descriptor);\n\t} else if ('Ptrn' in descriptor) {\n\t\treturn { type: 'pattern', ...parsePatternContent(descriptor) };\n\t} else if ('Clr ' in descriptor) {\n\t\treturn { type: 'color', color: parseColor(descriptor['Clr ']) };\n\t} else {\n\t\tthrow new Error('Invalid vector content');\n\t}\n}\n\nfunction serializeGradientContent(content: (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo) {\n\tconst result: DescriptorGradientContent = {} as any;\n\tif (content.dither !== undefined) result.Dthr = content.dither;\n\tif (content.reverse !== undefined) result.Rvrs = content.reverse;\n\tif (content.angle !== undefined) result.Angl = unitsAngle(content.angle);\n\tresult.Type = GrdT.encode(content.style);\n\tif (content.align !== undefined) result.Algn = content.align;\n\tif (content.scale !== undefined) result['Scl '] = unitsPercent(content.scale);\n\tif (content.offset) {\n\t\tresult.Ofst = {\n\t\t\tHrzn: unitsPercent(content.offset.x),\n\t\t\tVrtc: unitsPercent(content.offset.y),\n\t\t};\n\t}\n\tresult.Grad = serializeGradient(content);\n\treturn result;\n}\n\nfunction serializePatternContent(content: EffectPattern & ExtraPatternInfo) {\n\tconst result: DescriptorPatternContent = {\n\t\tPtrn: {\n\t\t\t'Nm  ': content.name || '',\n\t\t\tIdnt: content.id || '',\n\t\t}\n\t};\n\tif (content.linked !== undefined) result.Lnkd = !!content.linked;\n\tif (content.phase !== undefined) result.phase = { Hrzn: content.phase.x, Vrtc: content.phase.y };\n\treturn result;\n}\n\nfunction serializeVectorContent(content: VectorContent): { descriptor: DescriptorVectorContent; key: string; } {\n\tif (content.type === 'color') {\n\t\treturn { key: 'SoCo', descriptor: { 'Clr ': serializeColor(content.color) } };\n\t} else if (content.type === 'pattern') {\n\t\treturn { key: 'PtFl', descriptor: serializePatternContent(content) };\n\t} else {\n\t\treturn { key: 'GdFl', descriptor: serializeGradientContent(content) };\n\t}\n}\n\nfunction parseColor(color: DescriptorColor): Color {\n\tif ('H   ' in color) {\n\t\treturn { h: parsePercentOrAngle(color['H   ']), s: color.Strt, b: color.Brgh };\n\t} else if ('Rd  ' in color) {\n\t\treturn { r: color['Rd  '], g: color['Grn '], b: color['Bl  '] };\n\t} else if ('Cyn ' in color) {\n\t\treturn { c: color['Cyn '], m: color.Mgnt, y: color['Ylw '], k: color.Blck };\n\t} else if ('Gry ' in color) {\n\t\treturn { k: color['Gry '] };\n\t} else if ('Lmnc' in color) {\n\t\treturn { l: color.Lmnc, a: color['A   '], b: color['B   '] };\n\t} else {\n\t\tthrow new Error('Unsupported color descriptor');\n\t}\n}\n\nfunction serializeColor(color: Color | undefined): DescriptorColor {\n\tif (!color) {\n\t\treturn { 'Rd  ': 0, 'Grn ': 0, 'Bl  ': 0 };\n\t} else if ('r' in color) {\n\t\treturn { 'Rd  ': color.r || 0, 'Grn ': color.g || 0, 'Bl  ': color.b || 0 };\n\t} else if ('h' in color) {\n\t\treturn { 'H   ': unitsAngle(color.h * 360), Strt: color.s || 0, Brgh: color.b || 0 };\n\t} else if ('c' in color) {\n\t\treturn { 'Cyn ': color.c || 0, Mgnt: color.m || 0, 'Ylw ': color.y || 0, Blck: color.k || 0 };\n\t} else if ('l' in color) {\n\t\treturn { Lmnc: color.l || 0, 'A   ': color.a || 0, 'B   ': color.b || 0 };\n\t} else if ('k' in color) {\n\t\treturn { 'Gry ': color.k };\n\t} else {\n\t\tthrow new Error('Invalid color value');\n\t}\n}\n\ntype AllEffects = LayerEffectShadow & LayerEffectsOuterGlow & LayerEffectStroke &\n\tLayerEffectInnerGlow & LayerEffectBevel & LayerEffectSolidFill &\n\tLayerEffectPatternOverlay & LayerEffectSatin & LayerEffectGradientOverlay;\n\nfunction parseEffectObject(obj: any, reportErrors: boolean) {\n\tconst result: AllEffects = {} as any;\n\n\tfor (const key of Object.keys(obj)) {\n\t\tconst val = obj[key];\n\n\t\tswitch (key) {\n\t\t\tcase 'enab': result.enabled = !!val; break;\n\t\t\tcase 'uglg': result.useGlobalLight = !!val; break;\n\t\t\tcase 'AntA': result.antialiased = !!val; break;\n\t\t\tcase 'Algn': result.align = !!val; break;\n\t\t\tcase 'Dthr': result.dither = !!val; break;\n\t\t\tcase 'Invr': result.invert = !!val; break;\n\t\t\tcase 'Rvrs': result.reverse = !!val; break;\n\t\t\tcase 'Clr ': result.color = parseColor(val); break;\n\t\t\tcase 'hglC': result.highlightColor = parseColor(val); break;\n\t\t\tcase 'sdwC': result.shadowColor = parseColor(val); break;\n\t\t\tcase 'Styl': result.position = FStl.decode(val); break;\n\t\t\tcase 'Md  ': result.blendMode = BlnM.decode(val); break;\n\t\t\tcase 'hglM': result.highlightBlendMode = BlnM.decode(val); break;\n\t\t\tcase 'sdwM': result.shadowBlendMode = BlnM.decode(val); break;\n\t\t\tcase 'bvlS': result.style = BESl.decode(val); break;\n\t\t\tcase 'bvlD': result.direction = BESs.decode(val); break;\n\t\t\tcase 'bvlT': result.technique = bvlT.decode(val) as any; break;\n\t\t\tcase 'GlwT': result.technique = BETE.decode(val) as any; break;\n\t\t\tcase 'glwS': result.source = IGSr.decode(val); break;\n\t\t\tcase 'Type': result.type = GrdT.decode(val); break;\n\t\t\tcase 'Opct': result.opacity = parsePercent(val); break;\n\t\t\tcase 'hglO': result.highlightOpacity = parsePercent(val); break;\n\t\t\tcase 'sdwO': result.shadowOpacity = parsePercent(val); break;\n\t\t\tcase 'lagl': result.angle = parseAngle(val); break;\n\t\t\tcase 'Angl': result.angle = parseAngle(val); break;\n\t\t\tcase 'Lald': result.altitude = parseAngle(val); break;\n\t\t\tcase 'Sftn': result.soften = parseUnits(val); break;\n\t\t\tcase 'srgR': result.strength = parsePercent(val); break;\n\t\t\tcase 'blur': result.size = parseUnits(val); break;\n\t\t\tcase 'Nose': result.noise = parsePercent(val); break;\n\t\t\tcase 'Inpr': result.range = parsePercent(val); break;\n\t\t\tcase 'Ckmt': result.choke = parseUnits(val); break;\n\t\t\tcase 'ShdN': result.jitter = parsePercent(val); break;\n\t\t\tcase 'Dstn': result.distance = parseUnits(val); break;\n\t\t\tcase 'Scl ': result.scale = parsePercent(val); break;\n\t\t\tcase 'Ptrn': result.pattern = { name: val['Nm  '], id: val.Idnt }; break;\n\t\t\tcase 'phase': result.phase = { x: val.Hrzn, y: val.Vrtc }; break;\n\t\t\tcase 'Ofst': result.offset = { x: parsePercent(val.Hrzn), y: parsePercent(val.Vrtc) }; break;\n\t\t\tcase 'MpgS':\n\t\t\tcase 'TrnS':\n\t\t\t\tresult.contour = {\n\t\t\t\t\tname: val['Nm  '],\n\t\t\t\t\tcurve: (val['Crv '] as any[]).map(p => ({ x: p.Hrzn, y: p.Vrtc })),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'Grad': result.gradient = parseGradient(val); break;\n\t\t\tcase 'useTexture':\n\t\t\tcase 'useShape':\n\t\t\tcase 'layerConceals':\n\t\t\tcase 'present':\n\t\t\tcase 'showInDialog':\n\t\t\tcase 'antialiasGloss': result[key] = val; break;\n\t\t\tdefault:\n\t\t\t\treportErrors && console.log(`Invalid effect key: '${key}':`, val);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction serializeEffectObject(obj: any, objName: string, reportErrors: boolean) {\n\tconst result: any = {};\n\n\tfor (const objKey of Object.keys(obj)) {\n\t\tconst key: keyof AllEffects = objKey as any;\n\t\tconst val = obj[key];\n\n\t\tswitch (key) {\n\t\t\tcase 'enabled': result.enab = !!val; break;\n\t\t\tcase 'useGlobalLight': result.uglg = !!val; break;\n\t\t\tcase 'antialiased': result.AntA = !!val; break;\n\t\t\tcase 'align': result.Algn = !!val; break;\n\t\t\tcase 'dither': result.Dthr = !!val; break;\n\t\t\tcase 'invert': result.Invr = !!val; break;\n\t\t\tcase 'reverse': result.Rvrs = !!val; break;\n\t\t\tcase 'color': result['Clr '] = serializeColor(val); break;\n\t\t\tcase 'highlightColor': result.hglC = serializeColor(val); break;\n\t\t\tcase 'shadowColor': result.sdwC = serializeColor(val); break;\n\t\t\tcase 'position': result.Styl = FStl.encode(val); break;\n\t\t\tcase 'blendMode': result['Md  '] = BlnM.encode(val); break;\n\t\t\tcase 'highlightBlendMode': result.hglM = BlnM.encode(val); break;\n\t\t\tcase 'shadowBlendMode': result.sdwM = BlnM.encode(val); break;\n\t\t\tcase 'style': result.bvlS = BESl.encode(val); break;\n\t\t\tcase 'direction': result.bvlD = BESs.encode(val); break;\n\t\t\tcase 'technique':\n\t\t\t\tif (objName === 'bevel') {\n\t\t\t\t\tresult.bvlT = bvlT.encode(val);\n\t\t\t\t} else {\n\t\t\t\t\tresult.GlwT = BETE.encode(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'source': result.glwS = IGSr.encode(val); break;\n\t\t\tcase 'type': result.Type = GrdT.encode(val); break;\n\t\t\tcase 'opacity': result.Opct = unitsPercent(val); break;\n\t\t\tcase 'highlightOpacity': result.hglO = unitsPercent(val); break;\n\t\t\tcase 'shadowOpacity': result.sdwO = unitsPercent(val); break;\n\t\t\tcase 'angle':\n\t\t\t\tif (objName === 'gradientOverlay') {\n\t\t\t\t\tresult.Angl = unitsAngle(val);\n\t\t\t\t} else {\n\t\t\t\t\tresult.lagl = unitsAngle(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'altitude': result.Lald = unitsAngle(val); break;\n\t\t\tcase 'soften': result.Sftn = unitsValue(val, key); break;\n\t\t\tcase 'strength': result.srgR = unitsPercent(val); break;\n\t\t\tcase 'size': result.blur = unitsValue(val, key); break;\n\t\t\tcase 'noise': result.Nose = unitsPercent(val); break;\n\t\t\tcase 'range': result.Inpr = unitsPercent(val); break;\n\t\t\tcase 'choke': result.Ckmt = unitsValue(val, key); break;\n\t\t\tcase 'jitter': result.ShdN = unitsPercent(val); break;\n\t\t\tcase 'distance': result.Dstn = unitsValue(val, key); break;\n\t\t\tcase 'scale': result['Scl '] = unitsPercent(val); break;\n\t\t\tcase 'pattern': result.Ptrn = { 'Nm  ': val.name, Idnt: val.id }; break;\n\t\t\tcase 'phase': result.phase = { Hrzn: val.x, Vrtc: val.y }; break;\n\t\t\tcase 'offset': result.Ofst = { Hrzn: unitsPercent(val.x), Vrtc: unitsPercent(val.y) }; break;\n\t\t\tcase 'contour': {\n\t\t\t\tresult[objName === 'satin' ? 'MpgS' : 'TrnS'] = {\n\t\t\t\t\t'Nm  ': (val as EffectContour).name,\n\t\t\t\t\t'Crv ': (val as EffectContour).curve.map(p => ({ Hrzn: p.x, Vrtc: p.y })),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'gradient': result.Grad = serializeGradient(val); break;\n\t\t\tcase 'useTexture':\n\t\t\tcase 'useShape':\n\t\t\tcase 'layerConceals':\n\t\t\tcase 'present':\n\t\t\tcase 'showInDialog':\n\t\t\tcase 'antialiasGloss':\n\t\t\t\tresult[key] = val;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treportErrors && console.log(`Invalid effect key: '${key}' value:`, val);\n\t\t}\n\t}\n\n\treturn result;\n}\n","import { LayerEffectsInfo, BevelStyle, LayerEffectShadow } from './psd';\nimport { toBlendMode, fromBlendMode } from './helpers';\nimport {\n\tPsdReader, checkSignature, readSignature, skipBytes, readUint16, readUint8,\n\treadUint32, readFixedPoint32, readColor\n} from './psdReader';\nimport {\n\tPsdWriter, writeSignature, writeUint16, writeZeros, writeFixedPoint32,\n\twriteUint8, writeUint32, writeColor\n} from './psdWriter';\n\nconst bevelStyles: BevelStyle[] = [\n\tundefined as any, 'outer bevel', 'inner bevel', 'emboss', 'pillow emboss', 'stroke emboss'\n];\n\nfunction readBlendMode(reader: PsdReader) {\n\tcheckSignature(reader, '8BIM');\n\treturn toBlendMode[readSignature(reader)] || 'normal';\n}\n\nfunction writeBlendMode(writer: PsdWriter, mode: string | undefined) {\n\twriteSignature(writer, '8BIM');\n\twriteSignature(writer, fromBlendMode[mode!] || 'norm');\n}\n\nfunction readFixedPoint8(reader: PsdReader) {\n\treturn readUint8(reader) / 0xff;\n}\n\nfunction writeFixedPoint8(writer: PsdWriter, value: number) {\n\twriteUint8(writer, Math.round(value * 0xff) | 0);\n}\n\nexport function readEffects(reader: PsdReader) {\n\tconst version = readUint16(reader);\n\n\tif (version !== 0)\n\t\tthrow new Error(`Invalid effects layer version: ${version}`);\n\n\tconst effectsCount = readUint16(reader);\n\tconst effects: LayerEffectsInfo = <any>{};\n\n\tfor (let i = 0; i < effectsCount; i++) {\n\t\tcheckSignature(reader, '8BIM');\n\t\tconst type = readSignature(reader);\n\n\t\tswitch (type) {\n\t\t\tcase 'cmnS': { // common state (see See Effects layer, common state info)\n\t\t\t\tconst size = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\t\t\t\tconst visible = !!readUint8(reader);\n\t\t\t\tskipBytes(reader, 2);\n\n\t\t\t\tif (size !== 7 || version !== 0 || !visible) throw new Error(`Invalid effects common state`);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'dsdw': // drop shadow (see See Effects layer, drop shadow and inner shadow info)\n\t\t\tcase 'isdw': { // inner shadow (see See Effects layer, drop shadow and inner shadow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 41 && blockSize !== 51) throw new Error(`Invalid shadow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid shadow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst angle = readFixedPoint32(reader);\n\t\t\t\tconst distance = readFixedPoint32(reader);\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst useGlobalLight = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tif (blockSize >= 51) readColor(reader); // native color\n\t\t\t\tconst shadowInfo: LayerEffectShadow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tdistance: { units: 'Pixels', value: distance },\n\t\t\t\t\tangle, color, blendMode, enabled, useGlobalLight, opacity\n\t\t\t\t};\n\n\t\t\t\tif (type === 'dsdw') {\n\t\t\t\t\teffects.dropShadow = shadowInfo;\n\t\t\t\t} else {\n\t\t\t\t\teffects.innerShadow = shadowInfo;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'oglw': { // outer glow (see See Effects layer, outer glow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 32 && blockSize !== 42) throw new Error(`Invalid outer glow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid outer glow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tif (blockSize >= 42) readColor(reader); // native color\n\n\t\t\t\teffects.outerGlow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tcolor, blendMode, enabled, opacity\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'iglw': { // inner glow (see See Effects layer, inner glow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 32 && blockSize !== 43) throw new Error(`Invalid inner glow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid inner glow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\n\t\t\t\tif (blockSize >= 43) {\n\t\t\t\t\treadUint8(reader); // inverted\n\t\t\t\t\treadColor(reader); // native color\n\t\t\t\t}\n\n\t\t\t\teffects.innerGlow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tcolor, blendMode, enabled, opacity\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'bevl': { // bevel (see See Effects layer, bevel info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 58 && blockSize !== 78) throw new Error(`Invalid bevel size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid bevel version: ${version}`);\n\n\t\t\t\tconst angle = readFixedPoint32(reader);\n\t\t\t\tconst strength = readFixedPoint32(reader);\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\tconst highlightBlendMode = readBlendMode(reader);\n\t\t\t\tconst shadowBlendMode = readBlendMode(reader);\n\t\t\t\tconst highlightColor = readColor(reader);\n\t\t\t\tconst shadowColor = readColor(reader);\n\t\t\t\tconst style = bevelStyles[readUint8(reader)] || 'inner bevel';\n\t\t\t\tconst highlightOpacity = readFixedPoint8(reader);\n\t\t\t\tconst shadowOpacity = readFixedPoint8(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst useGlobalLight = !!readUint8(reader);\n\t\t\t\tconst direction = readUint8(reader) ? 'down' : 'up';\n\n\t\t\t\tif (blockSize >= 78) {\n\t\t\t\t\treadColor(reader); // real highlight color\n\t\t\t\t\treadColor(reader); // real shadow color\n\t\t\t\t}\n\n\t\t\t\teffects.bevel = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tangle, strength, highlightBlendMode, shadowBlendMode, highlightColor, shadowColor,\n\t\t\t\t\tstyle, highlightOpacity, shadowOpacity, enabled, useGlobalLight, direction,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'sofi': { // solid fill (Photoshop 7.0) (see See Effects layer, solid fill (added in Photoshop 7.0))\n\t\t\t\tconst size = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (size !== 34) throw new Error(`Invalid effects solid fill info size: ${size}`);\n\t\t\t\tif (version !== 2) throw new Error(`Invalid effects solid fill info version: ${version}`);\n\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\treadColor(reader); // native color\n\n\t\t\t\teffects.solidFill = { blendMode, color, opacity, enabled };\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid effect type: '${type}'`);\n\t\t}\n\t}\n\n\treturn effects;\n}\n\nfunction writeShadowInfo(writer: PsdWriter, shadow: LayerEffectShadow) {\n\twriteUint32(writer, 51);\n\twriteUint32(writer, 2);\n\twriteFixedPoint32(writer, shadow.size && shadow.size.value || 0);\n\twriteFixedPoint32(writer, 0); // intensity\n\twriteFixedPoint32(writer, shadow.angle || 0);\n\twriteFixedPoint32(writer, shadow.distance && shadow.distance.value || 0);\n\twriteColor(writer, shadow.color);\n\twriteBlendMode(writer, shadow.blendMode);\n\twriteUint8(writer, shadow.enabled ? 1 : 0);\n\twriteUint8(writer, shadow.useGlobalLight ? 1 : 0);\n\twriteFixedPoint8(writer, shadow.opacity ?? 1);\n\twriteColor(writer, shadow.color); // native color\n}\n\nexport function writeEffects(writer: PsdWriter, effects: LayerEffectsInfo) {\n\twriteUint16(writer, 0);\n\n\tlet count = 1;\n\tif (effects.dropShadow) count++;\n\tif (effects.innerShadow) count++;\n\tif (effects.outerGlow) count++;\n\tif (effects.innerGlow) count++;\n\tif (effects.bevel) count++;\n\tif (effects.solidFill) count++;\n\n\twriteUint16(writer, count);\n\n\twriteSignature(writer, '8BIM');\n\twriteSignature(writer, 'cmnS');\n\twriteUint32(writer, 7); // size\n\twriteUint32(writer, 0); // version\n\twriteUint8(writer, 1); // visible\n\twriteZeros(writer, 2);\n\n\tif (effects.dropShadow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'dsdw');\n\t\twriteShadowInfo(writer, effects.dropShadow);\n\t}\n\n\tif (effects.innerShadow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'isdw');\n\t\twriteShadowInfo(writer, effects.innerShadow);\n\t}\n\n\tif (effects.outerGlow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'oglw');\n\t\twriteUint32(writer, 42);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.outerGlow.size?.value || 0);\n\t\twriteFixedPoint32(writer, 0); // intensity\n\t\twriteColor(writer, effects.outerGlow.color);\n\t\twriteBlendMode(writer, effects.outerGlow.blendMode);\n\t\twriteUint8(writer, effects.outerGlow.enabled ? 1 : 0);\n\t\twriteFixedPoint8(writer, effects.outerGlow.opacity || 0);\n\t\twriteColor(writer, effects.outerGlow.color);\n\t}\n\n\tif (effects.innerGlow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'iglw');\n\t\twriteUint32(writer, 43);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.innerGlow.size?.value || 0);\n\t\twriteFixedPoint32(writer, 0); // intensity\n\t\twriteColor(writer, effects.innerGlow.color);\n\t\twriteBlendMode(writer, effects.innerGlow.blendMode);\n\t\twriteUint8(writer, effects.innerGlow.enabled ? 1 : 0);\n\t\twriteFixedPoint8(writer, effects.innerGlow.opacity || 0);\n\t\twriteUint8(writer, 0); // inverted\n\t\twriteColor(writer, effects.innerGlow.color);\n\t}\n\n\tif (effects.bevel) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'bevl');\n\t\twriteUint32(writer, 78);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.bevel.angle || 0);\n\t\twriteFixedPoint32(writer, effects.bevel.strength || 0);\n\t\twriteFixedPoint32(writer, effects.bevel.size?.value || 0);\n\t\twriteBlendMode(writer, effects.bevel.highlightBlendMode);\n\t\twriteBlendMode(writer, effects.bevel.shadowBlendMode);\n\t\twriteColor(writer, effects.bevel.highlightColor);\n\t\twriteColor(writer, effects.bevel.shadowColor);\n\t\tconst style = bevelStyles.indexOf(effects.bevel.style!);\n\t\twriteUint8(writer, style <= 0 ? 1 : style);\n\t\twriteFixedPoint8(writer, effects.bevel.highlightOpacity || 0);\n\t\twriteFixedPoint8(writer, effects.bevel.shadowOpacity || 0);\n\t\twriteUint8(writer, effects.bevel.enabled ? 1 : 0);\n\t\twriteUint8(writer, effects.bevel.useGlobalLight ? 1 : 0);\n\t\twriteUint8(writer, effects.bevel.direction === 'down' ? 1 : 0);\n\t\twriteColor(writer, effects.bevel.highlightColor);\n\t\twriteColor(writer, effects.bevel.shadowColor);\n\t}\n\n\tif (effects.solidFill) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'sofi');\n\t\twriteUint32(writer, 34);\n\t\twriteUint32(writer, 2);\n\t\twriteBlendMode(writer, effects.solidFill.blendMode);\n\t\twriteColor(writer, effects.solidFill.color);\n\t\twriteFixedPoint8(writer, effects.solidFill.opacity || 0);\n\t\twriteUint8(writer, effects.solidFill.enabled ? 1 : 0);\n\t\twriteColor(writer, effects.solidFill.color);\n\t}\n}\n","import {\n\tPsd, Layer, ColorMode, SectionDividerType, LayerAdditionalInfo, ReadOptions, LayerMaskData, Color,\n\tPatternInfo, GlobalLayerMaskInfo\n} from './psd';\nimport {\n\tresetImageData, offsetForChannel, decodeBitmap, PixelData, createCanvas, createImageData,\n\ttoBlendMode, ChannelID, Compression, LayerMaskFlags, MaskParams, ColorSpace\n} from './helpers';\nimport { infoHandlersMap } from './additionalInfo';\nimport { resourceHandlersMap } from './imageResources';\n\ninterface ChannelInfo {\n\tid: ChannelID;\n\tlength: number;\n}\n\nexport const supportedColorModes = [ColorMode.Bitmap, ColorMode.Grayscale, ColorMode.RGB];\nconst colorModes = ['bitmap', 'grayscale', 'indexed', 'RGB', 'CMYK', 'multichannel', 'duotone', 'lab'];\n\nconst RAW_IMAGE_DATA = false;\n\nfunction setupGrayscale(data: PixelData) {\n\tconst size = data.width * data.height * 4;\n\n\tfor (let i = 0; i < size; i += 4) {\n\t\tdata.data[i + 1] = data.data[i];\n\t\tdata.data[i + 2] = data.data[i];\n\t}\n}\n\nexport interface PsdReader {\n\toffset: number;\n\tview: DataView;\n}\n\nexport function createReader(buffer: ArrayBuffer, offset?: number, length?: number): PsdReader {\n\tconst view = new DataView(buffer, offset, length);\n\treturn { view, offset: 0 };\n}\n\nexport function readUint8(reader: PsdReader) {\n\treader.offset += 1;\n\treturn reader.view.getUint8(reader.offset - 1);\n}\n\nexport function peekUint8(reader: PsdReader) {\n\treturn reader.view.getUint8(reader.offset);\n}\n\nexport function readInt16(reader: PsdReader) {\n\treader.offset += 2;\n\treturn reader.view.getInt16(reader.offset - 2, false);\n}\n\nexport function readUint16(reader: PsdReader) {\n\treader.offset += 2;\n\treturn reader.view.getUint16(reader.offset - 2, false);\n}\n\nexport function readInt32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getInt32(reader.offset - 4, false);\n}\n\nexport function readInt32LE(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getInt32(reader.offset - 4, true);\n}\n\nexport function readUint32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getUint32(reader.offset - 4, false);\n}\n\nexport function readFloat32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getFloat32(reader.offset - 4, false);\n}\n\nexport function readFloat64(reader: PsdReader) {\n\treader.offset += 8;\n\treturn reader.view.getFloat64(reader.offset - 8, false);\n}\n\n// 32-bit fixed-point number 16.16\nexport function readFixedPoint32(reader: PsdReader): number {\n\treturn readInt32(reader) / (1 << 16);\n}\n\n// 32-bit fixed-point number 8.24\nexport function readFixedPointPath32(reader: PsdReader): number {\n\treturn readInt32(reader) / (1 << 24);\n}\n\nexport function readBytes(reader: PsdReader, length: number) {\n\treader.offset += length;\n\treturn new Uint8Array(reader.view.buffer, reader.view.byteOffset + reader.offset - length, length);\n}\n\nexport function readSignature(reader: PsdReader) {\n\treturn readShortString(reader, 4);\n}\n\nexport function readPascalString(reader: PsdReader, padTo: number) {\n\tlet length = readUint8(reader);\n\tconst text = readShortString(reader, length);\n\n\twhile (++length % padTo) {\n\t\tskipBytes(reader, 1);\n\t}\n\n\treturn text;\n}\n\nexport function readUnicodeString(reader: PsdReader) {\n\tconst length = readUint32(reader);\n\treturn readUnicodeStringWithLength(reader, length);\n}\n\nexport function readUnicodeStringWithLength(reader: PsdReader, length: number) {\n\tlet text = '';\n\n\twhile (length--) {\n\t\tconst value = readUint16(reader);\n\n\t\tif (value || length > 0) { // remove trailing \\0\n\t\t\ttext += String.fromCharCode(value);\n\t\t}\n\t}\n\n\treturn text;\n}\n\nexport function readAsciiString(reader: PsdReader, length: number) {\n\tlet text = '';\n\n\twhile (length--) {\n\t\ttext += String.fromCharCode(readUint8(reader));\n\t}\n\n\treturn text;\n}\n\nexport function skipBytes(reader: PsdReader, count: number) {\n\treader.offset += count;\n}\n\nexport function checkSignature(reader: PsdReader, a: string, b?: string) {\n\tconst offset = reader.offset;\n\tconst signature = readSignature(reader);\n\n\tif (signature !== a && signature !== b) {\n\t\tthrow new Error(`Invalid signature: '${signature}' at 0x${offset.toString(16)}`);\n\t}\n}\n\nfunction readShortString(reader: PsdReader, length: number) {\n\tconst buffer: any = readBytes(reader, length);\n\treturn String.fromCharCode(...buffer);\n}\n\nexport function readPsd(reader: PsdReader, options: ReadOptions = {}) {\n\t// header\n\tcheckSignature(reader, '8BPS');\n\tconst version = readUint16(reader);\n\tif (version !== 1) throw new Error(`Invalid PSD file version: ${version}`);\n\n\tskipBytes(reader, 6);\n\tconst channels = readUint16(reader);\n\tconst height = readUint32(reader);\n\tconst width = readUint32(reader);\n\tconst bitsPerChannel = readUint16(reader);\n\tconst colorMode = readUint16(reader);\n\n\tif (supportedColorModes.indexOf(colorMode) === -1)\n\t\tthrow new Error(`Color mode not supported: ${colorModes[colorMode] ?? colorMode}`);\n\n\tconst psd: Psd = { width, height, channels, bitsPerChannel, colorMode };\n\n\t// color mode data\n\treadSection(reader, 1, left => {\n\t\tif (options.throwForMissingFeatures) throw new Error('Color mode data not supported');\n\t\tskipBytes(reader, left());\n\t});\n\n\t// image resources\n\treadSection(reader, 1, left => {\n\t\twhile (left()) {\n\t\t\tcheckSignature(reader, '8BIM');\n\n\t\t\tconst id = readUint16(reader);\n\t\t\treadPascalString(reader, 2); // name\n\n\t\t\treadSection(reader, 2, left => {\n\t\t\t\tconst handler = resourceHandlersMap[id];\n\t\t\t\tconst skip = id === 1036 && !!options.skipThumbnail;\n\n\t\t\t\tif (!psd.imageResources) {\n\t\t\t\t\tpsd.imageResources = {};\n\t\t\t\t}\n\n\t\t\t\tif (handler && !skip) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandler.read(reader, psd.imageResources, left, options);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (options.throwForMissingFeatures) throw e;\n\t\t\t\t\t\tskipBytes(reader, left());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// options.logMissingFeatures && console.log(`Unhandled image resource: ${id}`);\n\t\t\t\t\tskipBytes(reader, left());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t// layer and mask info\n\tlet globalAlpha = false;\n\n\treadSection(reader, 1, left => {\n\t\tglobalAlpha = readLayerInfo(reader, psd, options);\n\n\t\t// SAI does not include this section\n\t\tif (left() > 0) {\n\t\t\tconst globalLayerMaskInfo = readGlobalLayerMaskInfo(reader);\n\t\t\tif (globalLayerMaskInfo) psd.globalLayerMaskInfo = globalLayerMaskInfo;\n\t\t} else {\n\t\t\t// revert back to end of section if exceeded section limits\n\t\t\t// options.logMissingFeatures && console.log('reverting to end of section');\n\t\t\tskipBytes(reader, left());\n\t\t}\n\n\t\twhile (left() > 0) {\n\t\t\t// sometimes there are empty bytes here\n\t\t\twhile (left() && peekUint8(reader) === 0) {\n\t\t\t\t// options.logMissingFeatures && console.log('skipping 0 byte');\n\t\t\t\tskipBytes(reader, 1);\n\t\t\t}\n\n\t\t\tif (left() >= 12) {\n\t\t\t\treadAdditionalLayerInfo(reader, psd, psd, options);\n\t\t\t} else {\n\t\t\t\t// options.logMissingFeatures && console.log('skipping leftover bytes', left());\n\t\t\t\tskipBytes(reader, left());\n\t\t\t}\n\t\t}\n\t});\n\n\tconst hasChildren = psd.children && psd.children.length;\n\tconst skipComposite = options.skipCompositeImageData && (options.skipLayerImageData || hasChildren);\n\n\tif (!skipComposite) {\n\t\treadImageData(reader, psd, globalAlpha, options);\n\t}\n\n\treturn psd;\n}\n\nfunction readLayerInfo(reader: PsdReader, psd: Psd, options: ReadOptions) {\n\tlet globalAlpha = false;\n\n\treadSection(reader, 2, left => {\n\t\tlet layerCount = readInt16(reader);\n\n\t\tif (layerCount < 0) {\n\t\t\tglobalAlpha = true;\n\t\t\tlayerCount = -layerCount;\n\t\t}\n\n\t\tconst layers: Layer[] = [];\n\t\tconst layerChannels: ChannelInfo[][] = [];\n\n\t\tfor (let i = 0; i < layerCount; i++) {\n\t\t\tconst { layer, channels } = readLayerRecord(reader, psd, options);\n\t\t\tlayers.push(layer);\n\t\t\tlayerChannels.push(channels);\n\t\t}\n\n\t\tif (!options.skipLayerImageData) {\n\t\t\tfor (let i = 0; i < layerCount; i++) {\n\t\t\t\treadLayerChannelImageData(reader, psd, layers[i], layerChannels[i], options);\n\t\t\t}\n\t\t}\n\n\t\tskipBytes(reader, left());\n\n\t\tif (!psd.children) psd.children = [];\n\n\t\tconst stack: (Layer | Psd)[] = [psd];\n\n\t\tfor (let i = layers.length - 1; i >= 0; i--) {\n\t\t\tconst l = layers[i];\n\t\t\tconst type = l.sectionDivider ? l.sectionDivider.type : SectionDividerType.Other;\n\n\t\t\tif (type === SectionDividerType.OpenFolder || type === SectionDividerType.ClosedFolder) {\n\t\t\t\tl.opened = type === SectionDividerType.OpenFolder;\n\t\t\t\tl.children = [];\n\t\t\t\tstack[stack.length - 1].children!.unshift(l);\n\t\t\t\tstack.push(l);\n\t\t\t} else if (type === SectionDividerType.BoundingSectionDivider) {\n\t\t\t\tstack.pop();\n\t\t\t} else {\n\t\t\t\tstack[stack.length - 1].children!.unshift(l);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn globalAlpha;\n}\n\nfunction readLayerRecord(reader: PsdReader, psd: Psd, options: ReadOptions) {\n\tconst layer: Layer = {};\n\tlayer.top = readInt32(reader);\n\tlayer.left = readInt32(reader);\n\tlayer.bottom = readInt32(reader);\n\tlayer.right = readInt32(reader);\n\n\tconst channelCount = readUint16(reader);\n\tconst channels: ChannelInfo[] = [];\n\n\tfor (let i = 0; i < channelCount; i++) {\n\t\tconst channelID = readInt16(reader) as ChannelID;\n\t\tconst channelLength = readInt32(reader);\n\t\tchannels.push({ id: channelID, length: channelLength });\n\t}\n\n\tcheckSignature(reader, '8BIM');\n\tconst blendMode = readSignature(reader);\n\tif (!toBlendMode[blendMode]) throw new Error(`Invalid blend mode: '${blendMode}'`);\n\tlayer.blendMode = toBlendMode[blendMode];\n\n\tlayer.opacity = readUint8(reader) / 0xff;\n\tlayer.clipping = readUint8(reader) === 1;\n\n\tconst flags = readUint8(reader);\n\tlayer.transparencyProtected = (flags & 0x01) !== 0;\n\tlayer.hidden = (flags & 0x02) !== 0;\n\t// 0x04 - obsolete\n\t// 0x08 - 1 for Photoshop 5.0 and later, tells if bit 4 has useful information\n\t// 0x10 - pixel data irrelevant to appearance of document\n\n\tskipBytes(reader, 1);\n\n\treadSection(reader, 1, left => {\n\t\tconst mask = readLayerMaskData(reader, options);\n\t\tif (mask) layer.mask = mask;\n\n\t\t/*const blendingRanges =*/ readLayerBlendingRanges(reader);\n\t\tlayer.name = readPascalString(reader, 4);\n\n\t\twhile (left()) {\n\t\t\treadAdditionalLayerInfo(reader, layer, psd, options);\n\t\t}\n\t});\n\n\treturn { layer, channels };\n}\n\nfunction readLayerMaskData(reader: PsdReader, options: ReadOptions) {\n\treturn readSection<LayerMaskData | undefined>(reader, 1, left => {\n\t\tif (!left()) return undefined;\n\n\t\tconst mask: LayerMaskData = {};\n\t\tmask.top = readInt32(reader);\n\t\tmask.left = readInt32(reader);\n\t\tmask.bottom = readInt32(reader);\n\t\tmask.right = readInt32(reader);\n\t\tmask.defaultColor = readUint8(reader);\n\n\t\tconst flags = readUint8(reader);\n\t\tmask.positionRelativeToLayer = (flags & LayerMaskFlags.PositionRelativeToLayer) !== 0;\n\t\tmask.disabled = (flags & LayerMaskFlags.LayerMaskDisabled) !== 0;\n\t\tmask.fromVectorData = (flags & LayerMaskFlags.LayerMaskFromRenderingOtherData) !== 0;\n\n\t\tif (flags & LayerMaskFlags.MaskHasParametersAppliedToIt) {\n\t\t\tconst params = readUint8(reader);\n\t\t\tif (params & MaskParams.UserMaskDensity) mask.userMaskDensity = readUint8(reader) / 0xff;\n\t\t\tif (params & MaskParams.UserMaskFeather) mask.userMaskFeather = readFloat64(reader);\n\t\t\tif (params & MaskParams.VectorMaskDensity) mask.vectorMaskDensity = readUint8(reader) / 0xff;\n\t\t\tif (params & MaskParams.VectorMaskFeather) mask.vectorMaskFeather = readFloat64(reader);\n\t\t}\n\n\t\tif (left() > 2) {\n\t\t\toptions.logMissingFeatures && console.log('Unhandled extra mask params');\n\t\t\t// TODO: handle these values\n\t\t\t/*const realFlags =*/ readUint8(reader);\n\t\t\t/*const realUserMaskBackground =*/ readUint8(reader);\n\t\t\t/*const top2 =*/ readInt32(reader);\n\t\t\t/*const left2 =*/ readInt32(reader);\n\t\t\t/*const bottom2 =*/ readInt32(reader);\n\t\t\t/*const right2 =*/ readInt32(reader);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t\treturn mask;\n\t});\n}\n\nfunction readLayerBlendingRanges(reader: PsdReader) {\n\treturn readSection(reader, 1, left => {\n\t\tconst compositeGrayBlendSource = readUint32(reader);\n\t\tconst compositeGraphBlendDestinationRange = readUint32(reader);\n\t\tconst ranges = [];\n\n\t\twhile (left()) {\n\t\t\tconst sourceRange = readUint32(reader);\n\t\t\tconst destRange = readUint32(reader);\n\t\t\tranges.push({ sourceRange, destRange });\n\t\t}\n\n\t\treturn { compositeGrayBlendSource, compositeGraphBlendDestinationRange, ranges };\n\t});\n}\n\nfunction readLayerChannelImageData(reader: PsdReader, psd: Psd, layer: Layer, channels: ChannelInfo[], options: ReadOptions) {\n\tconst layerWidth = (layer.right || 0) - (layer.left || 0);\n\tconst layerHeight = (layer.bottom || 0) - (layer.top || 0);\n\n\tlet imageData: ImageData | undefined;\n\n\tif (layerWidth && layerHeight) {\n\t\timageData = createImageData(layerWidth, layerHeight);\n\t\tresetImageData(imageData);\n\t}\n\n\tif (RAW_IMAGE_DATA) {\n\t\t(layer as any).imageDataRaw = [];\n\t}\n\n\tfor (const channel of channels) {\n\t\tconst compression = readUint16(reader) as Compression;\n\n\t\tif (channel.id === ChannelID.UserMask) {\n\t\t\tconst mask = layer.mask;\n\n\t\t\tif (!mask) throw new Error(`Missing layer mask data`);\n\n\t\t\tconst maskWidth = (mask.right || 0) - (mask.left || 0);\n\t\t\tconst maskHeight = (mask.bottom || 0) - (mask.top || 0);\n\n\t\t\tif (maskWidth && maskHeight) {\n\t\t\t\tconst maskData = createImageData(maskWidth, maskHeight);\n\t\t\t\tresetImageData(maskData);\n\n\t\t\t\tconst start = reader.offset;\n\t\t\t\treadData(reader, maskData, compression, maskWidth, maskHeight, 0);\n\n\t\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t\t(layer as any).maskDataRaw = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t\t}\n\n\t\t\t\tsetupGrayscale(maskData);\n\n\t\t\t\tif (options.useImageData) {\n\t\t\t\t\tmask.imageData = maskData;\n\t\t\t\t} else {\n\t\t\t\t\tmask.canvas = createCanvas(maskWidth, maskHeight);\n\t\t\t\t\tmask.canvas.getContext('2d')!.putImageData(maskData, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst offset = offsetForChannel(channel.id);\n\t\t\tlet targetData = imageData;\n\n\t\t\tif (offset < 0) {\n\t\t\t\ttargetData = undefined;\n\n\t\t\t\tif (options.throwForMissingFeatures) {\n\t\t\t\t\tthrow new Error(`Channel not supported: ${channel.id}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst start = reader.offset;\n\t\t\treadData(reader, targetData, compression, layerWidth, layerHeight, offset);\n\n\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t(layer as any).imageDataRaw[channel.id] = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t}\n\n\t\t\tif (targetData && psd.colorMode === ColorMode.Grayscale) {\n\t\t\t\tsetupGrayscale(targetData);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (imageData) {\n\t\tif (options.useImageData) {\n\t\t\tlayer.imageData = imageData;\n\t\t} else {\n\t\t\tlayer.canvas = createCanvas(layerWidth, layerHeight);\n\t\t\tlayer.canvas.getContext('2d')!.putImageData(imageData, 0, 0);\n\t\t}\n\t}\n}\n\nfunction readData(\n\treader: PsdReader, data: ImageData | undefined, compression: Compression, width: number, height: number,\n\toffset: number\n) {\n\tif (compression === Compression.RawData) {\n\t\treadDataRaw(reader, data, offset, width, height);\n\t} else if (compression === Compression.RleCompressed) {\n\t\treadDataRLE(reader, data, width, height, 4, [offset]);\n\t} else {\n\t\tthrow new Error(`Compression type not supported: ${compression}`);\n\t}\n}\n\nfunction readGlobalLayerMaskInfo(reader: PsdReader) {\n\treturn readSection<GlobalLayerMaskInfo | undefined>(reader, 1, left => {\n\t\tif (!left()) return undefined;\n\n\t\tconst overlayColorSpace = readUint16(reader);\n\t\tconst colorSpace1 = readUint16(reader);\n\t\tconst colorSpace2 = readUint16(reader);\n\t\tconst colorSpace3 = readUint16(reader);\n\t\tconst colorSpace4 = readUint16(reader);\n\t\tconst opacity = readUint16(reader) / 0xff;\n\t\tconst kind = readUint8(reader);\n\t\tskipBytes(reader, left()); // 3 bytes of padding ?\n\t\treturn { overlayColorSpace, colorSpace1, colorSpace2, colorSpace3, colorSpace4, opacity, kind };\n\t});\n}\n\nfunction readAdditionalLayerInfo(reader: PsdReader, target: LayerAdditionalInfo, psd: Psd, options: ReadOptions) {\n\tcheckSignature(reader, '8BIM', '8B64');\n\tconst key = readSignature(reader);\n\n\treadSection(reader, 2, left => {\n\t\tconst handler = infoHandlersMap[key];\n\n\t\tif (handler) {\n\t\t\ttry {\n\t\t\t\thandler.read(reader, target, left, psd, options);\n\t\t\t} catch (e) {\n\t\t\t\tif (options.throwForMissingFeatures) throw e;\n\t\t\t}\n\t\t} else {\n\t\t\toptions.logMissingFeatures && console.log(`Unhandled additional info: ${key}`);\n\t\t\tskipBytes(reader, left());\n\t\t}\n\n\t\tif (left()) {\n\t\t\toptions.logMissingFeatures && console.log(`Unread ${left()} bytes left for tag: ${key}`);\n\t\t\tskipBytes(reader, left());\n\t\t}\n\t}, false);\n}\n\nfunction readImageData(reader: PsdReader, psd: Psd, globalAlpha: boolean, options: ReadOptions) {\n\tconst compression = readUint16(reader) as Compression;\n\n\tif (supportedColorModes.indexOf(psd.colorMode!) === -1)\n\t\tthrow new Error(`Color mode not supported: ${psd.colorMode}`);\n\n\tif (compression !== Compression.RawData && compression !== Compression.RleCompressed)\n\t\tthrow new Error(`Compression type not supported: ${compression}`);\n\n\tconst imageData = createImageData(psd.width, psd.height);\n\tresetImageData(imageData);\n\n\tif (psd.colorMode === ColorMode.Bitmap) {\n\t\tlet bytes: Uint8Array;\n\n\t\tif (compression === Compression.RawData) {\n\t\t\tbytes = readBytes(reader, Math.ceil(psd.width / 8) * psd.height);\n\t\t} else if (compression === Compression.RleCompressed) {\n\t\t\tbytes = new Uint8Array(psd.width * psd.height);\n\t\t\treadDataRLE(reader, { data: bytes, width: psd.width, height: psd.height }, psd.width, psd.height, 1, [0]);\n\t\t} else {\n\t\t\tthrow new Error(`Bitmap compression not supported: ${compression}`);\n\t\t}\n\n\t\tdecodeBitmap(bytes, imageData.data, psd.width, psd.height);\n\t} else {\n\t\tconst channels = psd.colorMode === ColorMode.Grayscale ? [0] : [0, 1, 2];\n\n\t\tif (psd.channels && psd.channels > 3) {\n\t\t\tfor (let i = 3; i < psd.channels; i++) {\n\t\t\t\t// TODO: store these channels in additional image data\n\t\t\t\tchannels.push(i);\n\t\t\t}\n\t\t} else if (globalAlpha) {\n\t\t\tchannels.push(3);\n\t\t}\n\n\t\tif (compression === Compression.RawData) {\n\t\t\tfor (let i = 0; i < channels.length; i++) {\n\t\t\t\treadDataRaw(reader, imageData, channels[i], psd.width, psd.height);\n\t\t\t}\n\t\t} else if (compression === Compression.RleCompressed) {\n\t\t\tconst start = reader.offset;\n\t\t\treadDataRLE(reader, imageData, psd.width, psd.height, 4, channels);\n\n\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t(psd as any).imageDataRaw = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t}\n\t\t}\n\n\t\tif (psd.colorMode === ColorMode.Grayscale) {\n\t\t\tsetupGrayscale(imageData);\n\t\t}\n\t}\n\n\tif (options.useImageData) {\n\t\tpsd.imageData = imageData;\n\t} else {\n\t\tpsd.canvas = createCanvas(psd.width, psd.height);\n\t\tpsd.canvas.getContext('2d')!.putImageData(imageData, 0, 0);\n\t}\n}\n\nfunction readDataRaw(reader: PsdReader, pixelData: PixelData | undefined, offset: number, width: number, height: number) {\n\tconst size = width * height;\n\tconst buffer = readBytes(reader, size);\n\n\tif (pixelData && offset < 4) {\n\t\tconst data = pixelData.data;\n\n\t\tfor (let i = 0, p = offset | 0; i < size; i++, p = (p + 4) | 0) {\n\t\t\tdata[p] = buffer[i];\n\t\t}\n\t}\n}\n\nexport function readDataRLE(\n\treader: PsdReader, pixelData: PixelData | undefined, _width: number, height: number, step: number, offsets: number[]\n) {\n\tconst lengths = new Uint16Array(offsets.length * height);\n\tconst data = pixelData && pixelData.data;\n\n\tfor (let o = 0, li = 0; o < offsets.length; o++) {\n\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\tlengths[li] = readUint16(reader);\n\t\t}\n\t}\n\n\tfor (let c = 0, li = 0; c < offsets.length; c++) {\n\t\tconst offset = offsets[c] | 0;\n\t\tconst extra = c > 3 || offset > 3;\n\n\t\tif (!data || extra) {\n\t\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\t\tskipBytes(reader, lengths[li]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let y = 0, p = offset | 0; y < height; y++, li++) {\n\t\t\t\tconst length = lengths[li];\n\t\t\t\tconst buffer = readBytes(reader, length);\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet header = buffer[i];\n\n\t\t\t\t\tif (header > 128) {\n\t\t\t\t\t\tconst value = buffer[++i];\n\t\t\t\t\t\theader = (256 - header) | 0;\n\n\t\t\t\t\t\tfor (let j = 0; j <= header; j = (j + 1) | 0) {\n\t\t\t\t\t\t\tdata[p] = value;\n\t\t\t\t\t\t\tp = (p + step) | 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (header < 128) {\n\t\t\t\t\t\tfor (let j = 0; j <= header; j = (j + 1) | 0) {\n\t\t\t\t\t\t\tdata[p] = buffer[++i];\n\t\t\t\t\t\t\tp = (p + step) | 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ignore 128\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\tthrow new Error(`Invalid RLE data: exceeded buffer size ${i}/${length}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function readSection<T>(reader: PsdReader, round: number, func: (left: () => number) => T, skipEmpty = true): T | undefined {\n\tconst length = readInt32(reader);\n\n\tif (length <= 0 && skipEmpty) return undefined;\n\n\tlet end = reader.offset + length;\n\tconst result = func(() => end - reader.offset);\n\n\tif (reader.offset > end)\n\t\tthrow new Error('Exceeded section limits');\n\n\tif (reader.offset !== end)\n\t\tthrow new Error(`Unread section data: ${end - reader.offset} bytes at 0x${reader.offset.toString(16)}`);\n\n\twhile (end % round) end++;\n\n\treader.offset = end;\n\treturn result;\n}\n\nexport function readColor(reader: PsdReader): Color {\n\tconst colorSpace = readUint16(reader) as ColorSpace;\n\n\tswitch (colorSpace) {\n\t\tcase ColorSpace.RGB: {\n\t\t\tconst r = readUint16(reader) / 257;\n\t\t\tconst g = readUint16(reader) / 257;\n\t\t\tconst b = readUint16(reader) / 257;\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { r, g, b };\n\t\t}\n\t\tcase ColorSpace.Lab: {\n\t\t\tconst l = readInt16(reader) / 100;\n\t\t\tconst a = readInt16(reader) / 100;\n\t\t\tconst b = readInt16(reader) / 100;\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { l, a, b };\n\t\t}\n\t\tcase ColorSpace.CMYK: {\n\t\t\tconst c = readInt16(reader);\n\t\t\tconst m = readInt16(reader);\n\t\t\tconst y = readInt16(reader);\n\t\t\tconst k = readInt16(reader);\n\t\t\treturn { c, m, y, k };\n\t\t}\n\t\tcase ColorSpace.Grayscale: {\n\t\t\tconst k = readInt16(reader);\n\t\t\tskipBytes(reader, 6);\n\t\t\treturn { k };\n\t\t}\n\t\tcase ColorSpace.HSB: {\n\t\t\tconst h = readInt16(reader);\n\t\t\tconst s = readInt16(reader);\n\t\t\tconst b = readInt16(reader);\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { h, s, b };\n\t\t}\n\t\tdefault:\n\t\t\tthrow new Error('Invalid color space');\n\t}\n}\n\nexport function readPattern(reader: PsdReader): PatternInfo {\n\treadUint32(reader); // length\n\tconst version = readUint32(reader);\n\tif (version !== 1) throw new Error(`Invalid pattern version: ${version}`);\n\n\tconst colorMode = readUint32(reader) as ColorMode;\n\tconst x = readInt16(reader);\n\tconst y = readInt16(reader);\n\n\t// we only support RGB and grayscale for now\n\tif (colorMode !== ColorMode.RGB && colorMode !== ColorMode.Grayscale) throw new Error('Unsupported pattern color mode');\n\n\tconst name = readUnicodeString(reader);\n\tconst id = readPascalString(reader, 1);\n\n\t// TODO: index color table here (only for indexed color mode, not supported right now)\n\n\t// virtual memory array list\n\tconst version2 = readUint32(reader);\n\tif (version2 !== 3) throw new Error(`Invalid pattern VMAL version: ${version2}`);\n\n\treadUint32(reader); // length\n\tconst top = readUint32(reader);\n\tconst left = readUint32(reader);\n\tconst bottom = readUint32(reader);\n\tconst right = readUint32(reader);\n\tconst channelsCount = readUint32(reader);\n\tconst width = right - left;\n\tconst height = bottom - top;\n\tconst data = new Uint8Array(width * height * 4);\n\n\tfor (let i = 3; i < data.byteLength; i += 4) {\n\t\tdata[i] = 255;\n\t}\n\n\tfor (let i = 0, ch = 0; i < (channelsCount + 2); i++) {\n\t\tconst has = readUint32(reader);\n\n\t\tif (has) {\n\t\t\tconst length = readUint32(reader);\n\t\t\tconst pixelDepth = readUint32(reader);\n\t\t\tconst ctop = readUint32(reader);\n\t\t\tconst cleft = readUint32(reader);\n\t\t\tconst cbottom = readUint32(reader);\n\t\t\tconst cright = readUint32(reader);\n\t\t\tconst pixelDepth2 = readUint16(reader);\n\t\t\tconst compressionMode = readUint8(reader); // 0 - raw, 1 - zip\n\t\t\tconst dataLength = length - (4 + 16 + 2 + 1);\n\t\t\tconst cdata = readBytes(reader, dataLength);\n\n\t\t\tif (pixelDepth !== 8 || pixelDepth2 !== 8) throw new Error('16bit pixel depth not supported in palettes');\n\t\t\tif (compressionMode !== 0) throw new Error('Zip compression not supported in palettes');\n\n\t\t\tconst w = cright - cleft;\n\t\t\tconst h = cbottom - ctop;\n\t\t\tconst ox = cleft - left;\n\t\t\tconst oy = ctop - top;\n\n\t\t\tif (colorMode === ColorMode.RGB && ch < 3) {\n\t\t\t\tfor (let y = 0; y < h; y++) {\n\t\t\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\t\t\tconst src = x + y * w;\n\t\t\t\t\t\tconst dst = (ox + x + (y + oy) * width) * 4;\n\t\t\t\t\t\tdata[dst + ch] = cdata[src];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (colorMode === ColorMode.Grayscale && ch < 1) {\n\t\t\t\tfor (let y = 0; y < h; y++) {\n\t\t\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\t\t\tconst src = x + y * w;\n\t\t\t\t\t\tconst dst = (ox + x + (y + oy) * width) * 4;\n\t\t\t\t\t\tconst value = cdata[src];\n\t\t\t\t\t\tdata[dst + 0] = value;\n\t\t\t\t\t\tdata[dst + 1] = value;\n\t\t\t\t\t\tdata[dst + 2] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tch++;\n\t\t}\n\t}\n\n\t// TODO: use canvas instead of data ?\n\n\treturn { id, name, x, y, bounds: { x: left, y: top, w: width, h: height }, data };\n}\n","import { toByteArray } from 'base64-js';\nimport { ImageResources, ReadOptions, RenderingIntent } from './psd';\nimport {\n\tPsdReader, readPascalString, readUnicodeString, readUint32, readUint16, readUint8, readFloat64,\n\treadBytes, skipBytes, readFloat32, readInt16, readFixedPoint32, readSignature, checkSignature,\n\treadSection, readColor\n} from './psdReader';\nimport {\n\tPsdWriter, writePascalString, writeUnicodeString, writeUint32, writeUint8, writeFloat64, writeUint16,\n\twriteBytes, writeInt16, writeFloat32, writeFixedPoint32, writeUnicodeStringWithPadding, writeColor,\n} from './psdWriter';\nimport { createCanvasFromData, createEnum } from './helpers';\nimport { decodeString, encodeString } from './utf8';\nimport { readVersionAndDescriptor, writeVersionAndDescriptor } from './descriptor';\n\nexport interface ResourceHandler {\n\tkey: number;\n\thas: (target: ImageResources) => boolean;\n\tread: (reader: PsdReader, target: ImageResources, left: () => number, options: ReadOptions) => void;\n\twrite: (writer: PsdWriter, target: ImageResources) => void;\n}\n\nexport const resourceHandlers: ResourceHandler[] = [];\nexport const resourceHandlersMap: { [key: number]: ResourceHandler } = {};\n\nfunction addHandler(\n\tkey: number,\n\thas: (target: ImageResources) => boolean,\n\tread: (reader: PsdReader, target: ImageResources, left: () => number, options: ReadOptions) => void,\n\twrite: (writer: PsdWriter, target: ImageResources) => void,\n) {\n\tconst handler: ResourceHandler = { key, has, read, write };\n\tresourceHandlers.push(handler);\n\tresourceHandlersMap[handler.key] = handler;\n}\n\nconst MOCK_HANDLERS = false;\nconst LOG_MOCK_HANDLERS = false;\nconst RESOLUTION_UNITS = [undefined, 'PPI', 'PPCM'];\nconst MEASUREMENT_UNITS = [undefined, 'Inches', 'Centimeters', 'Points', 'Picas', 'Columns'];\nconst hex = '0123456789abcdef';\n\nfunction charToNibble(code: number) {\n\treturn code <= 57 ? code - 48 : code - 87;\n}\n\nfunction byteAt(value: string, index: number) {\n\treturn (charToNibble(value.charCodeAt(index)) << 4) | charToNibble(value.charCodeAt(index + 1));\n}\n\nfunction readUtf8String(reader: PsdReader, length: number) {\n\tconst buffer = readBytes(reader, length);\n\treturn decodeString(buffer);\n}\n\nfunction writeUtf8String(writer: PsdWriter, value: string) {\n\tconst buffer = encodeString(value);\n\twriteBytes(writer, buffer);\n}\n\nMOCK_HANDLERS && addHandler(\n\t1028, // IPTC-NAA record\n\ttarget => (target as any)._ir1028 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1028', left());\n\t\t(target as any)._ir1028 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1028);\n\t},\n);\n\naddHandler(\n\t1061,\n\ttarget => target.captionDigest !== undefined,\n\t(reader, target) => {\n\t\tlet captionDigest = '';\n\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tconst byte = readUint8(reader);\n\t\t\tcaptionDigest += hex[byte >> 4];\n\t\t\tcaptionDigest += hex[byte & 0xf];\n\t\t}\n\n\t\ttarget.captionDigest = captionDigest;\n\t},\n\t(writer, target) => {\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\twriteUint8(writer, byteAt(target.captionDigest!, i * 2));\n\t\t}\n\t},\n);\n\naddHandler(\n\t1060,\n\ttarget => target.xmpMetadata !== undefined,\n\t(reader, target, left) => target.xmpMetadata = readUtf8String(reader, left()),\n\t(writer, target) => writeUtf8String(writer, target.xmpMetadata!),\n);\n\nconst Inte = createEnum<RenderingIntent>('Inte', 'perceptual', {\n\t'perceptual': 'Img ',\n\t'saturation': 'Grp ',\n\t'relative colorimetric': 'Clrm',\n\t'absolute colorimetric': 'AClr',\n});\n\ninterface PrintInformationDescriptor {\n\t'Nm  '?: string;\n\tClrS?: string;\n\tPstS?: boolean;\n\tMpBl?: boolean;\n\tInte?: string;\n\thardProof?: boolean;\n\tprintSixteenBit?: boolean;\n\tprinterName?: string;\n\tprintProofSetup?: {\n\t\tBltn: string;\n\t} | {\n\t\tprofile: string;\n\t\tInte: string;\n\t\tMpBl: boolean;\n\t\tpaperWhite: boolean;\n\t};\n}\n\naddHandler(\n\t1082,\n\ttarget => target.printInformation !== undefined,\n\t(reader, target) => {\n\t\tconst desc: PrintInformationDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.printInformation = {\n\t\t\tprinterName: desc.printerName || '',\n\t\t\trenderingIntent: Inte.decode(desc.Inte ?? 'Inte.Img '),\n\t\t};\n\n\t\tconst info = target.printInformation;\n\n\t\tif (desc.PstS !== undefined) info.printerManagesColors = desc.PstS;\n\t\tif (desc['Nm  '] !== undefined) info.printerProfile = desc['Nm  '];\n\t\tif (desc.MpBl !== undefined) info.blackPointCompensation = desc.MpBl;\n\t\tif (desc.printSixteenBit !== undefined) info.printSixteenBit = desc.printSixteenBit;\n\t\tif (desc.hardProof !== undefined) info.hardProof = desc.hardProof;\n\t\tif (desc.printProofSetup) {\n\t\t\tif ('Bltn' in desc.printProofSetup) {\n\t\t\t\tinfo.proofSetup = { builtin: desc.printProofSetup.Bltn.split('.')[1] };\n\t\t\t} else {\n\t\t\t\tinfo.proofSetup = {\n\t\t\t\t\tprofile: desc.printProofSetup.profile,\n\t\t\t\t\trenderingIntent: Inte.decode(desc.printProofSetup.Inte ?? 'Inte.Img '),\n\t\t\t\t\tblackPointCompensation: !!desc.printProofSetup.MpBl,\n\t\t\t\t\tpaperWhite: !!desc.printProofSetup.paperWhite,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tconst info = target.printInformation!;\n\t\tconst desc: PrintInformationDescriptor = {};\n\n\t\tif (info.printerManagesColors) {\n\t\t\tdesc.PstS = true;\n\t\t} else {\n\t\t\tif (info.hardProof !== undefined) desc.hardProof = !!info.hardProof;\n\t\t\tdesc.ClrS = 'ClrS.RGBC'; // TODO: ???\n\t\t\tdesc['Nm  '] = info.printerProfile ?? 'CIE RGB';\n\t\t}\n\n\t\tdesc.Inte = Inte.encode(info.renderingIntent);\n\n\t\tif (!info.printerManagesColors) desc.MpBl = !!info.blackPointCompensation;\n\n\t\tdesc.printSixteenBit = !!info.printSixteenBit;\n\t\tdesc.printerName = info.printerName || '';\n\n\t\tif (info.proofSetup && 'profile' in info.proofSetup) {\n\t\t\tdesc.printProofSetup = {\n\t\t\t\tprofile: info.proofSetup.profile || '',\n\t\t\t\tInte: Inte.encode(info.proofSetup.renderingIntent),\n\t\t\t\tMpBl: !!info.proofSetup.blackPointCompensation,\n\t\t\t\tpaperWhite: !!info.proofSetup.paperWhite,\n\t\t\t};\n\t\t} else {\n\t\t\tdesc.printProofSetup = {\n\t\t\t\tBltn: info.proofSetup?.builtin ? `builtinProof.${info.proofSetup.builtin}` : 'builtinProof.proofCMYK',\n\t\t\t};\n\t\t}\n\n\t\twriteVersionAndDescriptor(writer, '', 'printOutput', desc);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1083, // Print style\n\ttarget => (target as any)._ir1083 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1083', left());\n\t\t(target as any)._ir1083 = readBytes(reader, left());\n\n\t\t// TODO:\n\t\t// const desc = readVersionAndDescriptor(reader);\n\t\t// console.log('1083', require('util').inspect(desc, false, 99, true));\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1083);\n\t},\n);\n\naddHandler(\n\t1005,\n\ttarget => target.resolutionInfo !== undefined,\n\t(reader, target) => {\n\t\tconst horizontalResolution = readFixedPoint32(reader);\n\t\tconst horizontalResolutionUnit = readUint16(reader);\n\t\tconst widthUnit = readUint16(reader);\n\t\tconst verticalResolution = readFixedPoint32(reader);\n\t\tconst verticalResolutionUnit = readUint16(reader);\n\t\tconst heightUnit = readUint16(reader);\n\n\t\ttarget.resolutionInfo = {\n\t\t\thorizontalResolution,\n\t\t\thorizontalResolutionUnit: RESOLUTION_UNITS[horizontalResolutionUnit] || 'PPI' as any,\n\t\t\twidthUnit: MEASUREMENT_UNITS[widthUnit] || 'Inches' as any,\n\t\t\tverticalResolution,\n\t\t\tverticalResolutionUnit: RESOLUTION_UNITS[verticalResolutionUnit] || 'PPI' as any,\n\t\t\theightUnit: MEASUREMENT_UNITS[heightUnit] || 'Inches' as any,\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst info = target.resolutionInfo!;\n\n\t\twriteFixedPoint32(writer, info.horizontalResolution || 0);\n\t\twriteUint16(writer, Math.max(1, RESOLUTION_UNITS.indexOf(info.horizontalResolutionUnit)));\n\t\twriteUint16(writer, Math.max(1, MEASUREMENT_UNITS.indexOf(info.widthUnit)));\n\t\twriteFixedPoint32(writer, info.verticalResolution || 0);\n\t\twriteUint16(writer, Math.max(1, RESOLUTION_UNITS.indexOf(info.verticalResolutionUnit)));\n\t\twriteUint16(writer, Math.max(1, MEASUREMENT_UNITS.indexOf(info.heightUnit)));\n\t},\n);\n\nconst printScaleStyles = ['centered', 'size to fit', 'user defined'];\n\naddHandler(\n\t1062,\n\ttarget => target.printScale !== undefined,\n\t(reader, target) => {\n\t\ttarget.printScale = {\n\t\t\tstyle: printScaleStyles[readInt16(reader)] as any,\n\t\t\tx: readFloat32(reader),\n\t\t\ty: readFloat32(reader),\n\t\t\tscale: readFloat32(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst { style, x, y, scale } = target.printScale!;\n\t\twriteInt16(writer, Math.max(0, printScaleStyles.indexOf(style!)));\n\t\twriteFloat32(writer, x || 0);\n\t\twriteFloat32(writer, y || 0);\n\t\twriteFloat32(writer, scale || 0);\n\t},\n);\n\naddHandler(\n\t1006,\n\ttarget => target.alphaChannelNames !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaChannelNames = [];\n\n\t\twhile (left()) {\n\t\t\tconst value = readPascalString(reader, 1);\n\t\t\ttarget.alphaChannelNames.push(value);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const name of target.alphaChannelNames!) {\n\t\t\twritePascalString(writer, name, 1);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1045,\n\ttarget => target.alphaChannelNames !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaChannelNames = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.alphaChannelNames.push(readUnicodeString(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const name of target.alphaChannelNames!) {\n\t\t\twriteUnicodeStringWithPadding(writer, name);\n\t\t}\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1077,\n\ttarget => (target as any)._ir1077 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1077', left());\n\t\t(target as any)._ir1077 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1077);\n\t},\n);\n\naddHandler(\n\t1053,\n\ttarget => target.alphaIdentifiers !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaIdentifiers = [];\n\n\t\twhile (left() >= 4) {\n\t\t\ttarget.alphaIdentifiers.push(readUint32(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const id of target.alphaIdentifiers!) {\n\t\t\twriteUint32(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1010,\n\ttarget => target.backgroundColor !== undefined,\n\t(reader, target) => target.backgroundColor = readColor(reader),\n\t(writer, target) => writeColor(writer, target.backgroundColor!),\n);\n\naddHandler(\n\t1037,\n\ttarget => target.globalAngle !== undefined,\n\t(reader, target) => target.globalAngle = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.globalAngle!),\n);\n\naddHandler(\n\t1049,\n\ttarget => target.globalAltitude !== undefined,\n\t(reader, target) => target.globalAltitude = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.globalAltitude!),\n);\n\naddHandler(\n\t1011,\n\ttarget => target.printFlags !== undefined,\n\t(reader, target) => {\n\t\ttarget.printFlags = {\n\t\t\tlabels: !!readUint8(reader),\n\t\t\tcropMarks: !!readUint8(reader),\n\t\t\tcolorBars: !!readUint8(reader),\n\t\t\tregistrationMarks: !!readUint8(reader),\n\t\t\tnegative: !!readUint8(reader),\n\t\t\tflip: !!readUint8(reader),\n\t\t\tinterpolate: !!readUint8(reader),\n\t\t\tcaption: !!readUint8(reader),\n\t\t\tprintFlags: !!readUint8(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst flags = target.printFlags!;\n\t\twriteUint8(writer, flags.labels ? 1 : 0);\n\t\twriteUint8(writer, flags.cropMarks ? 1 : 0);\n\t\twriteUint8(writer, flags.colorBars ? 1 : 0);\n\t\twriteUint8(writer, flags.registrationMarks ? 1 : 0);\n\t\twriteUint8(writer, flags.negative ? 1 : 0);\n\t\twriteUint8(writer, flags.flip ? 1 : 0);\n\t\twriteUint8(writer, flags.interpolate ? 1 : 0);\n\t\twriteUint8(writer, flags.caption ? 1 : 0);\n\t\twriteUint8(writer, flags.printFlags ? 1 : 0);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t10000, // Print flags\n\ttarget => (target as any)._ir10000 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 10000', left());\n\t\t(target as any)._ir10000 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir10000);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1013, // Color halftoning\n\ttarget => (target as any)._ir1013 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1013', left());\n\t\t(target as any)._ir1013 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1013);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1016, // Color transfer functions\n\ttarget => (target as any)._ir1016 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1016', left());\n\t\t(target as any)._ir1016 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1016);\n\t},\n);\n\naddHandler(\n\t1024,\n\ttarget => target.layerState !== undefined,\n\t(reader, target) => target.layerState = readUint16(reader),\n\t(writer, target) => writeUint16(writer, target.layerState!),\n);\n\naddHandler(\n\t1026,\n\ttarget => target.layersGroup !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.layersGroup = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.layersGroup.push(readUint16(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const g of target.layersGroup!) {\n\t\t\twriteUint16(writer, g);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1072,\n\ttarget => target.layerGroupsEnabledId !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.layerGroupsEnabledId = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.layerGroupsEnabledId.push(readUint8(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const id of target.layerGroupsEnabledId!) {\n\t\t\twriteUint8(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1069,\n\ttarget => target.layerSelectionIds !== undefined,\n\t(reader, target) => {\n\t\tlet count = readUint16(reader);\n\t\ttarget.layerSelectionIds = [];\n\n\t\twhile (count--) {\n\t\t\ttarget.layerSelectionIds.push(readUint32(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteUint16(writer, target.layerSelectionIds!.length);\n\n\t\tfor (const id of target.layerSelectionIds!) {\n\t\t\twriteUint32(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1032,\n\ttarget => target.gridAndGuidesInformation !== undefined,\n\t(reader, target) => {\n\t\tconst version = readUint32(reader);\n\t\tconst horizontal = readUint32(reader);\n\t\tconst vertical = readUint32(reader);\n\t\tconst count = readUint32(reader);\n\n\t\tif (version !== 1) throw new Error(`Invalid 1032 resource version: ${version}`);\n\n\t\ttarget.gridAndGuidesInformation = {\n\t\t\tgrid: { horizontal, vertical },\n\t\t\tguides: [],\n\t\t};\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\ttarget.gridAndGuidesInformation.guides!.push({\n\t\t\t\tlocation: readUint32(reader) / 32,\n\t\t\t\tdirection: readUint8(reader) ? 'horizontal' : 'vertical'\n\t\t\t});\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tconst info = target.gridAndGuidesInformation!;\n\t\tconst grid = info.grid || { horizontal: 18 * 32, vertical: 18 * 32 };\n\t\tconst guides = info.guides || [];\n\n\t\twriteUint32(writer, 1);\n\t\twriteUint32(writer, grid.horizontal);\n\t\twriteUint32(writer, grid.vertical);\n\t\twriteUint32(writer, guides.length);\n\n\t\tfor (const g of guides) {\n\t\t\twriteUint32(writer, g.location * 32);\n\t\t\twriteUint8(writer, g.direction === 'horizontal' ? 1 : 0);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1054,\n\ttarget => target.urlsList !== undefined,\n\t(reader, target, _, options) => {\n\t\tconst count = readUint32(reader);\n\n\t\tif (count) {\n\t\t\tif (!options.throwForMissingFeatures) return;\n\t\t\tthrow new Error('Not implemented: URL List');\n\t\t}\n\n\t\t// TODO: read actual URL list\n\t\ttarget.urlsList = [];\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, target.urlsList!.length);\n\n\t\t// TODO: write actual URL list\n\t\tif (target.urlsList!.length) {\n\t\t\tthrow new Error('Not implemented: URL List');\n\t\t}\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1050, // Slices\n\ttarget => (target as any)._ir1050 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1050', left());\n\t\t(target as any)._ir1050 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1050);\n\t},\n);\n\naddHandler(\n\t1064,\n\ttarget => target.pixelAspectRatio !== undefined,\n\t(reader, target) => {\n\t\tif (readUint32(reader) > 2) throw new Error('Invalid pixelAspectRatio version');\n\t\ttarget.pixelAspectRatio = { aspect: readFloat64(reader) };\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, 2); // version\n\t\twriteFloat64(writer, target.pixelAspectRatio!.aspect);\n\t},\n);\n\naddHandler(\n\t1041,\n\ttarget => target.iccUntaggedProfile !== undefined,\n\t(reader, target) => {\n\t\ttarget.iccUntaggedProfile = !!readUint8(reader);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.iccUntaggedProfile ? 1 : 0);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1039, // ICC Profile\n\ttarget => (target as any)._ir1039 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1039', left());\n\t\t(target as any)._ir1039 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1039);\n\t},\n);\n\naddHandler(\n\t1044,\n\ttarget => target.idsSeedNumber !== undefined,\n\t(reader, target) => target.idsSeedNumber = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.idsSeedNumber!),\n);\n\naddHandler(\n\t1036,\n\ttarget => target.thumbnail !== undefined || target.thumbnailRaw !== undefined,\n\t(reader, target, left, options) => {\n\t\tconst format = readUint32(reader); // 1 = kJpegRGB, 0 = kRawRGB\n\t\tconst width = readUint32(reader);\n\t\tconst height = readUint32(reader);\n\t\treadUint32(reader); // widthBytes = (width * bits_per_pixel + 31) / 32 * 4.\n\t\treadUint32(reader); // totalSize = widthBytes * height * planes\n\t\treadUint32(reader); // sizeAfterCompression\n\t\tconst bitsPerPixel = readUint16(reader); // 24\n\t\tconst planes = readUint16(reader); // 1\n\n\t\tif (format !== 1 || bitsPerPixel !== 24 || planes !== 1) {\n\t\t\toptions.logMissingFeatures && console.log(`Invalid thumbnail data (format: ${format}, bitsPerPixel: ${bitsPerPixel}, planes: ${planes})`);\n\t\t\tskipBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst size = left();\n\t\tconst data = readBytes(reader, size);\n\n\t\tif (options.useRawThumbnail) {\n\t\t\ttarget.thumbnailRaw = { width, height, data };\n\t\t} else {\n\t\t\ttarget.thumbnail = createCanvasFromData(data);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet data: Uint8Array;\n\n\t\tif (target.thumbnailRaw) {\n\t\t\twidth = target.thumbnailRaw.width;\n\t\t\theight = target.thumbnailRaw.height;\n\t\t\tdata = target.thumbnailRaw.data;\n\t\t} else {\n\t\t\twidth = target.thumbnail!.width;\n\t\t\theight = target.thumbnail!.height;\n\t\t\tdata = toByteArray(target.thumbnail!.toDataURL('image/jpeg', 1).substr('data:image/jpeg;base64,'.length));\n\t\t}\n\n\t\tconst bitsPerPixel = 24;\n\t\tconst widthBytes = Math.floor((width * bitsPerPixel + 31) / 32) * 4;\n\t\tconst planes = 1;\n\t\tconst totalSize = widthBytes * height * planes;\n\t\tconst sizeAfterCompression = data.length;\n\n\t\twriteUint32(writer, 1); // 1 = kJpegRGB\n\t\twriteUint32(writer, width);\n\t\twriteUint32(writer, height);\n\t\twriteUint32(writer, widthBytes);\n\t\twriteUint32(writer, totalSize);\n\t\twriteUint32(writer, sizeAfterCompression);\n\t\twriteUint16(writer, bitsPerPixel);\n\t\twriteUint16(writer, planes);\n\t\twriteBytes(writer, data);\n\t},\n);\n\naddHandler(\n\t1057,\n\ttarget => target.versionInfo !== undefined,\n\t(reader, target, left) => {\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 1) throw new Error('Invalid versionInfo version');\n\n\t\ttarget.versionInfo = {\n\t\t\thasRealMergedData: !!readUint8(reader),\n\t\t\twriterName: readUnicodeString(reader),\n\t\t\treaderName: readUnicodeString(reader),\n\t\t\tfileVersion: readUint32(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst versionInfo = target.versionInfo!;\n\t\twriteUint32(writer, 1); // version\n\t\twriteUint8(writer, versionInfo.hasRealMergedData ? 1 : 0);\n\t\twriteUnicodeString(writer, versionInfo.writerName);\n\t\twriteUnicodeString(writer, versionInfo.readerName);\n\t\twriteUint32(writer, versionInfo.fileVersion);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1058, // EXIF data 1.\n\ttarget => (target as any)._ir1058 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1058', left());\n\t\t(target as any)._ir1058 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1058);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1025,\n\ttarget => (target as any)._ir1025 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1025', left());\n\t\t(target as any)._ir1025 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1025);\n\t},\n);\n\nconst FrmD = createEnum<'auto' | 'none' | 'dispose'>('FrmD', '', {\n\tauto: 'Auto',\n\tnone: 'None',\n\tdispose: 'Disp',\n});\n\ninterface AnimationDescriptor {\n\tAFSt: number;\n\tFrIn: {\n\t\tFrID: number;\n\t\tFrDl: number;\n\t\tFrDs: string;\n\t\tFrGA?: number;\n\t}[];\n\tFSts: {\n\t\tFsID: number;\n\t\tAFrm: number;\n\t\tFsFr: number[];\n\t\tLCnt: number;\n\t}[];\n}\n\ninterface Animations {\n\tframes: {\n\t\tid: number;\n\t\tdelay: number;\n\t\tdispose?: 'auto' | 'none' | 'dispose';\n\t}[];\n\tanimations: {\n\t\tid: number;\n\t\tframes: number[];\n\t\trepeats?: number;\n\t}[];\n}\n\n// TODO: Unfinished\nMOCK_HANDLERS && addHandler(\n\t4000,\n\ttarget => (target as any)._ir4000 !== undefined,\n\t(reader, target, left, { logMissingFeatures, logDevFeatures }) => {\n\t\tif (MOCK_HANDLERS) {\n\t\t\tLOG_MOCK_HANDLERS && console.log('image resource 4000', left());\n\t\t\t(target as any)._ir4000 = readBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = readSignature(reader);\n\n\t\tif (key === 'mani') {\n\t\t\tcheckSignature(reader, 'IRFR');\n\t\t\treadSection(reader, 1, left => {\n\t\t\t\twhile (left()) {\n\t\t\t\t\tcheckSignature(reader, '8BIM');\n\t\t\t\t\tconst key = readSignature(reader);\n\n\t\t\t\t\treadSection(reader, 1, left => {\n\t\t\t\t\t\tif (key === 'AnDs') {\n\t\t\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as AnimationDescriptor;\n\t\t\t\t\t\t\t// console.log('AnDs', desc);\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 AnDs', desc);\n\t\t\t\t\t\t\t// logDevFeatures && console.log('#4000 AnDs', require('util').inspect(desc, false, 99, true));\n\n\t\t\t\t\t\t\tconst result: Animations = {\n\t\t\t\t\t\t\t\t// desc.AFSt ???\n\t\t\t\t\t\t\t\tframes: desc.FrIn.map(x => ({\n\t\t\t\t\t\t\t\t\tid: x.FrID,\n\t\t\t\t\t\t\t\t\tdelay: x.FrDl / 100,\n\t\t\t\t\t\t\t\t\tdispose: x.FrDs ? FrmD.decode(x.FrDs) : 'auto', // missing == auto\n\t\t\t\t\t\t\t\t\t// x.FrGA ???\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\tanimations: desc.FSts.map(x => ({\n\t\t\t\t\t\t\t\t\tid: x.FsID,\n\t\t\t\t\t\t\t\t\tframes: x.FsFr,\n\t\t\t\t\t\t\t\t\trepeats: x.LCnt,\n\t\t\t\t\t\t\t\t\t// x.AFrm ???\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 AnDs:result', result);\n\t\t\t\t\t\t\t// logDevFeatures && console.log('#4000 AnDs:result', require('util').inspect(result, false, 99, true));\n\t\t\t\t\t\t} else if (key === 'Roll') {\n\t\t\t\t\t\t\tconst bytes = readBytes(reader, left());\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 Roll', bytes);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogMissingFeatures && console.log('Unhandled subsection in #4000', key);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (key === 'mopt') {\n\t\t\tconst bytes = readBytes(reader, left());\n\t\t\tlogDevFeatures && console.log('#4000 mopt', bytes);\n\t\t} else {\n\t\t\tlogMissingFeatures && console.log('Unhandled key in #4000:', key);\n\t\t\treturn;\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir4000);\n\t},\n);\n\n// TODO: Unfinished\nMOCK_HANDLERS && addHandler(\n\t4001,\n\ttarget => (target as any)._ir4001 !== undefined,\n\t(reader, target, left, { logMissingFeatures, logDevFeatures }) => {\n\t\tif (MOCK_HANDLERS) {\n\t\t\tLOG_MOCK_HANDLERS && console.log('image resource 4001', left());\n\t\t\t(target as any)._ir4001 = readBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = readSignature(reader);\n\n\t\tif (key === 'mfri') {\n\t\t\tconst version = readUint32(reader);\n\t\t\tif (version !== 2) throw new Error('Invalid mfri version');\n\n\t\t\tconst length = readUint32(reader);\n\t\t\tconst bytes = readBytes(reader, length);\n\t\t\tlogDevFeatures && console.log('mfri', bytes);\n\t\t} else if (key === 'mset') {\n\t\t\tconst desc = readVersionAndDescriptor(reader);\n\t\t\tlogDevFeatures && console.log('mset', desc);\n\t\t} else {\n\t\t\tlogMissingFeatures && console.log('Unhandled key in #4001', key);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir4001);\n\t},\n);\n","function charLengthInBytes(code: number): number {\r\n\tif ((code & 0xffffff80) === 0) {\r\n\t\treturn 1;\r\n\t} else if ((code & 0xfffff800) === 0) {\r\n\t\treturn 2;\r\n\t} else if ((code & 0xffff0000) === 0) {\r\n\t\treturn 3;\r\n\t} else {\r\n\t\treturn 4;\r\n\t}\r\n}\r\n\r\nexport function stringLengthInBytes(value: string): number {\r\n\tlet result = 0;\r\n\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tconst code = value.charCodeAt(i);\r\n\r\n\t\t// high surrogate\r\n\t\tif (code >= 0xd800 && code <= 0xdbff) {\r\n\t\t\tif ((i + 1) < value.length) {\r\n\t\t\t\tconst extra = value.charCodeAt(i + 1);\r\n\r\n\t\t\t\t// low surrogate\r\n\t\t\t\tif ((extra & 0xfc00) === 0xdc00) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tresult += charLengthInBytes(((code & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult += charLengthInBytes(code);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction writeCharacter(buffer: Uint8Array | Buffer, offset: number, code: number): number {\r\n\tconst length = charLengthInBytes(code);\r\n\r\n\tswitch (length) {\r\n\t\tcase 1:\r\n\t\t\tbuffer[offset] = code;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tbuffer[offset] = ((code >> 6) & 0x1f) | 0xc0;\r\n\t\t\tbuffer[offset + 1] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tbuffer[offset] = ((code >> 12) & 0x0f) | 0xe0;\r\n\t\t\tbuffer[offset + 1] = ((code >> 6) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 2] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbuffer[offset] = ((code >> 18) & 0x07) | 0xf0;\r\n\t\t\tbuffer[offset + 1] = ((code >> 12) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 2] = ((code >> 6) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 3] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn length;\r\n}\r\n\r\nexport function encodeStringTo(buffer: Uint8Array | Buffer, offset: number, value: string): number {\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tconst code = value.charCodeAt(i);\r\n\r\n\t\t// high surrogate\r\n\t\tif (code >= 0xd800 && code <= 0xdbff) {\r\n\t\t\tif ((i + 1) < value.length) {\r\n\t\t\t\tconst extra = value.charCodeAt(i + 1);\r\n\r\n\t\t\t\t// low surrogate\r\n\t\t\t\tif ((extra & 0xfc00) === 0xdc00) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tconst fullCode = ((code & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\r\n\t\t\t\t\toffset += writeCharacter(buffer, offset, fullCode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toffset += writeCharacter(buffer, offset, code);\r\n\t\t}\r\n\t}\r\n\r\n\treturn offset;\r\n}\r\n\r\nexport function encodeString(value: string): Uint8Array {\r\n\tconst buffer = new Uint8Array(stringLengthInBytes(value));\r\n\tencodeStringTo(buffer, 0, value);\r\n\treturn buffer;\r\n}\r\n\r\nfunction continuationByte(buffer: Uint8Array, index: number): number {\r\n\tif (index >= buffer.length) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tconst continuationByte = buffer[index];\r\n\r\n\tif ((continuationByte & 0xC0) === 0x80) {\r\n\t\treturn continuationByte & 0x3F;\r\n\t} else {\r\n\t\tthrow Error('Invalid continuation byte');\r\n\t}\r\n}\r\n\r\nexport function decodeString(value: Uint8Array): string {\r\n\tlet result = '';\r\n\r\n\tfor (let i = 0; i < value.length;) {\r\n\t\tconst byte1 = value[i++];\r\n\t\tlet code: number;\r\n\r\n\t\tif ((byte1 & 0x80) === 0) {\r\n\t\t\tcode = byte1;\r\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x1f) << 6) | byte2;\r\n\r\n\t\t\tif (code < 0x80) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tconst byte3 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x0f) << 12) | (byte2 << 6) | byte3;\r\n\r\n\t\t\tif (code < 0x0800) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\r\n\t\t\tif (code >= 0xd800 && code <= 0xdfff) {\r\n\t\t\t\tthrow Error(`Lone surrogate U+${code.toString(16).toUpperCase()} is not a scalar value`);\r\n\t\t\t}\r\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tconst byte3 = continuationByte(value, i++);\r\n\t\t\tconst byte4 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x0f) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\r\n\r\n\t\t\tif (code < 0x010000 || code > 0x10ffff) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid UTF-8 detected');\r\n\t\t}\r\n\r\n\t\tif (code > 0xffff) {\r\n\t\t\tcode -= 0x10000;\r\n\t\t\tresult += String.fromCharCode(code >>> 10 & 0x3ff | 0xd800);\r\n\t\t\tcode = 0xdc00 | code & 0x3ff;\r\n\t\t}\r\n\r\n\t\tresult += String.fromCharCode(code);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","import { createEnum } from './helpers';\r\nimport {\r\n\tAntiAlias, BevelDirection, BevelStyle, BevelTechnique, BlendMode, GlowSource, GlowTechnique, GradientStyle,\r\n\tLineAlignment, LineCapType, LineJoinType, Orientation, TextGridding, Units, UnitsValue, WarpStyle\r\n} from './psd';\r\nimport {\r\n\tPsdReader, readSignature, readUnicodeString, readUint32, readUint8, readFloat64,\r\n\treadBytes, readAsciiString, readInt32, readFloat32, readInt32LE, readUnicodeStringWithLength\r\n} from './psdReader';\r\nimport {\r\n\tPsdWriter, writeSignature, writeBytes, writeUint32, writeFloat64, writeUint8,\r\n\twriteUnicodeStringWithPadding, writeInt32, writeFloat32\r\n} from './psdWriter';\r\n\r\ninterface Dict { [key: string]: string; }\r\ninterface NameClassID { name: string; classID: string; }\r\ninterface ExtTypeDict { [key: string]: NameClassID; }\r\n\r\nfunction revMap(map: Dict) {\r\n\tconst result: Dict = {};\r\n\tObject.keys(map).forEach(key => result[map[key]] = key);\r\n\treturn result;\r\n}\r\n\r\nconst unitsMap: Dict = {\r\n\t'#Ang': 'Angle',\r\n\t'#Rsl': 'Density',\r\n\t'#Rlt': 'Distance',\r\n\t'#Nne': 'None',\r\n\t'#Prc': 'Percent',\r\n\t'#Pxl': 'Pixels',\r\n\t'#Mlm': 'Millimeters',\r\n\t'#Pnt': 'Points',\r\n\t'RrPi': 'Picas',\r\n\t'RrIn': 'Inches',\r\n\t'RrCm': 'Centimeters',\r\n};\r\n\r\nconst unitsMapRev = revMap(unitsMap);\r\nlet logErrors = false;\r\n\r\nexport function setLogErrors(value: boolean) {\r\n\tlogErrors = value;\r\n}\r\n\r\nfunction makeType(name: string, classID: string) {\r\n\treturn { name, classID };\r\n}\r\n\r\nconst fieldToExtType: ExtTypeDict = {\r\n\tstrokeStyleContent: makeType('', 'solidColorLayer'),\r\n\t// printProofSetup: makeType('校样设置', 'proofSetup'), // TESTING\r\n\tprintProofSetup: makeType('Proof Setup', 'proofSetup'),\r\n\tpatternFill: makeType('', 'patternFill'),\r\n\tGrad: makeType('Gradient', 'Grdn'),\r\n\tebbl: makeType('', 'ebbl'),\r\n\tSoFi: makeType('', 'SoFi'),\r\n\tGrFl: makeType('', 'GrFl'),\r\n\tsdwC: makeType('', 'RGBC'),\r\n\thglC: makeType('', 'RGBC'),\r\n\t'Clr ': makeType('', 'RGBC'),\r\n\t'tintColor': makeType('', 'RGBC'),\r\n\tOfst: makeType('', 'Pnt '),\r\n\tChFX: makeType('', 'ChFX'),\r\n\tMpgS: makeType('', 'ShpC'),\r\n\tDrSh: makeType('', 'DrSh'),\r\n\tIrSh: makeType('', 'IrSh'),\r\n\tOrGl: makeType('', 'OrGl'),\r\n\tIrGl: makeType('', 'IrGl'),\r\n\tTrnS: makeType('', 'ShpC'),\r\n\tPtrn: makeType('', 'Ptrn'),\r\n\tFrFX: makeType('', 'FrFX'),\r\n\tphase: makeType('', 'Pnt '),\r\n\tframeStep: makeType('', 'null'),\r\n\tduration: makeType('', 'null'),\r\n\tbounds: makeType('', 'Rctn'),\r\n\tcustomEnvelopeWarp: makeType('', 'customEnvelopeWarp'),\r\n\twarp: makeType('', 'warp'),\r\n\t'Sz  ': makeType('', 'Pnt '),\r\n\torigin: makeType('', 'Pnt '),\r\n\tautoExpandOffset: makeType('', 'Pnt '),\r\n\tkeyOriginShapeBBox: makeType('', 'unitRect'),\r\n\tVrsn: makeType('', 'null'),\r\n\tpsVersion: makeType('', 'null'),\r\n\tdocDefaultNewArtboardBackgroundColor: makeType('', 'RGBC'),\r\n\tartboardRect: makeType('', 'classFloatRect'),\r\n\tkeyOriginRRectRadii: makeType('', 'radii'),\r\n\tcompInfo: makeType('', 'null'),\r\n\tgeneratorSettings: makeType('', 'null'),\r\n};\r\n\r\nconst fieldToArrayExtType: ExtTypeDict = {\r\n\t'Crv ': makeType('', 'CrPt'),\r\n\t'Clrs': makeType('', 'Clrt'),\r\n\t'Trns': makeType('', 'TrnS'),\r\n\t'keyDescriptorList': makeType('', 'null'),\r\n};\r\n\r\nconst typeToField: { [key: string]: string[]; } = {\r\n\t'TEXT': [\r\n\t\t'Txt ', 'printerName', 'Nm  ', 'Idnt', 'blackAndWhitePresetFileName', 'LUT3DFileName',\r\n\t\t'presetFileName', 'curvesPresetFileName', 'mixerPresetFileName', 'placed', 'description', 'reason',\r\n\t\t'artboardPresetName',\r\n\t],\r\n\t'tdta': ['EngineData', 'LUT3DFileData'],\r\n\t'long': [\r\n\t\t'TextIndex', 'RndS', 'Mdpn', 'Smth', 'Lctn', 'strokeStyleVersion', 'LaID', 'Vrsn', 'Cnt ',\r\n\t\t'Brgh', 'Cntr', 'means', 'vibrance', 'Strt', 'bwPresetKind', 'presetKind', 'comp', 'compID', 'originalCompID',\r\n\t\t'curvesPresetKind', 'mixerPresetKind', 'uOrder', 'vOrder', 'PgNm', 'totalPages', 'Crop',\r\n\t\t'numerator', 'denominator', 'frameCount', 'Annt', 'keyOriginType', 'unitValueQuadVersion',\r\n\t\t'keyOriginIndex', 'major', 'minor', 'fix', 'docDefaultNewArtboardBackgroundType', 'artboardBackgroundType',\r\n\t],\r\n\t'enum': [\r\n\t\t'textGridding', 'Ornt', 'warpStyle', 'warpRotate', 'Inte', 'Bltn', 'ClrS',\r\n\t\t'sdwM', 'hglM', 'bvlT', 'bvlS', 'bvlD', 'Md  ', 'glwS', 'GrdF', 'GlwT',\r\n\t\t'strokeStyleLineCapType', 'strokeStyleLineJoinType', 'strokeStyleLineAlignment',\r\n\t\t'strokeStyleBlendMode', 'PntT', 'Styl', 'lookupType', 'LUTFormat', 'dataOrder',\r\n\t\t'tableOrder', 'enableCompCore', 'enableCompCoreGPU', 'compCoreSupport', 'compCoreGPUSupport', 'Engn',\r\n\t],\r\n\t'bool': [\r\n\t\t'PstS', 'printSixteenBit', 'masterFXSwitch', 'enab', 'uglg', 'antialiasGloss',\r\n\t\t'useShape', 'useTexture', 'masterFXSwitch', 'uglg', 'antialiasGloss', 'useShape',\r\n\t\t'useTexture', 'Algn', 'Rvrs', 'Dthr', 'Invr', 'VctC', 'ShTr', 'layerConceals',\r\n\t\t'strokeEnabled', 'fillEnabled', 'strokeStyleScaleLock', 'strokeStyleStrokeAdjust',\r\n\t\t'hardProof', 'MpBl', 'paperWhite', 'useLegacy', 'Auto', 'Lab ', 'useTint', 'keyShapeInvalidated',\r\n\t\t'autoExpandEnabled', 'autoNestEnabled', 'autoPositionEnabled', 'shrinkwrapOnSaveEnabled',\r\n\t],\r\n\t'doub': [\r\n\t\t'warpValue', 'warpPerspective', 'warpPerspectiveOther', 'Intr', 'Wdth', 'Hght',\r\n\t\t'strokeStyleMiterLimit', 'strokeStyleResolution', 'layerTime', 'keyOriginResolution',\r\n\t],\r\n\t'UntF': [\r\n\t\t'Scl ', 'sdwO', 'hglO', 'lagl', 'Lald', 'srgR', 'blur', 'Sftn', 'Opct', 'Dstn', 'Angl',\r\n\t\t'Ckmt', 'Nose', 'Inpr', 'ShdN', 'strokeStyleLineWidth', 'strokeStyleLineDashOffset',\r\n\t\t'strokeStyleOpacity', 'H   ', 'Top ', 'Left', 'Btom', 'Rght', 'Rslt',\r\n\t\t'topRight', 'topLeft', 'bottomLeft', 'bottomRight',\r\n\t],\r\n\t'VlLs': [\r\n\t\t'Crv ', 'Clrs', 'Mnm ', 'Mxm ', 'Trns', 'pathList', 'strokeStyleLineDashSet', 'FrLs',\r\n\t\t'LaSt', 'Trnf', 'nonAffineTransform', 'keyDescriptorList', 'guideIndeces',\r\n\t],\r\n\t'ObAr': ['meshPoints'],\r\n};\r\n\r\nconst channels = [\r\n\t'Rd  ', 'Grn ', 'Bl  ', 'Yllw', 'Ylw ', 'Cyn ', 'Mgnt', 'Blck', 'Gry ', 'Lmnc', 'A   ', 'B   ',\r\n];\r\n\r\nconst fieldToArrayType: Dict = {\r\n\t'Mnm ': 'long',\r\n\t'Mxm ': 'long',\r\n\t'FrLs': 'long',\r\n\t'strokeStyleLineDashSet': 'UntF',\r\n\t'Trnf': 'doub',\r\n\t'nonAffineTransform': 'doub',\r\n\t'keyDescriptorList': 'Objc',\r\n};\r\n\r\nconst fieldToType: Dict = {};\r\n\r\nfor (const type of Object.keys(typeToField)) {\r\n\tfor (const field of typeToField[type]) {\r\n\t\tfieldToType[field] = type;\r\n\t}\r\n}\r\n\r\nfor (const field of Object.keys(fieldToExtType)) {\r\n\tfieldToType[field] = 'Objc';\r\n}\r\n\r\nfor (const field of Object.keys(fieldToArrayExtType)) {\r\n\tfieldToArrayType[field] = 'Objc';\r\n}\r\n\r\nfunction getTypeByKey(key: string, value: any, root: string) {\r\n\tif (key === 'Sz  ') {\r\n\t\treturn ('Wdth' in value) ? 'Objc' : (('units' in value) ? 'UntF' : 'doub');\r\n\t} else if (key === 'Type') {\r\n\t\treturn typeof value === 'string' ? 'enum' : 'long';\r\n\t} else if (key === 'AntA') {\r\n\t\treturn typeof value === 'string' ? 'enum' : 'bool';\r\n\t} else if (key === 'Hrzn' || key === 'Vrtc' || key === 'Top ' || key === 'Left' || key === 'Btom' || key === 'Rght') {\r\n\t\treturn typeof value === 'number' ? 'doub' : 'UntF';\r\n\t} else if (key === 'Vrsn') {\r\n\t\treturn typeof value === 'number' ? 'long' : 'Objc';\r\n\t} else if (key === 'Rd  ' || key === 'Grn ' || key === 'Bl  ') {\r\n\t\treturn root === 'artd' ? 'long' : 'doub';\r\n\t} else {\r\n\t\treturn fieldToType[key];\r\n\t}\r\n}\r\n\r\nexport function readAsciiStringOrClassId(reader: PsdReader) {\r\n\tconst length = readInt32(reader);\r\n\treturn readAsciiString(reader, length || 4);\r\n}\r\n\r\nfunction writeAsciiStringOrClassId(writer: PsdWriter, value: string) {\r\n\tif (value.length === 4 && value !== 'warp') {\r\n\t\t// write classId\r\n\t\twriteInt32(writer, 0);\r\n\t\twriteSignature(writer, value);\r\n\t} else {\r\n\t\t// write ascii string\r\n\t\twriteInt32(writer, value.length);\r\n\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\twriteUint8(writer, value.charCodeAt(i));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function readDescriptorStructure(reader: PsdReader) {\r\n\tconst object: any = {};\r\n\t// object.__struct =\r\n\treadClassStructure(reader);\r\n\tconst itemsCount = readUint32(reader);\r\n\r\n\tfor (let i = 0; i < itemsCount; i++) {\r\n\t\tconst key = readAsciiStringOrClassId(reader);\r\n\t\tconst type = readSignature(reader);\r\n\t\t// console.log(`> '${key}' '${type}'`);\r\n\t\tconst data = readOSType(reader, type);\r\n\t\t// if (!getTypeByKey(key, data)) console.log(`> '${key}' '${type}'`, data);\r\n\t\tobject[key] = data;\r\n\t}\r\n\t// console.log('//', struct);\r\n\treturn object;\r\n}\r\n\r\nexport function writeDescriptorStructure(writer: PsdWriter, name: string, classId: string, value: any, root: string) {\r\n\tif (logErrors && !classId) console.log('Missing classId for: ', name, classId, value);\r\n\r\n\t// write class structure\r\n\twriteUnicodeStringWithPadding(writer, name);\r\n\twriteAsciiStringOrClassId(writer, classId);\r\n\r\n\tconst keys = Object.keys(value);\r\n\twriteUint32(writer, keys.length);\r\n\r\n\tfor (const key of keys) {\r\n\t\tlet type = getTypeByKey(key, value[key], root);\r\n\t\tlet extType = fieldToExtType[key];\r\n\r\n\t\tif ((key === 'Strt' || key === 'Brgh') && 'H   ' in value) {\r\n\t\t\ttype = 'doub';\r\n\t\t} else if (channels.indexOf(key) !== -1) {\r\n\t\t\ttype = (classId === 'RGBC' && root !== 'artd') ? 'doub' : 'long';\r\n\t\t} else if (key === 'profile') {\r\n\t\t\ttype = classId === 'printOutput' ? 'TEXT' : 'tdta';\r\n\t\t} else if (key === 'strokeStyleContent') {\r\n\t\t\tif (value[key]['Clr ']) {\r\n\t\t\t\textType = makeType('', 'solidColorLayer');\r\n\t\t\t} else if (value[key].Grad) {\r\n\t\t\t\textType = makeType('', 'gradientLayer');\r\n\t\t\t} else if (value[key].Ptrn) {\r\n\t\t\t\textType = makeType('', 'patternLayer');\r\n\t\t\t} else {\r\n\t\t\t\tlogErrors && console.log('Invalid strokeStyleContent value', value[key]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (extType && extType.classID === 'RGBC') {\r\n\t\t\tif ('H   ' in value[key]) extType = { classID: 'HSBC', name: '' };\r\n\t\t\t// TODO: other color spaces\r\n\t\t}\r\n\r\n\t\twriteAsciiStringOrClassId(writer, key);\r\n\t\twriteSignature(writer, type || 'long');\r\n\t\twriteOSType(writer, type || 'long', value[key], key, extType, root);\r\n\t\tif (logErrors && !type) console.log(`Missing descriptor field type for: '${key}' in`, value);\r\n\t}\r\n}\r\n\r\nfunction readOSType(reader: PsdReader, type: string) {\r\n\tswitch (type) {\r\n\t\tcase 'obj ': // Reference\r\n\t\t\treturn readReferenceStructure(reader);\r\n\t\tcase 'Objc': // Descriptor\r\n\t\tcase 'GlbO': // GlobalObject same as Descriptor\r\n\t\t\treturn readDescriptorStructure(reader);\r\n\t\tcase 'VlLs': { // List\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\tconst items: any[] = [];\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst type = readSignature(reader);\r\n\t\t\t\t// console.log('  >', type);\r\n\t\t\t\titems.push(readOSType(reader, type));\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tcase 'doub': // Double\r\n\t\t\treturn readFloat64(reader);\r\n\t\tcase 'UntF': { // Unit double\r\n\t\t\tconst units = readSignature(reader);\r\n\t\t\tconst value = readFloat64(reader);\r\n\t\t\tif (!unitsMap[units]) throw new Error(`Invalid units: ${units}`);\r\n\t\t\treturn { units: unitsMap[units], value };\r\n\t\t}\r\n\t\tcase 'UnFl': { // Unit float\r\n\t\t\tconst units = readSignature(reader);\r\n\t\t\tconst value = readFloat32(reader);\r\n\t\t\tif (!unitsMap[units]) throw new Error(`Invalid units: ${units}`);\r\n\t\t\treturn { units: unitsMap[units], value };\r\n\t\t}\r\n\t\tcase 'TEXT': // String\r\n\t\t\treturn readUnicodeString(reader);\r\n\t\tcase 'enum': { // Enumerated\r\n\t\t\tconst type = readAsciiStringOrClassId(reader);\r\n\t\t\tconst value = readAsciiStringOrClassId(reader);\r\n\t\t\treturn `${type}.${value}`;\r\n\t\t}\r\n\t\tcase 'long': // Integer\r\n\t\t\treturn readInt32(reader);\r\n\t\tcase 'comp': { // Large Integer\r\n\t\t\tconst low = readUint32(reader);\r\n\t\t\tconst high = readUint32(reader);\r\n\t\t\treturn { low, high };\r\n\t\t}\r\n\t\tcase 'bool': // Boolean\r\n\t\t\treturn !!readUint8(reader);\r\n\t\tcase 'type': // Class\r\n\t\tcase 'GlbC': // Class\r\n\t\t\treturn readClassStructure(reader);\r\n\t\tcase 'alis': { // Alias\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\treturn readAsciiString(reader, length);\r\n\t\t}\r\n\t\tcase 'tdta': { // Raw Data\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\treturn readBytes(reader, length);\r\n\t\t}\r\n\t\tcase 'ObAr': { // Object array\r\n\t\t\treadInt32(reader); // version: 16\r\n\t\t\treadUnicodeString(reader); // name: ''\r\n\t\t\treadAsciiStringOrClassId(reader); // 'rationalPoint'\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\tconst items: any[] = [];\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst type1 = readAsciiStringOrClassId(reader); // type Hrzn | Vrtc\r\n\t\t\t\treadSignature(reader); // UnFl\r\n\r\n\t\t\t\treadSignature(reader); // units ? '#Pxl'\r\n\t\t\t\tconst valuesCount = readInt32(reader);\r\n\t\t\t\tconst values: number[] = [];\r\n\t\t\t\tfor (let j = 0; j < valuesCount; j++) {\r\n\t\t\t\t\tvalues.push(readFloat64(reader));\r\n\t\t\t\t}\r\n\r\n\t\t\t\titems.push({ type: type1, values });\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tcase 'Pth ': { // File path\r\n\t\t\t/*const length =*/ readInt32(reader);\r\n\t\t\tconst sig = readSignature(reader);\r\n\t\t\t/*const pathSize =*/ readInt32LE(reader);\r\n\t\t\tconst charsCount = readInt32LE(reader);\r\n\t\t\tconst path = readUnicodeStringWithLength(reader, charsCount);\r\n\t\t\treturn { sig, path };\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Invalid TySh descriptor OSType: ${type} at ${reader.offset.toString(16)}`);\r\n\t}\r\n}\r\n\r\nfunction writeOSType(writer: PsdWriter, type: string, value: any, key: string, extType: NameClassID | undefined, root: string) {\r\n\tswitch (type) {\r\n\t\t// case 'obj ': // Reference\r\n\t\t// \twriteReferenceStructure(reader);\r\n\t\tcase 'Objc': // Descriptor\r\n\t\tcase 'GlbO': // GlobalObject same as Descriptor\r\n\t\t\tif (!extType) throw new Error(`Missing ext type for: '${key}' (${JSON.stringify(value)})`);\r\n\t\t\twriteDescriptorStructure(writer, extType.name, extType.classID, value, root);\r\n\t\t\tbreak;\r\n\t\tcase 'VlLs': // List\r\n\t\t\twriteInt32(writer, value.length);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\tconst type = fieldToArrayType[key];\r\n\t\t\t\twriteSignature(writer, type || 'long');\r\n\t\t\t\twriteOSType(writer, type || 'long', value[i], '', fieldToArrayExtType[key], root);\r\n\t\t\t\tif (logErrors && !type) console.log(`Missing descriptor array type for: '${key}' in`, value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'doub': // Double\r\n\t\t\twriteFloat64(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'UntF': // Unit double\r\n\t\t\tif (!unitsMapRev[value.units]) throw new Error(`Invalid units: ${value.units} in ${key}`);\r\n\t\t\twriteSignature(writer, unitsMapRev[value.units]);\r\n\t\t\twriteFloat64(writer, value.value);\r\n\t\t\tbreak;\r\n\t\tcase 'UnFl': // Unit float\r\n\t\t\tif (!unitsMapRev[value.units]) throw new Error(`Invalid units: ${value.units} in ${key}`);\r\n\t\t\twriteSignature(writer, unitsMapRev[value.units]);\r\n\t\t\twriteFloat32(writer, value.value);\r\n\t\t\tbreak;\r\n\t\tcase 'TEXT': // String\r\n\t\t\twriteUnicodeStringWithPadding(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'enum': { // Enumerated\r\n\t\t\tconst [_type, val] = value.split('.');\r\n\t\t\twriteAsciiStringOrClassId(writer, _type);\r\n\t\t\twriteAsciiStringOrClassId(writer, val);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'long': // Integer\r\n\t\t\twriteInt32(writer, value);\r\n\t\t\tbreak;\r\n\t\t// case 'comp': // Large Integer\r\n\t\t// \twriteLargeInteger(reader);\r\n\t\tcase 'bool': // Boolean\r\n\t\t\twriteUint8(writer, value ? 1 : 0);\r\n\t\t\tbreak;\r\n\t\t// case 'type': // Class\r\n\t\t// case 'GlbC': // Class\r\n\t\t// \twriteClassStructure(reader);\r\n\t\t// case 'alis': // Alias\r\n\t\t// \twriteAliasStructure(reader);\r\n\t\tcase 'tdta': // Raw Data\r\n\t\t\twriteInt32(writer, value.byteLength);\r\n\t\t\twriteBytes(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'ObAr': // Object array\r\n\t\t\twriteInt32(writer, 16); // version\r\n\t\t\twriteUnicodeStringWithPadding(writer, ''); // name\r\n\t\t\twriteAsciiStringOrClassId(writer, 'rationalPoint');\r\n\t\t\twriteInt32(writer, value.length);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\twriteAsciiStringOrClassId(writer, value[i].type); // Hrzn | Vrtc\r\n\t\t\t\twriteSignature(writer, 'UnFl');\r\n\t\t\t\twriteSignature(writer, '#Pxl');\r\n\t\t\t\twriteInt32(writer, value[i].values.length);\r\n\r\n\t\t\t\tfor (let j = 0; j < value[i].values.length; j++) {\r\n\t\t\t\t\twriteFloat64(writer, value[i].values[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t// case 'Pth ': // File path\r\n\t\t// \twriteFilePath(reader);\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Not implemented TySh descriptor OSType: ${type}`);\r\n\t}\r\n}\r\n\r\nfunction readReferenceStructure(reader: PsdReader) {\r\n\tconst itemsCount = readInt32(reader);\r\n\tconst items: any[] = [];\r\n\r\n\tfor (let i = 0; i < itemsCount; i++) {\r\n\t\tconst type = readSignature(reader);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'prop': { // Property\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst keyID = readAsciiStringOrClassId(reader);\r\n\t\t\t\titems.push({ name, classID, keyID });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Clss': // Class\r\n\t\t\t\titems.push(readClassStructure(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Enmr': { // Enumerated Reference\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst TypeID = readAsciiStringOrClassId(reader);\r\n\t\t\t\tconst value = readAsciiStringOrClassId(reader);\r\n\t\t\t\titems.push({ name, classID, TypeID, value });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'rele': { // Offset\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst value = readUint32(reader);\r\n\t\t\t\titems.push({ name, classID, value });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Idnt': // Identifier\r\n\t\t\t\titems.push(readInt32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'indx': // Index\r\n\t\t\t\titems.push(readInt32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'name': // Name\r\n\t\t\t\titems.push(readUnicodeString(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid TySh descriptor Reference type: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn items;\r\n}\r\n\r\nfunction readClassStructure(reader: PsdReader) {\r\n\tconst name = readUnicodeString(reader);\r\n\tconst classID = readAsciiStringOrClassId(reader);\r\n\t// console.log({ name, classID });\r\n\treturn { name, classID };\r\n}\r\n\r\nexport function readVersionAndDescriptor(reader: PsdReader) {\r\n\tif (readUint32(reader) !== 16) throw new Error('Invalid descriptor version');\r\n\treturn readDescriptorStructure(reader);\r\n}\r\n\r\nexport function writeVersionAndDescriptor(writer: PsdWriter, name: string, classID: string, descriptor: any, root = '') {\r\n\twriteUint32(writer, 16); // version\r\n\twriteDescriptorStructure(writer, name, classID, descriptor, root);\r\n}\r\n\r\nexport type DescriptorUnits = 'Angle' | 'Density' | 'Distance' | 'None' | 'Percent' | 'Pixels' |\r\n\t'Millimeters' | 'Points' | 'Picas' | 'Inches' | 'Centimeters';\r\n\r\nexport interface DescriptorUnitsValue {\r\n\tunits: DescriptorUnits;\r\n\tvalue: number;\r\n}\r\n\r\nexport type DescriptorColor = {\r\n\t'Rd  ': number;\r\n\t'Grn ': number;\r\n\t'Bl  ': number;\r\n} | {\r\n\t'H   ': DescriptorUnitsValue;\r\n\tStrt: number;\r\n\tBrgh: number;\r\n} | {\r\n\t'Cyn ': number;\r\n\tMgnt: number;\r\n\t'Ylw ': number;\r\n\tBlck: number;\r\n} | {\r\n\t'Gry ': number;\r\n} | {\r\n\tLmnc: number;\r\n\t'A   ': number;\r\n\t'B   ': number;\r\n};\r\n\r\nexport interface DesciptorPattern {\r\n\t'Nm  ': string;\r\n\tIdnt: string;\r\n}\r\n\r\nexport type DesciptorGradient = {\r\n\t'Nm  ': string;\r\n\tGrdF: 'GrdF.CstS';\r\n\tIntr: number;\r\n\tClrs: {\r\n\t\t'Clr ': DescriptorColor;\r\n\t\tType: 'Clry.UsrS';\r\n\t\tLctn: number;\r\n\t\tMdpn: number;\r\n\t}[];\r\n\tTrns: {\r\n\t\tOpct: DescriptorUnitsValue;\r\n\t\tLctn: number;\r\n\t\tMdpn: number;\r\n\t}[];\r\n} | {\r\n\tGrdF: 'GrdF.ClNs';\r\n\tSmth: number;\r\n\t'Nm  ': string;\r\n\tClrS: string;\r\n\tRndS: number;\r\n\tVctC?: boolean;\r\n\tShTr?: boolean;\r\n\t'Mnm ': number[];\r\n\t'Mxm ': number[];\r\n};\r\n\r\nexport interface DescriptorColorContent {\r\n\t'Clr ': DescriptorColor;\r\n}\r\n\r\nexport interface DescriptorGradientContent {\r\n\tGrad: DesciptorGradient;\r\n\tType: string;\r\n\tDthr?: boolean;\r\n\tRvrs?: boolean;\r\n\tAngl?: DescriptorUnitsValue;\r\n\t'Scl '?: DescriptorUnitsValue;\r\n\tAlgn?: boolean;\r\n\tOfst?: { Hrzn: DescriptorUnitsValue; Vrtc: DescriptorUnitsValue; };\r\n}\r\n\r\nexport interface DescriptorPatternContent {\r\n\tPtrn: DesciptorPattern;\r\n\tLnkd?: boolean;\r\n\tphase?: { Hrzn: number; Vrtc: number; };\r\n}\r\n\r\nexport type DescriptorVectorContent = DescriptorColorContent | DescriptorGradientContent | DescriptorPatternContent;\r\n\r\nexport interface StrokeDescriptor {\r\n\tstrokeStyleVersion: number;\r\n\tstrokeEnabled: boolean;\r\n\tfillEnabled: boolean;\r\n\tstrokeStyleLineWidth: DescriptorUnitsValue;\r\n\tstrokeStyleLineDashOffset: DescriptorUnitsValue;\r\n\tstrokeStyleMiterLimit: number;\r\n\tstrokeStyleLineCapType: string;\r\n\tstrokeStyleLineJoinType: string;\r\n\tstrokeStyleLineAlignment: string;\r\n\tstrokeStyleScaleLock: boolean;\r\n\tstrokeStyleStrokeAdjust: boolean;\r\n\tstrokeStyleLineDashSet: DescriptorUnitsValue[];\r\n\tstrokeStyleBlendMode: string;\r\n\tstrokeStyleOpacity: DescriptorUnitsValue;\r\n\tstrokeStyleContent: DescriptorVectorContent;\r\n\tstrokeStyleResolution: number;\r\n}\r\n\r\nexport interface TextDescriptor {\r\n\t'Txt ': string;\r\n\ttextGridding: string;\r\n\tOrnt: string;\r\n\tAntA: string;\r\n\tTextIndex: number;\r\n\tEngineData?: Uint8Array;\r\n}\r\n\r\nexport interface WarpDescriptor {\r\n\twarpStyle: string;\r\n\twarpValue: number;\r\n\twarpPerspective: number;\r\n\twarpPerspectiveOther: number;\r\n\twarpRotate: string;\r\n\tbounds?: {\r\n\t\t'Top ': DescriptorUnitsValue;\r\n\t\tLeft: DescriptorUnitsValue;\r\n\t\tBtom: DescriptorUnitsValue;\r\n\t\tRght: DescriptorUnitsValue;\r\n\t};\r\n\tuOrder: number;\r\n\tvOrder: number;\r\n\tcustomEnvelopeWarp?: {\r\n\t\tmeshPoints: {\r\n\t\t\ttype: 'Hrzn' | 'Vrtc';\r\n\t\t\tvalues: number[];\r\n\t\t}[];\r\n\t};\r\n}\r\n\r\nexport function parseAngle(x: DescriptorUnitsValue) {\r\n\tif (x === undefined) return 0;\r\n\tif (x.units !== 'Angle') throw new Error(`Invalid units: ${x.units}`);\r\n\treturn x.value;\r\n}\r\n\r\nexport function parsePercent(x: DescriptorUnitsValue | undefined) {\r\n\tif (x === undefined) return 1;\r\n\tif (x.units !== 'Percent') throw new Error(`Invalid units: ${x.units}`);\r\n\treturn x.value / 100;\r\n}\r\n\r\nexport function parsePercentOrAngle(x: DescriptorUnitsValue | undefined) {\r\n\tif (x === undefined) return 1;\r\n\tif (x.units === 'Percent') return x.value / 100;\r\n\tif (x.units === 'Angle') return x.value / 360;\r\n\tthrow new Error(`Invalid units: ${x.units}`);\r\n}\r\n\r\nexport function parseUnits({ units, value }: DescriptorUnitsValue): UnitsValue {\r\n\tif (\r\n\t\tunits !== 'Pixels' && units !== 'Millimeters' && units !== 'Points' && units !== 'None' &&\r\n\t\tunits !== 'Picas' && units !== 'Inches' && units !== 'Centimeters' && units !== 'Density'\r\n\t) {\r\n\t\tthrow new Error(`Invalid units: ${JSON.stringify({ units, value })}`);\r\n\t}\r\n\treturn { value, units };\r\n}\r\n\r\nexport function parseUnitsOrNumber(value: DescriptorUnitsValue | number, units: Units = 'Pixels'): UnitsValue {\r\n\tif (typeof value === 'number') return { value, units };\r\n\treturn parseUnits(value);\r\n}\r\n\r\nexport function parseUnitsToNumber({ units, value }: DescriptorUnitsValue, expectedUnits: string): number {\r\n\tif (units !== expectedUnits) throw new Error(`Invalid units: ${JSON.stringify({ units, value })}`);\r\n\treturn value;\r\n}\r\n\r\nexport function unitsAngle(value: number | undefined): DescriptorUnitsValue {\r\n\treturn { units: 'Angle', value: value || 0 };\r\n}\r\n\r\nexport function unitsPercent(value: number | undefined): DescriptorUnitsValue {\r\n\treturn { units: 'Percent', value: Math.round((value || 0) * 100) };\r\n}\r\n\r\nexport function unitsValue(x: UnitsValue | undefined, key: string): DescriptorUnitsValue {\r\n\tif (x == null) return { units: 'Pixels', value: 0 };\r\n\r\n\tif (typeof x !== 'object')\r\n\t\tthrow new Error(`Invalid value: ${JSON.stringify(x)} (key: ${key}) (should have value and units)`);\r\n\r\n\tconst { units, value } = x;\r\n\r\n\tif (typeof value !== 'number')\r\n\t\tthrow new Error(`Invalid value in ${JSON.stringify(x)} (key: ${key})`);\r\n\r\n\tif (\r\n\t\tunits !== 'Pixels' && units !== 'Millimeters' && units !== 'Points' && units !== 'None' &&\r\n\t\tunits !== 'Picas' && units !== 'Inches' && units !== 'Centimeters' && units !== 'Density'\r\n\t) {\r\n\t\tthrow new Error(`Invalid units in ${JSON.stringify(x)} (key: ${key})`);\r\n\t}\r\n\r\n\treturn { units, value };\r\n}\r\n\r\nexport const textGridding = createEnum<TextGridding>('textGridding', 'none', {\r\n\tnone: 'None',\r\n});\r\n\r\nexport const Ornt = createEnum<Orientation>('Ornt', 'horizontal', {\r\n\thorizontal: 'Hrzn',\r\n\tvertical: 'Vrtc',\r\n});\r\n\r\nexport const Annt = createEnum<AntiAlias>('Annt', 'sharp', {\r\n\tnone: 'Anno',\r\n\tsharp: 'antiAliasSharp',\r\n\tcrisp: 'AnCr',\r\n\tstrong: 'AnSt',\r\n\tsmooth: 'AnSm',\r\n});\r\n\r\nexport const warpStyle = createEnum<WarpStyle>('warpStyle', 'none', {\r\n\tnone: 'warpNone',\r\n\tarc: 'warpArc',\r\n\tarcLower: 'warpArcLower',\r\n\tarcUpper: 'warpArcUpper',\r\n\tarch: 'warpArch',\r\n\tbulge: 'warpBulge',\r\n\tshellLower: 'warpShellLower',\r\n\tshellUpper: 'warpShellUpper',\r\n\tflag: 'warpFlag',\r\n\twave: 'warpWave',\r\n\tfish: 'warpFish',\r\n\trise: 'warpRise',\r\n\tfisheye: 'warpFisheye',\r\n\tinflate: 'warpInflate',\r\n\tsqueeze: 'warpSqueeze',\r\n\ttwist: 'warpTwist',\r\n\tcustom: 'warpCustom',\r\n});\r\n\r\nexport const BlnM = createEnum<BlendMode>('BlnM', 'normal', {\r\n\t'normal': 'Nrml',\r\n\t'dissolve': 'Dslv',\r\n\t'darken': 'Drkn',\r\n\t'multiply': 'Mltp',\r\n\t'color burn': 'CBrn',\r\n\t'linear burn': 'linearBurn',\r\n\t'darker color': 'darkerColor',\r\n\t'lighten': 'Lghn',\r\n\t'screen': 'Scrn',\r\n\t'color dodge': 'CDdg',\r\n\t'linear dodge': 'linearDodge',\r\n\t'lighter color': 'lighterColor',\r\n\t'overlay': 'Ovrl',\r\n\t'soft light': 'SftL',\r\n\t'hard light': 'HrdL',\r\n\t'vivid light': 'vividLight',\r\n\t'linear light': 'linearLight',\r\n\t'pin light': 'pinLight',\r\n\t'hard mix': 'hardMix',\r\n\t'difference': 'Dfrn',\r\n\t'exclusion': 'Xclu',\r\n\t'subtract': 'blendSubtraction',\r\n\t'divide': 'blendDivide',\r\n\t'hue': 'H   ',\r\n\t'saturation': 'Strt',\r\n\t'color': 'Clr ',\r\n\t'luminosity': 'Lmns',\r\n});\r\n\r\nexport const BESl = createEnum<BevelStyle>('BESl', 'inner bevel', {\r\n\t'inner bevel': 'InrB',\r\n\t'outer bevel': 'OtrB',\r\n\t'emboss': 'Embs',\r\n\t'pillow emboss': 'PlEb',\r\n\t'stroke emboss': 'strokeEmboss',\r\n});\r\n\r\nexport const bvlT = createEnum<BevelTechnique>('bvlT', 'smooth', {\r\n\t'smooth': 'SfBL',\r\n\t'chisel hard': 'PrBL',\r\n\t'chisel soft': 'Slmt',\r\n});\r\n\r\nexport const BESs = createEnum<BevelDirection>('BESs', 'up', {\r\n\tup: 'In  ',\r\n\tdown: 'Out ',\r\n});\r\n\r\nexport const BETE = createEnum<GlowTechnique>('BETE', 'softer', {\r\n\tsofter: 'SfBL',\r\n\tprecise: 'PrBL',\r\n});\r\n\r\nexport const IGSr = createEnum<GlowSource>('IGSr', 'edge', {\r\n\tedge: 'SrcE',\r\n\tcenter: 'SrcC',\r\n});\r\n\r\nexport const GrdT = createEnum<GradientStyle>('GrdT', 'linear', {\r\n\tlinear: 'Lnr ',\r\n\tradial: 'Rdl ',\r\n\tangle: 'Angl',\r\n\treflected: 'Rflc',\r\n\tdiamond: 'Dmnd',\r\n});\r\n\r\nexport const ClrS = createEnum<'rgb' | 'hsb' | 'lab'>('ClrS', 'rgb', {\r\n\trgb: 'RGBC',\r\n\thsb: 'HSBl',\r\n\tlab: 'LbCl',\r\n});\r\n\r\nexport const FStl = createEnum<'inside' | 'center' | 'outside'>('FStl', 'outside', {\r\n\toutside: 'OutF',\r\n\tcenter: 'CtrF',\r\n\tinside: 'InsF'\r\n});\r\n\r\nexport const FrFl = createEnum<'color' | 'gradient' | 'pattern'>('FrFl', 'color', {\r\n\tcolor: 'SClr',\r\n\tgradient: 'GrFl',\r\n\tpattern: 'Ptrn',\r\n});\r\n\r\nexport const strokeStyleLineCapType = createEnum<LineCapType>('strokeStyleLineCapType', 'butt', {\r\n\tbutt: 'strokeStyleButtCap',\r\n\tround: 'strokeStyleRoundCap',\r\n\tsquare: 'strokeStyleSquareCap',\r\n});\r\n\r\nexport const strokeStyleLineJoinType = createEnum<LineJoinType>('strokeStyleLineJoinType', 'miter', {\r\n\tmiter: 'strokeStyleMiterJoin',\r\n\tround: 'strokeStyleRoundJoin',\r\n\tbevel: 'strokeStyleBevelJoin',\r\n});\r\n\r\nexport const strokeStyleLineAlignment = createEnum<LineAlignment>('strokeStyleLineAlignment', 'inside', {\r\n\tinside: 'strokeStyleAlignInside',\r\n\tcenter: 'strokeStyleAlignCenter',\r\n\toutside: 'strokeStyleAlignOutside',\r\n});\r\n","function isWhitespace(char: number) {\r\n\t// ' ', '\\n', '\\r', '\\t'\r\n\treturn char === 32 || char === 10 || char === 13 || char === 9;\r\n}\r\n\r\nfunction isNumber(char: number) {\r\n\t// 0123456789.-\r\n\treturn (char >= 48 && char <= 57) || char === 46 || char === 45;\r\n}\r\n\r\nexport function parseEngineData(data: number[] | Uint8Array) {\r\n\tlet index = 0;\r\n\r\n\tfunction skipWhitespace() {\r\n\t\twhile (index < data.length && isWhitespace(data[index])) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getTextByte() {\r\n\t\tlet byte = data[index];\r\n\t\tindex++;\r\n\r\n\t\tif (byte === 92) { // \\\r\n\t\t\tbyte = data[index];\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn byte;\r\n\t}\r\n\r\n\tfunction getText() {\r\n\t\tlet result = '';\r\n\r\n\t\tif (data[index] === 41) { // )\r\n\t\t\tindex++;\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t// Strings start with utf-16 BOM\r\n\t\tif (data[index] !== 0xFE || data[index + 1] !== 0xFF) {\r\n\t\t\tthrow new Error('Invalid utf-16 BOM');\r\n\t\t}\r\n\r\n\t\tindex += 2;\r\n\r\n\t\t// ), ( and \\ characters are escaped in ascii manner, remove the escapes before interpreting\r\n\t\t// the bytes as utf-16\r\n\t\twhile (index < data.length && data[index] !== 41) { // )\r\n\t\t\tconst high = getTextByte();\r\n\t\t\tconst low = getTextByte();\r\n\t\t\tconst char = (high << 8) | low;\r\n\t\t\tresult += String.fromCharCode(char);\r\n\t\t}\r\n\r\n\t\tindex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tlet root: any = null;\r\n\tconst stack: any[] = [];\r\n\r\n\tfunction pushContainer(value: any) {\r\n\t\tif (!stack.length) {\r\n\t\t\tstack.push(value);\r\n\t\t\troot = value;\r\n\t\t} else {\r\n\t\t\tpushValue(value);\r\n\t\t\tstack.push(value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pushValue(value: any) {\r\n\t\tif (!stack.length) throw new Error('Invalid data');\r\n\r\n\t\tconst top = stack[stack.length - 1];\r\n\r\n\t\tif (typeof top === 'string') {\r\n\t\t\tstack[stack.length - 2][top] = value;\r\n\t\t\tpop();\r\n\t\t} else if (Array.isArray(top)) {\r\n\t\t\ttop.push(value);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid data');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pushProperty(name: string) {\r\n\t\tif (!stack.length) pushContainer({});\r\n\r\n\t\tconst top = stack[stack.length - 1];\r\n\r\n\t\tif (top && typeof top === 'string') {\r\n\t\t\tif (name === 'nil') {\r\n\t\t\t\tpushValue(null);\r\n\t\t\t} else {\r\n\t\t\t\tpushValue(`/${name}`);\r\n\t\t\t}\r\n\t\t} else if (top && typeof top === 'object') {\r\n\t\t\tstack.push(name);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid data');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pop() {\r\n\t\tif (!stack.length) throw new Error('Invalid data');\r\n\t\tstack.pop();\r\n\t}\r\n\r\n\tskipWhitespace();\r\n\r\n\twhile (index < data.length) {\r\n\t\tconst i = index;\r\n\t\tconst char = data[i];\r\n\r\n\t\tif (char === 60 && data[i + 1] === 60) { // <<\r\n\t\t\tindex += 2;\r\n\t\t\tpushContainer({});\r\n\t\t} else if (char === 62 && data[i + 1] === 62) { // >>\r\n\t\t\tindex += 2;\r\n\t\t\tpop();\r\n\t\t} else if (char === 47) { // /\r\n\t\t\tindex += 1;\r\n\t\t\tconst start = index;\r\n\r\n\t\t\twhile (index < data.length && !isWhitespace(data[index])) {\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tlet name = '';\r\n\r\n\t\t\tfor (let i = start; i < index; i++) {\r\n\t\t\t\tname += String.fromCharCode(data[i]);\r\n\t\t\t}\r\n\r\n\t\t\tpushProperty(name);\r\n\t\t} else if (char === 40) { // (\r\n\t\t\tindex += 1;\r\n\t\t\tpushValue(getText());\r\n\t\t} else if (char === 91) { // [\r\n\t\t\tindex += 1;\r\n\t\t\tpushContainer([]);\r\n\t\t} else if (char === 93) { // ]\r\n\t\t\tindex += 1;\r\n\t\t\tpop();\r\n\t\t} else if (char === 110 && data[i + 1] === 117 && data[i + 2] === 108 && data[i + 3] === 108) { // null\r\n\t\t\tindex += 4;\r\n\t\t\tpushValue(null);\r\n\t\t} else if (char === 116 && data[i + 1] === 114 && data[i + 2] === 117 && data[i + 3] === 101) { // true\r\n\t\t\tindex += 4;\r\n\t\t\tpushValue(true);\r\n\t\t} else if (char === 102 && data[i + 1] === 97 && data[i + 2] === 108 && data[i + 3] === 115 && data[i + 4] === 101) { // false\r\n\t\t\tindex += 5;\r\n\t\t\tpushValue(false);\r\n\t\t} else if (isNumber(char)) {\r\n\t\t\tlet value = '';\r\n\r\n\t\t\twhile (index < data.length && isNumber(data[index])) {\r\n\t\t\t\tvalue += String.fromCharCode(data[index]);\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tpushValue(parseFloat(value));\r\n\t\t} else {\r\n\t\t\tindex += 1;\r\n\t\t\tconsole.log(`Invalid token ${String.fromCharCode(char)} at ${index}`);\r\n\t\t\t// ` near ${String.fromCharCode.apply(null, data.slice(index - 10, index + 20) as any)}` +\r\n\t\t\t// `data [${Array.from(data.slice(index - 10, index + 20)).join(', ')}]`\r\n\t\t}\r\n\r\n\t\tskipWhitespace();\r\n\t}\r\n\r\n\treturn root;\r\n}\r\n\r\nconst floatKeys = [\r\n\t'Axis', 'XY', 'Zone', 'WordSpacing', 'FirstLineIndent', 'GlyphSpacing', 'StartIndent', 'EndIndent', 'SpaceBefore',\r\n\t'SpaceAfter', 'LetterSpacing', 'Values', 'GridSize', 'GridLeading', 'PointBase', 'BoxBounds', 'TransformPoint0', 'TransformPoint1',\r\n\t'TransformPoint2', 'FontSize', 'Leading', 'HorizontalScale', 'VerticalScale', 'BaselineShift', 'Tsume',\r\n\t'OutlineWidth',\r\n];\r\n\r\nconst intArrays = ['RunLengthArray'];\r\n\r\n// TODO: handle /nil\r\nexport function serializeEngineData(data: any, condensed = false) {\r\n\tlet buffer = new Uint8Array(1024);\r\n\tlet offset = 0;\r\n\tlet indent = 0;\r\n\r\n\tfunction write(value: number) {\r\n\t\tif (offset >= buffer.length) {\r\n\t\t\tconst newBuffer = new Uint8Array(buffer.length * 2);\r\n\t\t\tnewBuffer.set(buffer);\r\n\t\t\tbuffer = newBuffer;\r\n\t\t}\r\n\r\n\t\tbuffer[offset] = value;\r\n\t\toffset++;\r\n\t}\r\n\r\n\tfunction writeString(value: string) {\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\twrite(value.charCodeAt(i));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction writeIndent() {\r\n\t\tif (condensed) {\r\n\t\t\twriteString(' ');\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < indent; i++) {\r\n\t\t\t\twriteString('\\t');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction writeProperty(key: string, value: any) {\r\n\t\twriteIndent();\r\n\t\twriteString(`/${key}`);\r\n\t\twriteValue(value, key, true);\r\n\t\tif (!condensed) writeString('\\n');\r\n\t}\r\n\r\n\tfunction serializeInt(value: number) {\r\n\t\treturn value.toString();\r\n\t}\r\n\r\n\tfunction serializeFloat(value: number) {\r\n\t\treturn value.toFixed(5)\r\n\t\t\t.replace(/(\\d)0+$/g, '$1')\r\n\t\t\t.replace(/^0+\\.([1-9])/g, '.$1')\r\n\t\t\t.replace(/^-0+\\.0(\\d)/g, '-.0$1');\r\n\t}\r\n\r\n\tfunction serializeNumber(value: number, key?: string) {\r\n\t\tconst isFloat = (key && floatKeys.indexOf(key) !== -1) || (value | 0) !== value;\r\n\t\treturn isFloat ? serializeFloat(value) : serializeInt(value);\r\n\t}\r\n\r\n\tfunction getKeys(value: any) {\r\n\t\tconst keys = Object.keys(value);\r\n\r\n\t\tif (keys.indexOf('98') !== -1)\r\n\t\t\tkeys.unshift(...keys.splice(keys.indexOf('99'), 1));\r\n\r\n\t\tif (keys.indexOf('99') !== -1)\r\n\t\t\tkeys.unshift(...keys.splice(keys.indexOf('99'), 1));\r\n\r\n\t\treturn keys;\r\n\t}\r\n\r\n\tfunction writeStringByte(value: number) {\r\n\t\tif (value === 40 || value === 41 || value === 92) { // ( ) \\\r\n\t\t\twrite(92); // \\\r\n\t\t}\r\n\r\n\t\twrite(value);\r\n\t}\r\n\r\n\tfunction writeValue(value: any, key?: string, inProperty = false) {\r\n\t\tfunction writePrefix() {\r\n\t\t\tif (inProperty) {\r\n\t\t\t\twriteString(' ');\r\n\t\t\t} else {\r\n\t\t\t\twriteIndent();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(condensed ? '/nil' : 'null');\r\n\t\t} else if (typeof value === 'number') {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(serializeNumber(value, key));\r\n\t\t} else if (typeof value === 'boolean') {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(value ? 'true' : 'false');\r\n\t\t} else if (typeof value === 'string') {\r\n\t\t\twritePrefix();\r\n\r\n\t\t\tif ((key === '99' || key === '98') && value.charAt(0) === '/') {\r\n\t\t\t\twriteString(value);\r\n\t\t\t} else {\r\n\t\t\t\twriteString('(');\r\n\t\t\t\twrite(0xfe);\r\n\t\t\t\twrite(0xff);\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\tconst code = value.charCodeAt(i);\r\n\t\t\t\t\twriteStringByte((code >> 8) & 0xff);\r\n\t\t\t\t\twriteStringByte(code & 0xff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteString(')');\r\n\t\t\t}\r\n\t\t} else if (Array.isArray(value)) {\r\n\t\t\twritePrefix();\r\n\r\n\t\t\tif (value.every(x => typeof x === 'number')) {\r\n\t\t\t\twriteString('[');\r\n\r\n\t\t\t\tconst intArray = intArrays.indexOf(key!) !== -1;\r\n\r\n\t\t\t\tfor (const x of value) {\r\n\t\t\t\t\twriteString(' ');\r\n\t\t\t\t\twriteString(intArray ? serializeNumber(x) : serializeFloat(x));\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteString(' ]');\r\n\t\t\t} else {\r\n\t\t\t\twriteString('[');\r\n\t\t\t\tif (!condensed) writeString('\\n');\r\n\r\n\t\t\t\tfor (const x of value) {\r\n\t\t\t\t\twriteValue(x, key);\r\n\t\t\t\t\tif (!condensed) writeString('\\n');\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteIndent();\r\n\t\t\t\twriteString(']');\r\n\t\t\t}\r\n\t\t} else if (typeof value === 'object') {\r\n\t\t\tif (inProperty && !condensed) writeString('\\n');\r\n\r\n\t\t\twriteIndent();\r\n\t\t\twriteString('<<');\r\n\r\n\t\t\tif (!condensed) writeString('\\n');\r\n\r\n\t\t\tindent++;\r\n\r\n\t\t\tfor (const key of getKeys(value)) {\r\n\t\t\t\twriteProperty(key, value[key]);\r\n\t\t\t}\r\n\r\n\t\t\tindent--;\r\n\t\t\twriteIndent();\r\n\t\t\twriteString('>>');\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tif (condensed) {\r\n\t\tif (typeof data === 'object') {\r\n\t\t\tfor (const key of getKeys(data)) {\r\n\t\t\t\twriteProperty(key, data[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\twriteString('\\n\\n');\r\n\t\twriteValue(data);\r\n\t}\r\n\r\n\treturn buffer.slice(0, offset);\r\n}\r\n","import { TextStyle, LayerTextData, ParagraphStyle, Font, AntiAlias, TextGridInfo, Justification, Color } from './psd';\r\n\r\ninterface Adjustments {\r\n\tAxis: number[];\r\n\tXY: number[];\r\n}\r\n\r\ninterface TypeValues {\r\n\tType: number;\r\n\tValues: number[];\r\n}\r\n\r\ninterface ParagraphProperties {\r\n\tJustification?: number;\r\n\tFirstLineIndent?: number;\r\n\tStartIndent?: number;\r\n\tEndIndent?: number;\r\n\tSpaceBefore?: number;\r\n\tSpaceAfter?: number;\r\n\tAutoHyphenate?: boolean;\r\n\tHyphenatedWordSize?: number;\r\n\tPreHyphen?: number;\r\n\tPostHyphen?: number;\r\n\tConsecutiveHyphens?: number;\r\n\tZone?: number;\r\n\tWordSpacing?: number[];\r\n\tLetterSpacing?: number[];\r\n\tGlyphSpacing?: number[];\r\n\tAutoLeading?: number;\r\n\tLeadingType?: number;\r\n\tHanging?: boolean;\r\n\tBurasagari?: boolean;\r\n\tKinsokuOrder?: number;\r\n\tEveryLineComposer?: boolean;\r\n}\r\n\r\ninterface ParagraphSheet {\r\n\tName?: string;\r\n\tDefaultStyleSheet: number;\r\n\tProperties: ParagraphProperties;\r\n}\r\n\r\ninterface StyleSheetData {\r\n\tFont?: number;\r\n\tFontSize?: number;\r\n\tFauxBold?: boolean;\r\n\tFauxItalic?: boolean;\r\n\tAutoLeading?: boolean;\r\n\tLeading?: number;\r\n\tHorizontalScale?: number;\r\n\tVerticalScale?: number;\r\n\tTracking?: number;\r\n\tAutoKerning?: boolean;\r\n\tKerning?: number;\r\n\tBaselineShift?: number;\r\n\tFontCaps?: number;\r\n\tFontBaseline?: number;\r\n\tUnderline?: boolean;\r\n\tStrikethrough?: boolean;\r\n\tLigatures?: boolean;\r\n\tDLigatures?: boolean;\r\n\tBaselineDirection?: number;\r\n\tTsume?: number;\r\n\tStyleRunAlignment?: number;\r\n\tLanguage?: number;\r\n\tNoBreak?: boolean;\r\n\tFillColor?: TypeValues;\r\n\tStrokeColor?: TypeValues;\r\n\tFillFlag?: boolean;\r\n\tStrokeFlag?: boolean;\r\n\tFillFirst?: boolean;\r\n\tYUnderline?: number;\r\n\tOutlineWidth?: number;\r\n\tCharacterDirection?: number;\r\n\tHindiNumbers?: boolean;\r\n\tKashida?: number;\r\n\tDiacriticPos?: number;\r\n}\r\n\r\ninterface FontSet {\r\n\tName: string;\r\n\tScript: number;\r\n\tFontType: number;\r\n\tSynthetic: number;\r\n}\r\n\r\ninterface ResourceDict {\r\n\tKinsokuSet: any[];\r\n\tMojiKumiSet: any[];\r\n\tTheNormalStyleSheet: number;\r\n\tTheNormalParagraphSheet: number;\r\n\tParagraphSheetSet: ParagraphSheet[];\r\n\tStyleSheetSet: { Name: string; StyleSheetData: StyleSheetData; }[];\r\n\tFontSet: FontSet[];\r\n\tSuperscriptSize: number;\r\n\tSuperscriptPosition: number;\r\n\tSubscriptSize: number;\r\n\tSubscriptPosition: number;\r\n\tSmallCapSize: number;\r\n}\r\n\r\ninterface ParagraphRun {\r\n\tParagraphSheet: ParagraphSheet;\r\n\tAdjustments: Adjustments;\r\n}\r\n\r\ninterface StyleRun {\r\n\tStyleSheet: { StyleSheetData: StyleSheetData; };\r\n}\r\n\r\ninterface PhotoshopNode {\r\n\tShapeType?: number;\r\n\tPointBase?: number[];\r\n\tBoxBounds?: number[];\r\n\tBase?: {\r\n\t\tShapeType: number;\r\n\t\tTransformPoint0: number[];\r\n\t\tTransformPoint1: number[];\r\n\t\tTransformPoint2: number[];\r\n\t};\r\n}\r\n\r\ninterface EngineData {\r\n\tEngineDict: {\r\n\t\tEditor: { Text: string; };\r\n\t\tParagraphRun: {\r\n\t\t\tDefaultRunData: ParagraphRun;\r\n\t\t\tRunArray: ParagraphRun[];\r\n\t\t\tRunLengthArray: number[];\r\n\t\t\tIsJoinable: number;\r\n\t\t};\r\n\t\tStyleRun: {\r\n\t\t\tDefaultRunData: StyleRun;\r\n\t\t\tRunArray: StyleRun[];\r\n\t\t\tRunLengthArray: number[];\r\n\t\t\tIsJoinable: number;\r\n\t\t};\r\n\t\tGridInfo: {\r\n\t\t\tGridIsOn: boolean;\r\n\t\t\tShowGrid: boolean;\r\n\t\t\tGridSize: number;\r\n\t\t\tGridLeading: number;\r\n\t\t\tGridColor: TypeValues;\r\n\t\t\tGridLeadingFillColor: TypeValues;\r\n\t\t\tAlignLineHeightToGridFlags: boolean;\r\n\t\t};\r\n\t\tAntiAlias: number;\r\n\t\tUseFractionalGlyphWidths: boolean;\r\n\t\tRendered?: {\r\n\t\t\tVersion: number;\r\n\t\t\tShapes?: {\r\n\t\t\t\tWritingDirection: number;\r\n\t\t\t\tChildren?: {\r\n\t\t\t\t\tShapeType?: number;\r\n\t\t\t\t\tProcession: number;\r\n\t\t\t\t\tLines: { WritingDirection: number; Children: any[]; };\r\n\t\t\t\t\tCookie?: {\r\n\t\t\t\t\t\tPhotoshop?: PhotoshopNode;\r\n\t\t\t\t\t};\r\n\t\t\t\t}[];\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\tResourceDict: ResourceDict;\r\n\tDocumentResources: ResourceDict;\r\n}\r\n\r\nconst defaultFont: Font = {\r\n\tname: 'MyriadPro-Regular',\r\n\tscript: 0,\r\n\ttype: 0,\r\n\tsynthetic: 0,\r\n};\r\n\r\nconst defaultParagraphStyle: ParagraphStyle = {\r\n\tjustification: 'left',\r\n\tfirstLineIndent: 0,\r\n\tstartIndent: 0,\r\n\tendIndent: 0,\r\n\tspaceBefore: 0,\r\n\tspaceAfter: 0,\r\n\tautoHyphenate: true,\r\n\thyphenatedWordSize: 6,\r\n\tpreHyphen: 2,\r\n\tpostHyphen: 2,\r\n\tconsecutiveHyphens: 8,\r\n\tzone: 36,\r\n\twordSpacing: [0.8, 1, 1.33],\r\n\tletterSpacing: [0, 0, 0],\r\n\tglyphSpacing: [1, 1, 1],\r\n\tautoLeading: 1.2,\r\n\tleadingType: 0,\r\n\thanging: false,\r\n\tburasagari: false,\r\n\tkinsokuOrder: 0,\r\n\teveryLineComposer: false,\r\n};\r\n\r\nconst defaultStyle: TextStyle = {\r\n\tfont: defaultFont,\r\n\tfontSize: 12,\r\n\tfauxBold: false,\r\n\tfauxItalic: false,\r\n\tautoLeading: true,\r\n\tleading: 0,\r\n\thorizontalScale: 1,\r\n\tverticalScale: 1,\r\n\ttracking: 0,\r\n\tautoKerning: true,\r\n\tkerning: 0,\r\n\tbaselineShift: 0,\r\n\tfontCaps: 0,\r\n\tfontBaseline: 0,\r\n\tunderline: false,\r\n\tstrikethrough: false,\r\n\tligatures: true,\r\n\tdLigatures: false,\r\n\tbaselineDirection: 2,\r\n\ttsume: 0,\r\n\tstyleRunAlignment: 2,\r\n\tlanguage: 0,\r\n\tnoBreak: false,\r\n\tfillColor: { r: 0, g: 0, b: 0 },\r\n\tstrokeColor: { r: 0, g: 0, b: 0 },\r\n\tfillFlag: true,\r\n\tstrokeFlag: false,\r\n\tfillFirst: true,\r\n\tyUnderline: 1,\r\n\toutlineWidth: 1,\r\n\tcharacterDirection: 0,\r\n\thindiNumbers: false,\r\n\tkashida: 1,\r\n\tdiacriticPos: 2,\r\n};\r\n\r\nconst defaultGridInfo: TextGridInfo = {\r\n\tisOn: false,\r\n\tshow: false,\r\n\tsize: 18,\r\n\tleading: 22,\r\n\tcolor: { r: 0, g: 0, b: 255 },\r\n\tleadingFillColor: { r: 0, g: 0, b: 255 },\r\n\talignLineHeightToGridFlags: false,\r\n};\r\n\r\nconst paragraphStyleKeys: (keyof ParagraphStyle)[] = [\r\n\t'justification', 'firstLineIndent', 'startIndent', 'endIndent', 'spaceBefore', 'spaceAfter',\r\n\t'autoHyphenate', 'hyphenatedWordSize', 'preHyphen', 'postHyphen', 'consecutiveHyphens',\r\n\t'zone', 'wordSpacing', 'letterSpacing', 'glyphSpacing', 'autoLeading', 'leadingType',\r\n\t'hanging', 'burasagari', 'kinsokuOrder', 'everyLineComposer',\r\n];\r\n\r\nconst styleKeys: (keyof TextStyle)[] = [\r\n\t'font', 'fontSize', 'fauxBold', 'fauxItalic', 'autoLeading', 'leading', 'horizontalScale',\r\n\t'verticalScale', 'tracking', 'autoKerning', 'kerning', 'baselineShift', 'fontCaps', 'fontBaseline',\r\n\t'underline', 'strikethrough', 'ligatures', 'dLigatures', 'baselineDirection', 'tsume',\r\n\t'styleRunAlignment', 'language', 'noBreak', 'fillColor', 'strokeColor', 'fillFlag',\r\n\t'strokeFlag', 'fillFirst', 'yUnderline', 'outlineWidth', 'characterDirection', 'hindiNumbers',\r\n\t'kashida', 'diacriticPos',\r\n];\r\n\r\nconst antialias: AntiAlias[] = ['none', 'crisp', 'strong', 'smooth', 'sharp'];\r\nconst justification: Justification[] = ['left', 'right', 'center'];\r\n\r\nfunction upperFirst(value: string) {\r\n\treturn value.substr(0, 1).toUpperCase() + value.substr(1);\r\n}\r\n\r\nfunction decodeColor(color: { Type: number; Values: number[]; }): Color {\r\n\tconst c = color.Values;\r\n\r\n\tif (color.Type === 0) { // grayscale\r\n\t\treturn { r: c[1] * 255, g: c[1] * 255, b: c[1] * 255 }; // , c[0] * 255];\r\n\t} else { // rgb\r\n\t\treturn { r: c[1] * 255, g: c[2] * 255, b: c[3] * 255, a: c[0] }; // , c[0] * 255];\r\n\t}\r\n}\r\n\r\nfunction encodeColor(color: Color | undefined) {\r\n\tif (color && 'r' in color) {\r\n\t\treturn ['a' in color ? color.a : 1, color.r / 255, color.g / 255, color.b / 255];\r\n\t} else {\r\n\t\treturn [0, 0, 0, 0];\r\n\t}\r\n}\r\n\r\nfunction arraysEqual(a: any[], b: any[]) {\r\n\tif (!a || !b) return false;\r\n\tif (a.length !== b.length) return false;\r\n\tfor (let i = 0; i < a.length; i++) if (a[i] !== b[i]) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction objectsEqual(a: any, b: any) {\r\n\tif (!a || !b) return false;\r\n\tfor (const key of Object.keys(a)) if (a[key] !== b[key]) return false;\r\n\tfor (const key of Object.keys(b)) if (a[key] !== b[key]) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction findOrAddFont(fonts: Font[], font: Font) {\r\n\tfor (let i = 0; i < fonts.length; i++) {\r\n\t\tif (fonts[i].name === font.name) return i;\r\n\t}\r\n\r\n\tfonts.push(font);\r\n\treturn fonts.length - 1;\r\n}\r\n\r\nfunction decodeObject(obj: any, keys: string[], fonts: Font[]) {\r\n\tconst result: any = {};\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst Key = upperFirst(key);\r\n\r\n\t\tif (obj[Key] === undefined) continue;\r\n\r\n\t\tif (key === 'justification') {\r\n\t\t\tresult[key] = justification[obj[Key]];\r\n\t\t} else if (key === 'font') {\r\n\t\t\tresult[key] = fonts[obj[Key]];\r\n\t\t} else if (key === 'fillColor' || key === 'strokeColor') {\r\n\t\t\tresult[key] = decodeColor(obj[Key]);\r\n\t\t} else {\r\n\t\t\tresult[key] = obj[Key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction encodeObject(obj: any, keys: string[], fonts: Font[]) {\r\n\tconst result: any = {};\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst Key = upperFirst(key);\r\n\r\n\t\tif (obj[key] === undefined) continue;\r\n\r\n\t\tif (key === 'justification') {\r\n\t\t\tresult[Key] = justification.indexOf(obj[key] ?? 'left');\r\n\t\t} else if (key === 'font') {\r\n\t\t\tresult[Key] = findOrAddFont(fonts, obj[key]);\r\n\t\t} else if (key === 'fillColor' || key === 'strokeColor') {\r\n\t\t\tresult[Key] = { Type: 1, Values: encodeColor(obj[key]) } as TypeValues;\r\n\t\t} else {\r\n\t\t\tresult[Key] = obj[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction decodeParagraphStyle(obj: ParagraphProperties, fonts: Font[]): ParagraphStyle {\r\n\treturn decodeObject(obj, paragraphStyleKeys, fonts);\r\n}\r\n\r\nfunction decodeStyle(obj: StyleSheetData, fonts: Font[]): TextStyle {\r\n\treturn decodeObject(obj, styleKeys, fonts);\r\n}\r\n\r\nfunction encodeParagraphStyle(obj: ParagraphStyle, fonts: Font[]): ParagraphProperties {\r\n\treturn encodeObject(obj, paragraphStyleKeys, fonts);\r\n}\r\n\r\nfunction encodeStyle(obj: TextStyle, fonts: Font[]): StyleSheetData {\r\n\treturn encodeObject(obj, styleKeys, fonts);\r\n}\r\n\r\nfunction deduplicateValues<T>(base: T, runs: { style: T; }[], keys: (keyof T)[]) {\r\n\tif (!runs.length) return;\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst value = runs[0].style[key];\r\n\r\n\t\tif (value !== undefined) {\r\n\t\t\tlet identical = false;\r\n\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tidentical = runs.every(r => arraysEqual(r.style[key] as any, value));\r\n\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\tidentical = runs.every(r => objectsEqual(r.style[key] as any, value));\r\n\t\t\t} else {\r\n\t\t\t\tidentical = runs.every(r => r.style[key] === value);\r\n\t\t\t}\r\n\r\n\t\t\tif (identical) {\r\n\t\t\t\tbase[key] = value as any;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst styleValue = base[key];\r\n\r\n\t\tif (styleValue !== undefined) {\r\n\t\t\tfor (const r of runs) {\r\n\t\t\t\tlet same = false;\r\n\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tsame = arraysEqual(r.style[key] as any, value);\r\n\t\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\t\tsame = objectsEqual(r.style[key] as any, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsame = r.style[key] === value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (same) delete r.style[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (runs.every(x => Object.keys(x.style).length === 0)) {\r\n\t\truns.length = 0;\r\n\t}\r\n}\r\n\r\nexport function decodeEngineData(engineData: EngineData) {\r\n\tconst engineDict = engineData.EngineDict;\r\n\tconst resourceDict = engineData.ResourceDict;\r\n\r\n\tconst fonts = resourceDict.FontSet.map<Font>(f => ({\r\n\t\tname: f.Name,\r\n\t\tscript: f.Script,\r\n\t\ttype: f.FontType,\r\n\t\tsynthetic: f.Synthetic,\r\n\t}));\r\n\r\n\tconst result: LayerTextData = {\r\n\t\ttext: engineDict.Editor.Text.replace(/\\r/g, '\\n').replace(/\\n$/, ''),\r\n\t\tantiAlias: antialias[engineDict.AntiAlias] ?? 'smooth',\r\n\t\tuseFractionalGlyphWidths: !!engineDict.UseFractionalGlyphWidths,\r\n\t\tsuperscriptSize: resourceDict.SuperscriptSize,\r\n\t\tsuperscriptPosition: resourceDict.SuperscriptPosition,\r\n\t\tsubscriptSize: resourceDict.SubscriptSize,\r\n\t\tsubscriptPosition: resourceDict.SubscriptPosition,\r\n\t\tsmallCapSize: resourceDict.SmallCapSize,\r\n\t};\r\n\r\n\t// shape\r\n\r\n\tconst photoshop = engineDict.Rendered?.Shapes?.Children?.[0]?.Cookie?.Photoshop;\r\n\r\n\tif (photoshop) {\r\n\t\tresult.shapeType = photoshop.ShapeType === 1 ? 'box' : 'point';\r\n\t\tif (photoshop.PointBase) result.pointBase = photoshop.PointBase;\r\n\t\tif (photoshop.BoxBounds) result.boxBounds = photoshop.BoxBounds;\r\n\t}\r\n\r\n\t// paragraph style\r\n\r\n\t// const theNormalParagraphSheet = resourceDict.TheNormalParagraphSheet;\r\n\t// const paragraphSheetSet = resourceDict.ParagraphSheetSet;\r\n\t// const paragraphProperties = paragraphSheetSet[theNormalParagraphSheet].Properties;\r\n\tconst paragraphRun = engineData.EngineDict.ParagraphRun;\r\n\r\n\tresult.paragraphStyle = {}; // decodeParagraphStyle(paragraphProperties, fonts);\r\n\tresult.paragraphStyleRuns = [];\r\n\r\n\tfor (let i = 0; i < paragraphRun.RunArray.length; i++) {\r\n\t\tconst run = paragraphRun.RunArray[i];\r\n\t\tconst length = paragraphRun.RunLengthArray[i];\r\n\t\tconst style = decodeParagraphStyle(run.ParagraphSheet.Properties, fonts);\r\n\t\t// const adjustments = {\r\n\t\t//   axis: run.Adjustments.Axis,\r\n\t\t//   xy: run.Adjustments.XY,\r\n\t\t// };\r\n\t\tresult.paragraphStyleRuns.push({ length, style/*, adjustments*/ });\r\n\t}\r\n\r\n\tdeduplicateValues(result.paragraphStyle, result.paragraphStyleRuns, paragraphStyleKeys);\r\n\r\n\tif (!result.paragraphStyleRuns.length) delete result.paragraphStyleRuns;\r\n\r\n\t// style\r\n\r\n\t// const theNormalStyleSheet = resourceDict.TheNormalStyleSheet;\r\n\t// const styleSheetSet = resourceDict.StyleSheetSet;\r\n\t// const styleSheetData = styleSheetSet[theNormalStyleSheet].StyleSheetData;\r\n\tconst styleRun = engineData.EngineDict.StyleRun;\r\n\r\n\tresult.style = {}; // decodeStyle(styleSheetData, fonts);\r\n\tresult.styleRuns = [];\r\n\r\n\tfor (let i = 0; i < styleRun.RunArray.length; i++) {\r\n\t\tconst length = styleRun.RunLengthArray[i];\r\n\t\tconst style = decodeStyle(styleRun.RunArray[i].StyleSheet.StyleSheetData, fonts);\r\n\t\tresult.styleRuns.push({ length, style });\r\n\t}\r\n\r\n\tdeduplicateValues(result.style, result.styleRuns, styleKeys);\r\n\r\n\tif (!result.styleRuns.length) delete result.styleRuns;\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function encodeEngineData(data: LayerTextData) {\r\n\tconst text = `${(data.text || '').replace(/\\r?\\n/g, '\\r')}\\r`;\r\n\r\n\tconst fonts: Font[] = [\r\n\t\t{ name: 'AdobeInvisFont', script: 0, type: 0, synthetic: 0 },\r\n\t];\r\n\r\n\tconst defFont = data.style?.font ||\r\n\t\tdata.styleRuns?.find(s => s.style.font)?.style.font ||\r\n\t\tdefaultFont;\r\n\r\n\tconst paragraphRunArray: ParagraphRun[] = [];\r\n\tconst paragraphRunLengthArray: number[] = [];\r\n\r\n\tif (data.paragraphStyleRuns && data.paragraphStyleRuns.length) {\r\n\t\tfor (const run of data.paragraphStyleRuns) {\r\n\t\t\tparagraphRunLengthArray.push(run.length);\r\n\t\t\tparagraphRunArray.push({\r\n\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle, ...run.style }, fonts),\r\n\t\t\t\t},\r\n\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t});\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let i = 0, last = 0; i < text.length; i++) {\r\n\t\t\tif (text.charCodeAt(i) === 13) { // \\r\r\n\t\t\t\tparagraphRunLengthArray.push(i - last + 1);\r\n\t\t\t\tparagraphRunArray.push({\r\n\t\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t\t\t},\r\n\t\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t\t});\r\n\t\t\t\tlast = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst styleSheetData = encodeStyle({ ...defaultStyle, font: defFont }, fonts);\r\n\tconst styleRuns = data.styleRuns || [{ length: text.length, style: data.style || {} }];\r\n\tconst styleRunArray: StyleRun[] = [];\r\n\tconst styleRunLengthArray: number[] = [];\r\n\r\n\tfor (const run of styleRuns) {\r\n\t\tstyleRunLengthArray.push(run.length);\r\n\t\tstyleRunArray.push({\r\n\t\t\tStyleSheet: {\r\n\t\t\t\tStyleSheetData: encodeStyle({\r\n\t\t\t\t\tkerning: 0,\r\n\t\t\t\t\tautoKerning: true,\r\n\t\t\t\t\tfillColor: { r: 0, g: 0, b: 0 },\r\n\t\t\t\t\t...data.style,\r\n\t\t\t\t\t...run.style,\r\n\t\t\t\t}, fonts),\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tconst gridInfo = { ...defaultGridInfo, ...data.gridInfo };\r\n\tconst WritingDirection = data.orientation === 'vertical' ? 2 : 0;\r\n\tconst Procession = data.orientation === 'vertical' ? 1 : 0;\r\n\tconst ShapeType = data.shapeType === 'box' ? 1 : 0;\r\n\tconst Photoshop: PhotoshopNode = {\r\n\t\tShapeType,\r\n\t};\r\n\r\n\tif (ShapeType === 0) {\r\n\t\tPhotoshop.PointBase = data.pointBase || [0, 0];\r\n\t} else {\r\n\t\tPhotoshop.BoxBounds = data.boxBounds || [0, 0, 0, 0];\r\n\t}\r\n\r\n\t// needed for correct order of properties\r\n\tPhotoshop.Base = {\r\n\t\tShapeType,\r\n\t\tTransformPoint0: [1, 0],\r\n\t\tTransformPoint1: [0, 1],\r\n\t\tTransformPoint2: [0, 0],\r\n\t};\r\n\r\n\tconst defaultResources = {\r\n\t\tKinsokuSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'PhotoshopKinsokuHard',\r\n\t\t\t\tNoStart: '、。，．・：；？！ー―’”）〕］｝〉》」』】ヽヾゝゞ々ぁぃぅぇぉっゃゅょゎァィゥェォッャュョヮヵヶ゛゜?!)]},.:;℃℉¢％‰',\r\n\t\t\t\tNoEnd: '‘“（〔［｛〈《「『【([{￥＄£＠§〒＃',\r\n\t\t\t\tKeep: '―‥',\r\n\t\t\t\tHanging: '、。.,',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tName: 'PhotoshopKinsokuSoft',\r\n\t\t\t\tNoStart: '、。，．・：；？！’”）〕］｝〉》」』】ヽヾゝゞ々',\r\n\t\t\t\tNoEnd: '‘“（〔［｛〈《「『【',\r\n\t\t\t\tKeep: '―‥',\r\n\t\t\t\tHanging: '、。.,',\r\n\t\t\t},\r\n\t\t],\r\n\t\tMojiKumiSet: [\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet1' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet2' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet3' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet4' },\r\n\t\t],\r\n\t\tTheNormalStyleSheet: 0,\r\n\t\tTheNormalParagraphSheet: 0,\r\n\t\tParagraphSheetSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'Normal RGB',\r\n\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t},\r\n\t\t],\r\n\t\tStyleSheetSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'Normal RGB',\r\n\t\t\t\tStyleSheetData: styleSheetData,\r\n\t\t\t},\r\n\t\t],\r\n\t\tFontSet: fonts.map<FontSet>(f => ({\r\n\t\t\tName: f.name,\r\n\t\t\tScript: f.script || 0,\r\n\t\t\tFontType: f.type || 0,\r\n\t\t\tSynthetic: f.synthetic || 0,\r\n\t\t})),\r\n\t\tSuperscriptSize: data.superscriptSize ?? 0.583,\r\n\t\tSuperscriptPosition: data.superscriptPosition ?? 0.333,\r\n\t\tSubscriptSize: data.subscriptSize ?? 0.583,\r\n\t\tSubscriptPosition: data.subscriptPosition ?? 0.333,\r\n\t\tSmallCapSize: data.smallCapSize ?? 0.7,\r\n\t};\r\n\r\n\tconst engineData: EngineData = {\r\n\t\tEngineDict: {\r\n\t\t\tEditor: { Text: text },\r\n\t\t\tParagraphRun: {\r\n\t\t\t\tDefaultRunData: {\r\n\t\t\t\t\tParagraphSheet: { DefaultStyleSheet: 0, Properties: {} },\r\n\t\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t\t},\r\n\t\t\t\tRunArray: paragraphRunArray,\r\n\t\t\t\tRunLengthArray: paragraphRunLengthArray,\r\n\t\t\t\tIsJoinable: 1,\r\n\t\t\t},\r\n\t\t\tStyleRun: {\r\n\t\t\t\tDefaultRunData: { StyleSheet: { StyleSheetData: {} } },\r\n\t\t\t\tRunArray: styleRunArray,\r\n\t\t\t\tRunLengthArray: styleRunLengthArray,\r\n\t\t\t\tIsJoinable: 2,\r\n\t\t\t},\r\n\t\t\tGridInfo: {\r\n\t\t\t\tGridIsOn: !!gridInfo.isOn,\r\n\t\t\t\tShowGrid: !!gridInfo.show,\r\n\t\t\t\tGridSize: gridInfo.size ?? 18,\r\n\t\t\t\tGridLeading: gridInfo.leading ?? 22,\r\n\t\t\t\tGridColor: { Type: 1, Values: encodeColor(gridInfo.color) },\r\n\t\t\t\tGridLeadingFillColor: { Type: 1, Values: encodeColor(gridInfo.color) },\r\n\t\t\t\tAlignLineHeightToGridFlags: !!gridInfo.alignLineHeightToGridFlags,\r\n\t\t\t},\r\n\t\t\tAntiAlias: antialias.indexOf(data.antiAlias ?? 'sharp'),\r\n\t\t\tUseFractionalGlyphWidths: data.useFractionalGlyphWidths ?? true,\r\n\t\t\tRendered: {\r\n\t\t\t\tVersion: 1,\r\n\t\t\t\tShapes: {\r\n\t\t\t\t\tWritingDirection,\r\n\t\t\t\t\tChildren: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tShapeType,\r\n\t\t\t\t\t\t\tProcession,\r\n\t\t\t\t\t\t\tLines: { WritingDirection, Children: [] },\r\n\t\t\t\t\t\t\tCookie: { Photoshop },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tResourceDict: { ...defaultResources },\r\n\t\tDocumentResources: { ...defaultResources },\r\n\t};\r\n\r\n\t// console.log('encodeEngineData', require('util').inspect(engineData, false, 99, true));\r\n\treturn engineData;\r\n}\r\n","export type BlendMode = 'pass through' | 'normal' | 'dissolve' | 'darken' | 'multiply' |\n\t'color burn' | 'linear burn' | 'darker color' | 'lighten' | 'screen' | 'color dodge' |\n\t'linear dodge' | 'lighter color' | 'overlay' | 'soft light' | 'hard light' |\n\t'vivid light' | 'linear light' | 'pin light' | 'hard mix' | 'difference' | 'exclusion' |\n\t'subtract' | 'divide' | 'hue' | 'saturation' | 'color' | 'luminosity';\n\nexport const enum ColorMode {\n\tBitmap = 0,\n\tGrayscale = 1,\n\tIndexed = 2,\n\tRGB = 3,\n\tCMYK = 4,\n\tMultichannel = 7,\n\tDuotone = 8,\n\tLab = 9,\n}\n\nexport const enum SectionDividerType {\n\tOther = 0,\n\tOpenFolder = 1,\n\tClosedFolder = 2,\n\tBoundingSectionDivider = 3,\n}\n\nexport type RGBA = { r: number; g: number; b: number; a: number; };\nexport type RGB = { r: number; g: number; b: number; };\nexport type HSB = { h: number; s: number; b: number; };\nexport type CMYK = { c: number; m: number; y: number; k: number; };\nexport type LAB = { l: number; a: number; b: number; };\nexport type Grayscale = { k: number };\nexport type Color = RGBA | RGB | HSB | CMYK | LAB | Grayscale;\n\nexport interface EffectContour {\n\tname: string;\n\tcurve: { x: number; y: number; }[];\n}\n\nexport interface EffectPattern {\n\tname: string;\n\tid: string;\n\t// TODO: add fields\n}\n\nexport interface LayerEffectShadow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tangle?: number;\n\tdistance?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tuseGlobalLight?: boolean;\n\tantialiased?: boolean;\n\tcontour?: EffectContour;\n\tchoke?: UnitsValue; // spread\n\tlayerConceals?: boolean; // only drop shadow\n}\n\nexport interface LayerEffectsOuterGlow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tsource?: GlowSource;\n\tantialiased?: boolean;\n\tnoise?: number;\n\trange?: number;\n\tchoke?: UnitsValue;\n\tjitter?: number;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectInnerGlow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tsource?: GlowSource;\n\ttechnique?: GlowTechnique;\n\tantialiased?: boolean;\n\tnoise?: number;\n\trange?: number;\n\tchoke?: UnitsValue; // spread\n\tjitter?: number;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectBevel {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tangle?: number;\n\tstrength?: number; // depth\n\thighlightBlendMode?: BlendMode;\n\tshadowBlendMode?: BlendMode;\n\thighlightColor?: Color;\n\tshadowColor?: Color;\n\tstyle?: BevelStyle;\n\thighlightOpacity?: number;\n\tshadowOpacity?: number;\n\tsoften?: UnitsValue;\n\tuseGlobalLight?: boolean;\n\taltitude?: number;\n\ttechnique?: BevelTechnique;\n\tdirection?: BevelDirection;\n\tuseTexture?: boolean;\n\tuseShape?: boolean;\n\tantialiasGloss?: boolean;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectSolidFill {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: BlendMode;\n\tcolor?: Color;\n\topacity?: number;\n}\n\nexport interface LayerEffectStroke {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tposition?: 'inside' | 'center' | 'outside';\n\tfillType?: 'color' | 'gradient' | 'pattern';\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tcolor?: Color;\n\tgradient?: (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo;\n\tpattern?: EffectPattern & {}; // TODO: additional pattern info\n}\n\nexport interface LayerEffectSatin {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tblendMode?: BlendMode;\n\tcolor?: Color;\n\tantialiased?: boolean;\n\topacity?: number;\n\tdistance?: UnitsValue;\n\tinvert?: boolean;\n\tangle?: number;\n\tcontour?: EffectContour;\n}\n\n// not supported yet because of `Patt` section not implemented\nexport interface LayerEffectPatternOverlay {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tscale?: number;\n\tpattern?: EffectPattern;\n\tphase?: { x: number; y: number; };\n\talign?: boolean;\n}\n\nexport interface EffectSolidGradient {\n\tname: string;\n\ttype: 'solid';\n\tsmoothness?: number;\n\tcolorStops: ColorStop[];\n\topacityStops: OpacityStop[];\n}\n\nexport interface EffectNoiseGradient {\n\tname: string;\n\ttype: 'noise';\n\troughness?: number;\n\tcolorModel?: 'rgb' | 'hsb' | 'lab';\n\trandomSeed?: number;\n\trestrictColors?: boolean;\n\taddTransparency?: boolean;\n\tmin: number[];\n\tmax: number[];\n}\n\nexport interface LayerEffectGradientOverlay {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: string;\n\topacity?: number;\n\talign?: boolean;\n\tscale?: number;\n\tdither?: boolean;\n\treverse?: boolean;\n\ttype?: GradientStyle;\n\toffset?: { x: number; y: number; };\n\tgradient?: EffectSolidGradient | EffectNoiseGradient;\n}\n\nexport interface LayerEffectsInfo {\n\tdisabled?: boolean;\n\tscale?: number;\n\tdropShadow?: LayerEffectShadow;\n\tinnerShadow?: LayerEffectShadow;\n\touterGlow?: LayerEffectsOuterGlow;\n\tinnerGlow?: LayerEffectInnerGlow;\n\tbevel?: LayerEffectBevel;\n\tsolidFill?: LayerEffectSolidFill;\n\tsatin?: LayerEffectSatin;\n\tstroke?: LayerEffectStroke;\n\tgradientOverlay?: LayerEffectGradientOverlay;\n\tpatternOverlay?: LayerEffectPatternOverlay; // not supported yet because of `Patt` section not implemented\n}\n\nexport interface LayerMaskData {\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\tdefaultColor?: number;\n\tdisabled?: boolean;\n\tpositionRelativeToLayer?: boolean;\n\tfromVectorData?: boolean; // set to true if the mask is generated from vector data, false if it's a bitmap provided by user\n\tuserMaskDensity?: number;\n\tuserMaskFeather?: number; // px\n\tvectorMaskDensity?: number;\n\tvectorMaskFeather?: number;\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n}\n\nexport type TextGridding = 'none'; // TODO: other values\nexport type Orientation = 'horizontal' | 'vertical';\nexport type AntiAlias = 'none' | 'sharp' | 'crisp' | 'strong' | 'smooth';\nexport type WarpStyle =\n\t'none' | 'arc' | 'arcLower' | 'arcUpper' | 'arch' | 'bulge' | 'shellLower' | 'shellUpper' | 'flag' |\n\t'wave' | 'fish' | 'rise' | 'fisheye' | 'inflate' | 'squeeze' | 'twist' | 'custom';\nexport type BevelStyle = 'outer bevel' | 'inner bevel' | 'emboss' | 'pillow emboss' | 'stroke emboss';\nexport type BevelTechnique = 'smooth' | 'chisel hard' | 'chisel soft';\nexport type BevelDirection = 'up' | 'down';\nexport type GlowTechnique = 'softer' | 'precise';\nexport type GlowSource = 'edge' | 'center';\nexport type GradientStyle = 'linear' | 'radial' | 'angle' | 'reflected' | 'diamond';\nexport type Justification = 'left' | 'right' | 'center';\nexport type LineCapType = 'butt' | 'round' | 'square';\nexport type LineJoinType = 'miter' | 'round' | 'bevel';\nexport type LineAlignment = 'inside' | 'center' | 'outside';\n\nexport interface Warp {\n\tstyle?: WarpStyle;\n\tvalue?: number;\n\tperspective?: number;\n\tperspectiveOther?: number;\n\trotate?: Orientation;\n\n\t// for custom warps\n\tbounds?: { top: UnitsValue; left: UnitsValue; bottom: UnitsValue; right: UnitsValue; };\n\tuOrder?: number;\n\tvOrder?: number;\n\tcustomEnvelopeWarp?: {\n\t\tmeshPoints: { type: 'horizontal' | 'vertical'; values: number[]; }[];\n\t};\n}\n\nexport interface Font {\n\tname: string;\n\tscript?: number;\n\ttype?: number;\n\tsynthetic?: number;\n}\n\nexport interface ParagraphStyle {\n\tjustification?: Justification;\n\tfirstLineIndent?: number;\n\tstartIndent?: number;\n\tendIndent?: number;\n\tspaceBefore?: number;\n\tspaceAfter?: number;\n\tautoHyphenate?: boolean;\n\thyphenatedWordSize?: number;\n\tpreHyphen?: number;\n\tpostHyphen?: number;\n\tconsecutiveHyphens?: number;\n\tzone?: number;\n\twordSpacing?: number[];\n\tletterSpacing?: number[];\n\tglyphSpacing?: number[];\n\tautoLeading?: number;\n\tleadingType?: number;\n\thanging?: boolean;\n\tburasagari?: boolean;\n\tkinsokuOrder?: number;\n\teveryLineComposer?: boolean;\n}\n\nexport interface ParagraphStyleRun {\n\tlength: number;\n\tstyle: ParagraphStyle;\n}\n\nexport interface TextStyle {\n\tfont?: Font;\n\tfontSize?: number;\n\tfauxBold?: boolean;\n\tfauxItalic?: boolean;\n\tautoLeading?: boolean;\n\tleading?: number;\n\thorizontalScale?: number;\n\tverticalScale?: number;\n\ttracking?: number;\n\tautoKerning?: boolean;\n\tkerning?: number;\n\tbaselineShift?: number;\n\tfontCaps?: number; // 0 - none, 1 - small caps, 2 - all caps\n\tfontBaseline?: number; // 0 - normal, 1 - superscript, 2 - subscript\n\tunderline?: boolean;\n\tstrikethrough?: boolean;\n\tligatures?: boolean;\n\tdLigatures?: boolean;\n\tbaselineDirection?: number;\n\ttsume?: number;\n\tstyleRunAlignment?: number;\n\tlanguage?: number;\n\tnoBreak?: boolean;\n\tfillColor?: Color;\n\tstrokeColor?: Color;\n\tfillFlag?: boolean;\n\tstrokeFlag?: boolean;\n\tfillFirst?: boolean;\n\tyUnderline?: number;\n\toutlineWidth?: number;\n\tcharacterDirection?: number;\n\thindiNumbers?: boolean;\n\tkashida?: number;\n\tdiacriticPos?: number;\n}\n\nexport interface TextStyleRun {\n\tlength: number;\n\tstyle: TextStyle;\n}\n\nexport interface TextGridInfo {\n\tisOn?: boolean;\n\tshow?: boolean;\n\tsize?: number;\n\tleading?: number;\n\tcolor?: Color;\n\tleadingFillColor?: Color;\n\talignLineHeightToGridFlags?: boolean;\n}\n\nexport interface LayerTextData {\n\ttext: string;\n\ttransform?: number[];\n\tantiAlias?: AntiAlias;\n\tgridding?: TextGridding;\n\torientation?: Orientation;\n\tindex?: number;\n\twarp?: Warp;\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\n\tgridInfo?: TextGridInfo;\n\tuseFractionalGlyphWidths?: boolean;\n\tstyle?: TextStyle; // base style\n\tstyleRuns?: TextStyleRun[]; // spans of different style\n\tparagraphStyle?: ParagraphStyle; // base paragraph style\n\tparagraphStyleRuns?: ParagraphStyleRun[]; // style for each line\n\n\tsuperscriptSize?: number;\n\tsuperscriptPosition?: number;\n\tsubscriptSize?: number;\n\tsubscriptPosition?: number;\n\tsmallCapSize?: number;\n\n\tshapeType?: 'point' | 'box';\n\tpointBase?: number[];\n\tboxBounds?: number[];\n}\n\nexport interface PatternInfo {\n\tname: string;\n\tid: string;\n\tx: number;\n\ty: number;\n\tbounds: { x: number; y: number; w: number, h: number; };\n\tdata: Uint8Array;\n}\n\nexport interface BezierKnot {\n\tlinked: boolean;\n\tpoints: number[]; // x0, y0, x1, y1, x2, y2\n}\n\nexport type BooleanOperation = 'exclude' | 'combine' | 'subtract' | 'intersect';\n\nexport interface BezierPath {\n\topen: boolean;\n\toperation: BooleanOperation;\n\tknots: BezierKnot[];\n}\n\nexport interface ExtraGradientInfo {\n\tstyle?: GradientStyle;\n\tscale?: number;\n\tangle?: number;\n\tdither?: boolean;\n\treverse?: boolean;\n\talign?: boolean;\n\toffset?: { x: number; y: number; };\n}\n\nexport interface ExtraPatternInfo {\n\tlinked?: boolean;\n\tphase?: { x: number; y: number; };\n}\n\nexport type VectorContent = { type: 'color'; color: Color; } |\n\t(EffectSolidGradient & ExtraGradientInfo) |\n\t(EffectNoiseGradient & ExtraGradientInfo) |\n\t(EffectPattern & { type: 'pattern'; } & ExtraPatternInfo);\n\nexport type RenderingIntent = 'perceptual' | 'saturation' | 'relative colorimetric' | 'absolute colorimetric';\n\nexport type Units = 'Pixels' | 'Points' | 'Picas' | 'Millimeters' | 'Centimeters' | 'Inches' | 'None' | 'Density';\n\nexport interface UnitsValue {\n\tunits: Units;\n\tvalue: number;\n}\n\nexport interface BrightnessAdjustment {\n\ttype: 'brightness/contrast';\n\tbrightness?: number;\n\tcontrast?: number;\n\tmeanValue?: number;\n\tuseLegacy?: boolean;\n\tlabColorOnly?: boolean;\n\tauto?: boolean;\n}\n\nexport interface LevelsAdjustmentChannel {\n\tshadowInput: number;\n\thighlightInput: number;\n\tshadowOutput: number;\n\thighlightOutput: number;\n\tmidtoneInput: number;\n}\n\nexport interface PresetInfo {\n\tpresetKind?: number;\n\tpresetFileName?: string;\n}\n\nexport interface LevelsAdjustment extends PresetInfo {\n\ttype: 'levels';\n\trgb?: LevelsAdjustmentChannel;\n\tred?: LevelsAdjustmentChannel;\n\tgreen?: LevelsAdjustmentChannel;\n\tblue?: LevelsAdjustmentChannel;\n}\n\nexport type CurvesAdjustmentChannel = { input: number; output: number; }[];\n\nexport interface CurvesAdjustment extends PresetInfo {\n\ttype: 'curves';\n\trgb?: CurvesAdjustmentChannel;\n\tred?: CurvesAdjustmentChannel;\n\tgreen?: CurvesAdjustmentChannel;\n\tblue?: CurvesAdjustmentChannel;\n}\n\nexport interface ExposureAdjustment extends PresetInfo {\n\ttype: 'exposure';\n\texposure?: number;\n\toffset?: number;\n\tgamma?: number;\n}\n\nexport interface VibranceAdjustment {\n\ttype: 'vibrance';\n\tvibrance?: number;\n\tsaturation?: number;\n}\n\nexport interface HueSaturationAdjustmentChannel {\n\ta: number;\n\tb: number;\n\tc: number;\n\td: number;\n\thue: number;\n\tsaturation: number;\n\tlightness: number;\n}\n\nexport interface HueSaturationAdjustment extends PresetInfo {\n\ttype: 'hue/saturation';\n\tmaster?: HueSaturationAdjustmentChannel;\n\treds?: HueSaturationAdjustmentChannel;\n\tyellows?: HueSaturationAdjustmentChannel;\n\tgreens?: HueSaturationAdjustmentChannel;\n\tcyans?: HueSaturationAdjustmentChannel;\n\tblues?: HueSaturationAdjustmentChannel;\n\tmagentas?: HueSaturationAdjustmentChannel;\n}\n\nexport interface ColorBalanceValues {\n\tcyanRed: number;\n\tmagentaGreen: number;\n\tyellowBlue: number;\n}\n\nexport interface ColorBalanceAdjustment {\n\ttype: 'color balance';\n\tshadows?: ColorBalanceValues;\n\tmidtones?: ColorBalanceValues;\n\thighlights?: ColorBalanceValues;\n\tpreserveLuminosity?: boolean;\n}\n\nexport interface BlackAndWhiteAdjustment extends PresetInfo {\n\ttype: 'black & white';\n\treds?: number;\n\tyellows?: number;\n\tgreens?: number;\n\tcyans?: number;\n\tblues?: number;\n\tmagentas?: number;\n\tuseTint?: boolean;\n\ttintColor?: Color;\n}\n\nexport interface PhotoFilterAdjustment {\n\ttype: 'photo filter';\n\tcolor?: Color;\n\tdensity?: number;\n\tpreserveLuminosity?: boolean;\n}\n\nexport interface ChannelMixerChannel {\n\tred: number;\n\tgreen: number;\n\tblue: number;\n\tconstant: number;\n}\n\nexport interface ChannelMixerAdjustment extends PresetInfo {\n\ttype: 'channel mixer';\n\tmonochrome?: boolean;\n\tred?: ChannelMixerChannel;\n\tgreen?: ChannelMixerChannel;\n\tblue?: ChannelMixerChannel;\n\tgray?: ChannelMixerChannel;\n}\n\nexport interface ColorLookupAdjustment {\n\ttype: 'color lookup';\n\tlookupType?: '3dlut' | 'abstractProfile' | 'deviceLinkProfile';\n\tname?: string;\n\tdither?: boolean;\n\tprofile?: Uint8Array;\n\tlutFormat?: 'look' | 'cube' | '3dl';\n\tdataOrder?: 'rgb' | 'bgr';\n\ttableOrder?: 'rgb' | 'bgr';\n\tlut3DFileData?: Uint8Array;\n\tlut3DFileName?: string;\n}\n\nexport interface InvertAdjustment {\n\ttype: 'invert';\n}\n\nexport interface PosterizeAdjustment {\n\ttype: 'posterize';\n\tlevels?: number;\n}\n\nexport interface ThresholdAdjustment {\n\ttype: 'threshold';\n\tlevel?: number;\n}\n\nexport interface ColorStop {\n\tcolor: Color;\n\tlocation: number;\n\tmidpoint: number;\n}\n\nexport interface OpacityStop {\n\topacity: number;\n\tlocation: number;\n\tmidpoint: number;\n}\n\nexport interface GradientMapAdjustment {\n\ttype: 'gradient map';\n\tname?: string;\n\tgradientType: 'solid' | 'noise';\n\tdither?: boolean;\n\treverse?: boolean;\n\t// solid\n\tsmoothness?: number;\n\tcolorStops?: ColorStop[];\n\topacityStops?: OpacityStop[];\n\t// noise\n\troughness?: number;\n\tcolorModel?: 'rgb' | 'hsb' | 'lab';\n\trandomSeed?: number;\n\trestrictColors?: boolean;\n\taddTransparency?: boolean;\n\tmin?: number[];\n\tmax?: number[];\n}\n\nexport interface SelectiveColorAdjustment {\n\ttype: 'selective color';\n\tmode?: 'relative' | 'absolute';\n\treds?: CMYK;\n\tyellows?: CMYK;\n\tgreens?: CMYK;\n\tcyans?: CMYK;\n\tblues?: CMYK;\n\tmagentas?: CMYK;\n\twhites?: CMYK;\n\tneutrals?: CMYK;\n\tblacks?: CMYK;\n}\n\nexport interface LinkedFile {\n\tid: string;\n\tname: string;\n\ttype?: string;\n\tcreator?: string;\n\tdata?: Uint8Array;\n\ttime?: Date; // for external files\n\tdescriptor?: {\n\t\tcompInfo: { compID: number; originalCompID: number; };\n\t};\n\tchildDocumentID?: string;\n\tassetModTime?: number;\n\tassetLockedState?: number;\n}\n\nexport type PlacedLayerType = 'unknown' | 'vector' | 'raster' | 'image stack';\n\nexport interface PlacedLayer {\n\tid: string; // id of linked image file (psd.linkedFiles)\n\tplaced?: string; // ???\n\ttype: PlacedLayerType;\n\t// pageNumber: number; // ???\n\t// totalPages: number; // ???\n\t// frameStep?: { numerator: number; denominator: number; };\n\t// duration?: { numerator: number; denominator: number; };\n\t// frameCount?: number; // ???\n\ttransform: number[]; // x, y of 4 corners of the transform\n\twidth?: number;\n\theight?: number;\n\tresolution?: UnitsValue;\n\t// antialias ?\n\twarp?: Warp;\n\tcrop?: number;\n\tcomp?: number;\n\tcompInfo?: { compID: number; originalCompID: number; };\n}\n\nexport type AdjustmentLayer = BrightnessAdjustment | LevelsAdjustment | CurvesAdjustment |\n\tExposureAdjustment | VibranceAdjustment | HueSaturationAdjustment | ColorBalanceAdjustment |\n\tBlackAndWhiteAdjustment | PhotoFilterAdjustment | ChannelMixerAdjustment | ColorLookupAdjustment |\n\tInvertAdjustment | PosterizeAdjustment | ThresholdAdjustment | GradientMapAdjustment |\n\tSelectiveColorAdjustment;\n\nexport type LayerColor = 'none' | 'red' | 'orange' | 'yellow' | 'green' | 'blue' | 'violet' | 'gray';\n\nexport interface KeyDescriptorItem {\n\tkeyShapeInvalidated?: boolean;\n\tkeyOriginType?: number;\n\tkeyOriginResolution?: number;\n\tkeyOriginRRectRadii?: {\n\t\ttopRight: UnitsValue;\n\t\ttopLeft: UnitsValue;\n\t\tbottomLeft: UnitsValue;\n\t\tbottomRight: UnitsValue;\n\t};\n\tkeyOriginShapeBoundingBox?: {\n\t\ttop: UnitsValue;\n\t\tleft: UnitsValue;\n\t\tbottom: UnitsValue;\n\t\tright: UnitsValue;\n\t};\n}\n\nexport interface LayerAdditionalInfo {\n\tname?: string; // layer name\n\tnameSource?: string; // layer name source\n\tid?: number; // layer id\n\tversion?: number; // layer version\n\tmask?: LayerMaskData;\n\tblendClippendElements?: boolean;\n\tblendInteriorElements?: boolean;\n\tknockout?: boolean;\n\tprotected?: {\n\t\ttransparency?: boolean;\n\t\tcomposite?: boolean;\n\t\tposition?: boolean;\n\t\tartboards?: boolean;\n\t};\n\tlayerColor?: LayerColor;\n\treferencePoint?: {\n\t\tx: number;\n\t\ty: number;\n\t};\n\tsectionDivider?: {\n\t\ttype: SectionDividerType;\n\t\tkey?: string;\n\t\tsubType?: number;\n\t};\n\tfilterMask?: {\n\t\tcolorSpace: Color;\n\t\topacity: number;\n\t};\n\teffects?: LayerEffectsInfo;\n\ttext?: LayerTextData;\n\tpatterns?: PatternInfo[]; // not supported yet\n\tvectorFill?: VectorContent;\n\tvectorStroke?: {\n\t\tstrokeEnabled?: boolean;\n\t\tfillEnabled?: boolean;\n\t\tlineWidth?: UnitsValue;\n\t\tlineDashOffset?: UnitsValue;\n\t\tmiterLimit?: number;\n\t\tlineCapType?: LineCapType;\n\t\tlineJoinType?: LineJoinType;\n\t\tlineAlignment?: LineAlignment;\n\t\tscaleLock?: boolean;\n\t\tstrokeAdjust?: boolean;\n\t\tlineDashSet?: UnitsValue[];\n\t\tblendMode?: BlendMode;\n\t\topacity?: number;\n\t\tcontent?: VectorContent;\n\t\tresolution?: number;\n\t};\n\tvectorMask?: {\n\t\tinvert?: boolean;\n\t\tnotLink?: boolean;\n\t\tdisable?: boolean;\n\t\tfillStartsWithAllPixels?: boolean;\n\t\tclipboard?: {\n\t\t\ttop: number;\n\t\t\tleft: number;\n\t\t\tbottom: number;\n\t\t\tright: number;\n\t\t\tresolution: number;\n\t\t};\n\t\tpaths: BezierPath[];\n\t};\n\tusingAlignedRendering?: boolean;\n\ttimestamp?: number; // seconds\n\tpathList?: {\n\t}[];\n\tadjustment?: AdjustmentLayer;\n\tplacedLayer?: PlacedLayer;\n\tvectorOrigination?: {\n\t\tkeyDescriptorList: KeyDescriptorItem[];\n\t};\n\tcompositorUsed?: {\n\t\tdescription: string;\n\t\treason: string;\n\t\tengine: string;\n\t\tenableCompCore: string;\n\t\tenableCompCoreGPU: string;\n\t\tcompCoreSupport: string;\n\t\tcompCoreGPUSupport: string;\n\t};\n\tartboard?: {\n\t\trect: { top: number; left: number; bottom: number; right: number; };\n\t\tguideIndices?: any[];\n\t\tpresetName?: string;\n\t\tcolor?: Color;\n\t\tbackgroundType?: number;\n\t};\n\n\t// Base64 encoded raw EngineData, currently just kept in original state to support\n\t// loading and modifying PSD file without breaking text layers.\n\tengineData?: string;\n}\n\nexport interface ImageResources {\n\tlayerState?: number;\n\tlayersGroup?: number[];\n\tlayerSelectionIds?: number[];\n\tlayerGroupsEnabledId?: number[];\n\tversionInfo?: {\n\t\thasRealMergedData: boolean;\n\t\twriterName: string;\n\t\treaderName: string;\n\t\tfileVersion: number;\n\t};\n\talphaIdentifiers?: number[];\n\talphaChannelNames?: string[];\n\tglobalAngle?: number;\n\tglobalAltitude?: number;\n\tpixelAspectRatio?: {\n\t\taspect: number;\n\t};\n\turlsList?: any[];\n\tgridAndGuidesInformation?: {\n\t\tgrid?: {\n\t\t\thorizontal: number;\n\t\t\tvertical: number;\n\t\t},\n\t\tguides?: {\n\t\t\tlocation: number;\n\t\t\tdirection: 'horizontal' | 'vertical';\n\t\t}[];\n\t};\n\tresolutionInfo?: {\n\t\thorizontalResolution: number;\n\t\thorizontalResolutionUnit: 'PPI' | 'PPCM';\n\t\twidthUnit: 'Inches' | 'Centimeters' | 'Points' | 'Picas' | 'Columns';\n\t\tverticalResolution: number;\n\t\tverticalResolutionUnit: 'PPI' | 'PPCM';\n\t\theightUnit: 'Inches' | 'Centimeters' | 'Points' | 'Picas' | 'Columns';\n\t};\n\tthumbnail?: HTMLCanvasElement;\n\tthumbnailRaw?: { width: number; height: number; data: Uint8Array; };\n\tcaptionDigest?: string;\n\txmpMetadata?: string;\n\tprintScale?: {\n\t\tstyle?: 'centered' | 'size to fit' | 'user defined';\n\t\tx?: number;\n\t\ty?: number;\n\t\tscale?: number;\n\t};\n\tprintInformation?: {\n\t\tprinterManagesColors?: boolean;\n\t\tprinterName?: string;\n\t\tprinterProfile?: string;\n\t\tprintSixteenBit?: boolean;\n\t\trenderingIntent?: RenderingIntent;\n\t\thardProof?: boolean;\n\t\tblackPointCompensation?: boolean;\n\t\tproofSetup?: {\n\t\t\tbuiltin: string;\n\t\t} | {\n\t\t\tprofile: string;\n\t\t\trenderingIntent?: RenderingIntent;\n\t\t\tblackPointCompensation?: boolean;\n\t\t\tpaperWhite?: boolean;\n\t\t};\n\t};\n\tbackgroundColor?: Color;\n\tidsSeedNumber?: number;\n\tprintFlags?: {\n\t\tlabels?: boolean;\n\t\tcropMarks?: boolean;\n\t\tcolorBars?: boolean;\n\t\tregistrationMarks?: boolean;\n\t\tnegative?: boolean;\n\t\tflip?: boolean;\n\t\tinterpolate?: boolean;\n\t\tcaption?: boolean;\n\t\tprintFlags?: boolean;\n\t};\n\ticcUntaggedProfile?: boolean;\n}\n\nexport interface GlobalLayerMaskInfo {\n\toverlayColorSpace: number;\n\tcolorSpace1: number;\n\tcolorSpace2: number;\n\tcolorSpace3: number;\n\tcolorSpace4: number;\n\topacity: number;\n\tkind: number;\n}\n\nexport interface Layer extends LayerAdditionalInfo {\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\ttransparencyProtected?: boolean;\n\thidden?: boolean;\n\tclipping?: boolean;\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n\tchildren?: Layer[];\n\t/** applies only for layer groups */\n\topened?: boolean;\n}\n\nexport interface Psd extends LayerAdditionalInfo {\n\twidth: number;\n\theight: number;\n\tchannels?: number;\n\tbitsPerChannel?: number;\n\tcolorMode?: ColorMode;\n\tchildren?: Layer[];\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n\timageResources?: ImageResources;\n\tlinkedFiles?: LinkedFile[]; // used in smart objects\n\tartboards?: {\n\t\tcount: number;\n\t\tautoExpandOffset?: { horizontal: number; vertical: number; };\n\t\torigin?: { horizontal: number; vertical: number; };\n\t\tautoExpandEnabled?: boolean;\n\t\tautoNestEnabled?: boolean;\n\t\tautoPositionEnabled?: boolean;\n\t\tshrinkwrapOnSaveEnabled?: boolean;\n\t\tdocDefaultNewArtboardBackgroundColor?: Color;\n\t\tdocDefaultNewArtboardBackgroundType?: number;\n\t};\n\tglobalLayerMaskInfo?: GlobalLayerMaskInfo;\n}\n\nexport interface ReadOptions {\n\t/** Does not load layer image data. */\n\tskipLayerImageData?: boolean;\n\t/** Does not load composite image data. */\n\tskipCompositeImageData?: boolean;\n\t/** Does not load thumbnail. */\n\tskipThumbnail?: boolean;\n\t/** Does not load linked files (used in smart-objects). */\n\tskipLinkedFilesData?: boolean;\n\t/** Throws exception if features are missing. */\n\tthrowForMissingFeatures?: boolean;\n\t/** Logs if features are missing. */\n\tlogMissingFeatures?: boolean;\n\t/** Keep image data as byte array instead of canvas.\n\t * (image data will appear in `imageData` fields instead of `canvas` fields)\n\t * This avoids issues with canvas premultiplied alpha corrupting image data. */\n\tuseImageData?: boolean;\n\t/** Loads thumbnail raw data instead of decoding it's content into canvas.\n\t * `thumnailRaw` field is used instead. */\n\tuseRawThumbnail?: boolean;\n\t/** Usend only for development */\n\tlogDevFeatures?: boolean;\n}\n\nexport interface WriteOptions {\n\t/** Automatically generates thumbnail from composite image. */\n\tgenerateThumbnail?: boolean;\n\t/** Trims transparent pixels from layer image data. */\n\ttrimImageData?: boolean;\n\t/** Invalidates text layer data, forcing Photoshop to redraw them on load.\n\t *  Use this option if you're updating loaded text layer properties. */\n\tinvalidateTextLayers?: boolean;\n\t/** Logs if features are missing. */\n\tlogMissingFeatures?: boolean;\n\t/** Forces bottom layer to be treated as layer and not background even when it's missing any transparency\n\t * \t(by default Photoshop treats bottom layer as background it it doesn't have any transparent pixels) */\n\tnoBackground?: boolean;\n}\n"],"names":["Object","defineProperty","module","exports","enumerable","get","$jE67M","initializeCanvas","$1b6f6e28f7eac574$var$__exportStar","parcelRequire","$1b6f6e28f7eac574$var$writePsdUint8Array","psd","options","writer","$kCSTH","createWriter","writePsd","getWriterBufferNoCopy","byteArrayToBase64","$jWkTT","fromByteArray","readPsd","buffer","reader","$5OPaf","createReader","byteOffset","byteLength","getWriterBuffer","writePsdUint8Array","writePsdBuffer","$1b6f6e28f7eac574$require$Buffer","Error","from","$aa3bc52a91644a03$export$a143d493d941bafc","$aa3bc52a91644a03$export$f99ded8fe4b79145","$aa3bc52a91644a03$var$customInspectSymbol","Symbol","$aa3bc52a91644a03$var$Buffer","$aa3bc52a91644a03$var$K_MAX_LENGTH","$aa3bc52a91644a03$var$createBuffer","length","RangeError","buf","Uint8Array","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","$aa3bc52a91644a03$var$allocUnsafe","$aa3bc52a91644a03$var$from","value","string","encoding","isEncoding","$aa3bc52a91644a03$var$byteLength","actual","write","slice","$aa3bc52a91644a03$var$fromString","ArrayBuffer","isView","arrayView","$aa3bc52a91644a03$var$isInstance","copy","$aa3bc52a91644a03$var$fromArrayBuffer","$aa3bc52a91644a03$var$fromArrayLike","$aa3bc52a91644a03$var$fromArrayView","$4gaLD","typeOf","SharedArrayBuffer","valueOf","b","obj","isBuffer","len","$aa3bc52a91644a03$var$checked","undefined","$aa3bc52a91644a03$var$numberIsNaN","type","Array","isArray","data","$aa3bc52a91644a03$var$fromObject","toPrimitive","$aa3bc52a91644a03$var$assertSize","size","array","i","toString","mustMatch","arguments","loweredCase","$aa3bc52a91644a03$var$utf8ToBytes","$aa3bc52a91644a03$var$base64ToBytes","toLowerCase","$aa3bc52a91644a03$var$slowToString","start","end","this","$aa3bc52a91644a03$var$hexSlice","$aa3bc52a91644a03$var$utf8Slice","$aa3bc52a91644a03$var$asciiSlice","$aa3bc52a91644a03$var$latin1Slice","$aa3bc52a91644a03$var$base64Slice","$aa3bc52a91644a03$var$utf16leSlice","$aa3bc52a91644a03$var$swap","n","m","$aa3bc52a91644a03$var$bidirectionalIndexOf","val","dir","$aa3bc52a91644a03$var$arrayIndexOf","indexOf","call","lastIndexOf","arr","i1","read","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","$aa3bc52a91644a03$var$hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","$aa3bc52a91644a03$var$utf8Write","$aa3bc52a91644a03$var$blitBuffer","$aa3bc52a91644a03$var$asciiWrite","str","byteArray","push","charCodeAt","$aa3bc52a91644a03$var$asciiToBytes","$aa3bc52a91644a03$var$base64Write","$aa3bc52a91644a03$var$ucs2Write","units","c","hi","lo","$aa3bc52a91644a03$var$utf16leToBytes","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$aa3bc52a91644a03$var$MAX_ARGUMENTS_LENGTH","fromCharCode","apply","$aa3bc52a91644a03$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","$aa3bc52a91644a03$var$typedArraySupport","console","error","poolSize","alloc","fill","$aa3bc52a91644a03$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$aa3bc52a91644a03$var$hexSliceLookupTable","bytes","$aa3bc52a91644a03$var$checkOffset","ext","$aa3bc52a91644a03$var$checkInt","$aa3bc52a91644a03$var$checkIEEE754","$aa3bc52a91644a03$var$writeFloat","littleEndian","noAssert","$4Ooth","$aa3bc52a91644a03$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$aa3bc52a91644a03$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","$aa3bc52a91644a03$var$base64clean","src","dst","constructor","name","alphabet","table","i16","$e843a57e209ac34b$export$d622b2ad8d90c771","$e843a57e209ac34b$export$6100ba28696e12de","b64","tmp","lens","$e843a57e209ac34b$var$getLens","validLen","placeHoldersLen","$e843a57e209ac34b$var$Arr","$e843a57e209ac34b$var$_byteLength","curByte","$e843a57e209ac34b$var$revLookup","uint8","extraBytes","parts","maxChunkLength","len2","$e843a57e209ac34b$var$encodeChunk","$e843a57e209ac34b$var$lookup","join","$e843a57e209ac34b$var$code","$e843a57e209ac34b$var$i","$e843a57e209ac34b$var$len","num","output","$380ed06a8f757827$export$aafa59e2e03f2942","$380ed06a8f757827$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","isNaN","floor","log","LN2","$f041f0b6e7a0d2ff$var$RAW_IMAGE_DATA","$f041f0b6e7a0d2ff$var$writeUint8","$f041f0b6e7a0d2ff$var$addSize","view","setUint8","$f041f0b6e7a0d2ff$var$writeInt16","setInt16","$f041f0b6e7a0d2ff$var$writeUint16","setUint16","$f041f0b6e7a0d2ff$var$writeInt32","setInt32","$f041f0b6e7a0d2ff$var$writeUint32","setUint32","$f041f0b6e7a0d2ff$var$writeFloat64","setFloat64","$f041f0b6e7a0d2ff$var$writeBytes","$f041f0b6e7a0d2ff$var$ensureSize","$f041f0b6e7a0d2ff$var$writeZeros","count","$f041f0b6e7a0d2ff$var$writeSignature","signature","$f041f0b6e7a0d2ff$var$writePascalString","text","padTo","$f041f0b6e7a0d2ff$var$getLargestLayerSize","layers","_i","layers_1","layer","canvas","imageData","_a","$f041f0b6e7a0d2ff$var$getLayerDimentions","width","height","children","$f041f0b6e7a0d2ff$var$writeSection","round","func","writeTotalLength","$f041f0b6e7a0d2ff$var$writeAdditionalLayerInfo","_loop_3","handler","key","invalidateTextLayers","has","infoHandlers_1","$cAUqy","infoHandlers","$f041f0b6e7a0d2ff$var$addChildren","children_1","sectionDivider","$f041f0b6e7a0d2ff$var$__assign","opened","fromBlendMode","blendMode","subType","newLength","newBuffer","newBytes","oldBytes","DataView","$f041f0b6e7a0d2ff$var$resizeBuffer","$f041f0b6e7a0d2ff$var$createThumbnail","createCanvas","scale","context","getContext","temp","putImageData","drawImage","$f041f0b6e7a0d2ff$var$isRowEmpty","left","right","$f041f0b6e7a0d2ff$var$isColEmpty","top","bottom","stride","writeInt16","writeUint16","writeInt32","writeUint32","writeFloat32","setFloat32","writeFloat64","writeFixedPoint32","writeFixedPointPath32","writeBytes","writeZeros","writeSignature","writePascalString","writeUnicodeString","writeUnicodeStringWithPadding","writeSection","imageResources","writeOptions","layerIds","generateThumbnail","thumbnail","getImageData","globalAlpha","hasAlpha","maxBufferSize","tempBuffer","_loop_1","resourceHandlers_1","$aqyg9","resourceHandlers","layersData","map","l","background","layerData","_b","_c","_d","_e","channels","channelId","compression","_f","trimImageData","trimmed","$f041f0b6e7a0d2ff$var$trimData","croppedData","createImageData","srcData","dstData","$f041f0b6e7a0d2ff$var$cropImageData","channelIds","noBackground","mask","unshift","channel","offsetForChannel","writeDataRLE","$f041f0b6e7a0d2ff$var$getLayerChannels","top_2","$f041f0b6e7a0d2ff$var$getChannels","_loop_2","top_1","channels_1","clamp","opacity","clipping","flags","transparencyProtected","hidden","vectorMask","defaultColor","params","userMaskDensity","userMaskFeather","vectorMaskDensity","vectorMaskFeather","disabled","positionRelativeToLayer","fromVectorData","$f041f0b6e7a0d2ff$var$writeLayerMaskData","$f041f0b6e7a0d2ff$var$writeLayerBlendingRanges","_i1","layersData_1","layersData_2","$f041f0b6e7a0d2ff$var$writeLayerInfo","info","overlayColorSpace","colorSpace1","colorSpace2","colorSpace3","colorSpace4","kind","$f041f0b6e7a0d2ff$var$writeGlobalLayerMaskInfo","globalLayerMaskInfo","writeColor","color","r","g","h","k","ColorSpace","LayerMaskFlags","MaskParams","ChannelID","Compression","$e4d680eb7b71aa6d$var$revMap","result","keys","forEach","toBlendMode","pass","norm","diss","dark","idiv","lbrn","dkCl","lite","scrn","lddg","lgCl","over","sLit","hLit","vLit","lLit","pLit","hMix","diff","smud","fsub","fdiv","colr","layerColors","revMap","createEnum","prefix","def","rev","decode","encode","resetImageData","Uint32Array","p","decodeBitmap","input","o","v","writeDataRaw","offsets","ol","offsets_1","strideStart","strideEnd","lastIndex","lastIndex2","startOffset","value1","value2","value3","countIndex","writeLast","length_1","createCanvasFromData","$e4d680eb7b71aa6d$var$tempCanvas","document","createElement","image","Image","createCanvasMethod","createCanvasFromDataMethod","createImageDataMethod","$92b49e225bf9343c$var$MOCK_HANDLERS","$92b49e225bf9343c$var$addHandler","infoHandlersMap","$92b49e225bf9343c$var$addHandlerAlias","$92b49e225bf9343c$var$hasKey","$92b49e225bf9343c$var$readBezierKnot","y0","readFixedPointPath32","x0","y1","x1","y2","$92b49e225bf9343c$var$writeBezierKnot","points","leftBytes","readInt16","transform","readFloat64","$klnll","readVersionAndDescriptor","warp","readFloat32","index","TextIndex","gridding","textGridding","antiAlias","Annt","AntA","orientation","Ornt","style","warpStyle","warpValue","perspective","warpPerspective","perspectiveOther","warpPerspectiveOther","rotate","warpRotate","EngineData","engineData","$6rQPt","decodeEngineData","$2TM27","parseEngineData","$92b49e225bf9343c$var$__assign","skipBytes","textDescriptor","serializeEngineData","encodeEngineData","writeVersionAndDescriptor","$92b49e225bf9343c$var$encodeWarp","vectorFill","vectorStroke","descriptor","$92b49e225bf9343c$var$parseVectorContent","$92b49e225bf9343c$var$serializeVectorContent","readSignature","desc","$92b49e225bf9343c$var$booleanOperations","readUint32","paths","invert","notLink","disable","path","selector","readUint16","boolOp","open","operation","knots","linked","left_1","resolution","clipboard","fillStartsWithAllPixels","linkedKnot","unlinkedKnot","readInt32","vectorOrigination","keyDescriptorList","item","keyShapeInvalidated","keyOriginType","keyOriginResolution","keyOriginShapeBBox","keyOriginShapeBoundingBox","parseUnits","Left","Btom","Rght","keyOriginRRectRadii","topRight","topLeft","bottomLeft","bottomRight","orig","keyOriginIndex","unitValueQuadVersion","unitsValue","readUnicodeString","nameSource","id","_psd","checkSignature","blendClippendElements","blendInteriorElements","knockout","protected","transparency","composite","position","artboards","layerColor","left1","_","readSection","layerTime","timestamp","logDevFeatures","unknown","propagate","unifyLayerPosition","unifyLayerStyle","unifyLayerVisibility","strokeEnabled","fillEnabled","lineWidth","strokeStyleLineWidth","lineDashOffset","strokeStyleLineDashOffset","miterLimit","strokeStyleMiterLimit","lineCapType","strokeStyleLineCapType","lineJoinType","strokeStyleLineJoinType","lineAlignment","strokeStyleLineAlignment","scaleLock","strokeStyleScaleLock","strokeAdjust","strokeStyleStrokeAdjust","lineDashSet","strokeStyleLineDashSet","BlnM","strokeStyleBlendMode","parsePercent","strokeStyleOpacity","content","strokeStyleContent","strokeStyleResolution","stroke","strokeStyleVersion","unitsPercent","artboard","rect","artboardRect","guideIndices","guideIndeces","presetName","artboardPresetName","$92b49e225bf9343c$var$parseColor","backgroundType","artboardBackgroundType","artb","$92b49e225bf9343c$var$serializeColor","usingAlignedRendering","$92b49e225bf9343c$var$placedLayerTypes","$92b49e225bf9343c$var$parseWarp","bounds","parseUnitsOrNumber","uOrder","vOrder","customEnvelopeWarp","meshPoints","pt","values","$92b49e225bf9343c$var$adjustmentType","adjustment","$92b49e225bf9343c$var$readLevelsChannel","shadowInput","highlightInput","shadowOutput","highlightOutput","midtoneInput","$92b49e225bf9343c$var$writeLevelsChannel","$92b49e225bf9343c$var$readCurveChannel","nodes","$92b49e225bf9343c$var$writeCurveChannel","channel_1","$92b49e225bf9343c$var$readHueChannel","hue","saturation","lightness","$92b49e225bf9343c$var$writeHueChannel","$92b49e225bf9343c$var$readColorBalance","cyanRed","magentaGreen","yellowBlue","$92b49e225bf9343c$var$writeColorBalance","$92b49e225bf9343c$var$readMixrChannel","red","green","blue","constant","$92b49e225bf9343c$var$writeMixrChannel","readPascalString","placedLayerType","warpVersion","placedLayer","placed","Idnt","Type","Trnf","Wdth","Hght","Rslt","Crop","crop","comp","compInfo","PgNm","totalPages","frameStep","numerator","denominator","duration","frameCount","nonAffineTransform","referencePoint","_target","_writer","linkedFiles","$92b49e225bf9343c$var$readLength64","version","name_1","fileType","fileCreator","dataSize","fileOpenDescriptor","file","creator","year","month","day","hour","minute","seconds","wholeSeconds","ms","time","Date","fileSize","readBytes","childDocumentID","assetModTime","assetLockedState","skipLinkedFilesData","sizeOffset","$92b49e225bf9343c$var$writeLength64","_lnkE","_psds","logMissingFeatures","_extn","pathList","effects","$26rz6","readEffects","writeEffects","brightness","contrast","meanValue","labColorOnly","useLegacy","rgb","defaultChannel","channelCount","exposure","gamma","vibrance","Strt","master","reds","yellows","greens","cyans","blues","magentas","shadows","midtones","highlights","preserveLuminosity","Yllw","Mgnt","useTint","presetKind","bwPresetKind","presetFileName","blackAndWhitePresetFileName","tintColor","readColor","density","monochrome","gray","$92b49e225bf9343c$var$colorLookupType","abstractProfile","deviceLinkProfile","$92b49e225bf9343c$var$LUTFormatType","look","cube","$92b49e225bf9343c$var$colorLookupOrder","bgr","lookupType","Dthr","dither","profile","LUTFormat","lutFormat","dataOrder","tableOrder","LUT3DFileData","lut3DFileData","LUT3DFileName","lut3DFileName","levels","level","$92b49e225bf9343c$var$grdmColorModels","$92b49e225bf9343c$var$readSelectiveColors","$92b49e225bf9343c$var$writeSelectiveColors","cmyk","$92b49e225bf9343c$var$parseGradient","grad","GrdF","samples_1","Intr","smoothness","colorStops","Clrs","location","Lctn","midpoint","Mdpn","opacityStops","Trns","Opct","roughness","Smth","colorModel","ClrS","randomSeed","RndS","restrictColors","VctC","addTransparency","ShTr","$92b49e225bf9343c$var$serializeGradient","samples_2","_a1","$92b49e225bf9343c$var$parseGradientContent","Grad","GrdT","Rvrs","reverse","Angl","angle","parseAngle","Algn","align","Ofst","Hrzn","Vrtc","$92b49e225bf9343c$var$parsePatternContent","Ptrn","Lnkd","phase","$92b49e225bf9343c$var$serializeGradientContent","unitsAngle","$92b49e225bf9343c$var$serializePatternContent","parsePercentOrAngle","Brgh","Blck","Lmnc","$92b49e225bf9343c$var$parseEffectObject","reportErrors","enabled","useGlobalLight","antialiased","highlightColor","shadowColor","FStl","highlightBlendMode","shadowBlendMode","BESl","direction","BESs","technique","bvlT","BETE","source","IGSr","highlightOpacity","shadowOpacity","altitude","soften","strength","noise","range","choke","jitter","distance","pattern","contour","curve","gradient","$92b49e225bf9343c$var$serializeEffectObject","objName","enab","uglg","Invr","hglC","sdwC","Styl","hglM","sdwM","bvlS","bvlD","GlwT","glwS","hglO","sdwO","lagl","Lald","Sftn","srgR","blur","Nose","Inpr","Ckmt","ShdN","Dstn","gradientType","stopsCount","opacityStopsCount","interpolation","mode","whites","neutrals","blacks","Vrsn","curvesPresetKind","curvesPresetFileName","mixerPresetKind","mixerPresetFileName","Cntr","means","auto","Auto","filterMask","colorSpace","autoExpandOffset","horizontal","vertical","origin","autoExpandEnabled","autoNestEnabled","autoPositionEnabled","shrinkwrapOnSaveEnabled","docDefaultNewArtboardBackgroundColor","docDefaultNewArtboardBackgroundType","masterFXSwitch","DrSh","dropShadow","IrSh","innerShadow","OrGl","outerGlow","IrGl","innerGlow","ebbl","bevel","SoFi","solidFill","patternFill","patternOverlay","GrFl","gradientOverlay","ChFX","satin","FrFX","fillType","FrFl","PntT","compositorUsed","description","reason","engine","Engn","enableCompCore","enableCompCoreGPU","compCoreSupport","compCoreGPUSupport","cinf","major","minor","fix","$18818631259b9992$var$bevelStyles","$18818631259b9992$var$readBlendMode","$18818631259b9992$var$writeBlendMode","$18818631259b9992$var$readFixedPoint8","$18818631259b9992$var$writeFixedPoint8","$18818631259b9992$var$writeShadowInfo","shadow","effectsCount","version_1","visible","blockSize","version_2","readFixedPoint32","shadowInfo","version_3","version_4","version_5","version_6","supportedColorModes","$43c94f66d9a06bba$var$colorModes","$43c94f66d9a06bba$var$setupGrayscale","$43c94f66d9a06bba$var$readUint8","getUint8","$43c94f66d9a06bba$var$peekUint8","$43c94f66d9a06bba$var$readInt16","getInt16","$43c94f66d9a06bba$var$readUint16","getUint16","$43c94f66d9a06bba$var$readInt32","getInt32","$43c94f66d9a06bba$var$readUint32","getUint32","$43c94f66d9a06bba$var$readFloat64","getFloat64","$43c94f66d9a06bba$var$readBytes","$43c94f66d9a06bba$var$readSignature","$43c94f66d9a06bba$var$readShortString","$43c94f66d9a06bba$var$readPascalString","$43c94f66d9a06bba$var$skipBytes","$43c94f66d9a06bba$var$readUnicodeString","$43c94f66d9a06bba$var$readUnicodeStringWithLength","$43c94f66d9a06bba$var$checkSignature","$43c94f66d9a06bba$var$readLayerRecord","channelID","channelLength","$43c94f66d9a06bba$var$readSection","$43c94f66d9a06bba$var$readLayerMaskData","compositeGrayBlendSource","compositeGraphBlendDestinationRange","ranges","sourceRange","destRange","$43c94f66d9a06bba$var$readLayerBlendingRanges","$43c94f66d9a06bba$var$readAdditionalLayerInfo","$43c94f66d9a06bba$var$readLayerChannelImageData","layerWidth","layerHeight","maskWidth","maskHeight","maskData","$43c94f66d9a06bba$var$readData","useImageData","targetData","throwForMissingFeatures","colorMode","$43c94f66d9a06bba$var$readDataRaw","$43c94f66d9a06bba$var$readDataRLE","pixelData","_width","step","lengths","Uint16Array","li","header","skipEmpty","peekUint8","getFloat32","readUnicodeStringWithLength","readAsciiString","bitsPerChannel","resourceHandlersMap","skip","skipThumbnail","layerCount","layerChannels","skipLayerImageData","stack","pop","$43c94f66d9a06bba$var$readLayerInfo","$43c94f66d9a06bba$var$readGlobalLayerMaskInfo","hasChildren","skipCompositeImageData","ceil","$43c94f66d9a06bba$var$readImageData","readDataRLE","readPattern","version2","channelsCount","ch","length_2","pixelDepth","ctop","cleft","cbottom","cright","pixelDepth2","compressionMode","cdata","w","ox","oy","y_1","x_1","y_2","x_2","$7976e85542dc0fe3$var$addHandler","$7976e85542dc0fe3$var$RESOLUTION_UNITS","$7976e85542dc0fe3$var$MEASUREMENT_UNITS","$7976e85542dc0fe3$var$hex","$7976e85542dc0fe3$var$charToNibble","captionDigest","byte","xmpMetadata","$5wpNI","decodeString","$7976e85542dc0fe3$var$readUtf8String","encodeString","$7976e85542dc0fe3$var$writeUtf8String","$7976e85542dc0fe3$var$Inte","perceptual","printInformation","printerName","renderingIntent","Inte","PstS","printerManagesColors","printerProfile","MpBl","blackPointCompensation","printSixteenBit","hardProof","printProofSetup","proofSetup","builtin","Bltn","paperWhite","resolutionInfo","horizontalResolution","horizontalResolutionUnit","widthUnit","verticalResolution","verticalResolutionUnit","heightUnit","$7976e85542dc0fe3$var$printScaleStyles","printScale","alphaChannelNames","name_2","alphaIdentifiers","backgroundColor","globalAngle","globalAltitude","printFlags","labels","cropMarks","colorBars","registrationMarks","negative","flip","interpolate","caption","layerState","layersGroup","layerGroupsEnabledId","layerSelectionIds","gridAndGuidesInformation","grid","guides","guides_1","urlsList","pixelAspectRatio","aspect","iccUntaggedProfile","idsSeedNumber","thumbnailRaw","format","bitsPerPixel","planes","useRawThumbnail","toDataURL","widthBytes","totalSize","sizeAfterCompression","versionInfo","hasRealMergedData","writerName","readerName","fileVersion","none","dispose","$4053f470e500857f$var$charLengthInBytes","$4053f470e500857f$var$stringLengthInBytes","extra","$4053f470e500857f$var$writeCharacter","$4053f470e500857f$var$encodeStringTo","$4053f470e500857f$var$continuationByte","continuationByte","stringLengthInBytes","encodeStringTo","byte1","toUpperCase","$ecf7e04a3a5ae4fa$var$unitsMap","RrPi","RrIn","RrCm","$ecf7e04a3a5ae4fa$var$unitsMapRev","$ecf7e04a3a5ae4fa$var$logErrors","$ecf7e04a3a5ae4fa$var$makeType","classID","setLogErrors","$ecf7e04a3a5ae4fa$var$fieldToExtType","MpgS","TrnS","psVersion","generatorSettings","$ecf7e04a3a5ae4fa$var$fieldToArrayExtType","$ecf7e04a3a5ae4fa$var$typeToField","TEXT","tdta","long","enum","bool","doub","UntF","VlLs","ObAr","$ecf7e04a3a5ae4fa$var$channels","$ecf7e04a3a5ae4fa$var$fieldToArrayType","FrLs","$ecf7e04a3a5ae4fa$var$fieldToType","$ecf7e04a3a5ae4fa$var$_i","$ecf7e04a3a5ae4fa$var$_a","$ecf7e04a3a5ae4fa$var$type","$ecf7e04a3a5ae4fa$var$_b","$ecf7e04a3a5ae4fa$var$_c","$ecf7e04a3a5ae4fa$var$field","$ecf7e04a3a5ae4fa$var$_d","$ecf7e04a3a5ae4fa$var$_e","$ecf7e04a3a5ae4fa$var$_f","$ecf7e04a3a5ae4fa$var$_g","$ecf7e04a3a5ae4fa$var$getTypeByKey","root","$ecf7e04a3a5ae4fa$var$readAsciiStringOrClassId","$ecf7e04a3a5ae4fa$var$writeAsciiStringOrClassId","$ecf7e04a3a5ae4fa$var$readDescriptorStructure","object","$ecf7e04a3a5ae4fa$var$readClassStructure","itemsCount","$ecf7e04a3a5ae4fa$var$readOSType","$ecf7e04a3a5ae4fa$var$writeDescriptorStructure","classId","keys_1","extType","$ecf7e04a3a5ae4fa$var$writeOSType","items","keyID","TypeID","name_3","$ecf7e04a3a5ae4fa$var$readReferenceStructure","type_1","low","high","length_3","length_4","type1","valuesCount","sig","charsCount","JSON","stringify","type_3","_type","$ecf7e04a3a5ae4fa$var$parseUnits","readAsciiStringOrClassId","readDescriptorStructure","writeDescriptorStructure","parseUnitsToNumber","expectedUnits","sharp","crisp","strong","smooth","arc","arcLower","arcUpper","arch","bulge","shellLower","shellUpper","flag","wave","fish","rise","fisheye","inflate","squeeze","twist","custom","normal","dissolve","darken","multiply","lighten","screen","overlay","difference","exclusion","subtract","divide","luminosity","emboss","up","down","softer","precise","edge","center","linear","radial","reflected","diamond","hsb","lab","outside","inside","butt","square","miter","$21c5fa39013f749a$var$isWhitespace","char","$21c5fa39013f749a$var$isNumber","skipWhitespace","getTextByte","getText","pushContainer","pushValue","pushProperty","char1","i_1","parseFloat","$21c5fa39013f749a$var$floatKeys","$21c5fa39013f749a$var$intArrays","condensed","writeString","writeIndent","indent","writeProperty","writeValue","serializeFloat","toFixed","serializeNumber","serializeInt","getKeys","splice","writeStringByte","inProperty","writePrefix","charAt","every","intArray","value_1","value_2","key_1","key1","$4b1e3e7817bb5a66$var$defaultFont","script","synthetic","$4b1e3e7817bb5a66$var$defaultParagraphStyle","justification","firstLineIndent","startIndent","endIndent","spaceBefore","spaceAfter","autoHyphenate","hyphenatedWordSize","preHyphen","postHyphen","consecutiveHyphens","zone","wordSpacing","letterSpacing","glyphSpacing","autoLeading","leadingType","hanging","burasagari","kinsokuOrder","everyLineComposer","$4b1e3e7817bb5a66$var$defaultStyle","font","fontSize","fauxBold","fauxItalic","leading","horizontalScale","verticalScale","tracking","autoKerning","kerning","baselineShift","fontCaps","fontBaseline","underline","strikethrough","ligatures","dLigatures","baselineDirection","tsume","styleRunAlignment","language","noBreak","fillColor","strokeColor","fillFlag","strokeFlag","fillFirst","yUnderline","outlineWidth","characterDirection","hindiNumbers","kashida","diacriticPos","$4b1e3e7817bb5a66$var$defaultGridInfo","isOn","show","leadingFillColor","alignLineHeightToGridFlags","$4b1e3e7817bb5a66$var$paragraphStyleKeys","$4b1e3e7817bb5a66$var$styleKeys","$4b1e3e7817bb5a66$var$antialias","$4b1e3e7817bb5a66$var$justification","$4b1e3e7817bb5a66$var$upperFirst","$4b1e3e7817bb5a66$var$encodeColor","$4b1e3e7817bb5a66$var$arraysEqual","$4b1e3e7817bb5a66$var$objectsEqual","$4b1e3e7817bb5a66$var$findOrAddFont","fonts","$4b1e3e7817bb5a66$var$decodeObject","Key","Values","$4b1e3e7817bb5a66$var$encodeObject","keys_2","$4b1e3e7817bb5a66$var$decodeParagraphStyle","$4b1e3e7817bb5a66$var$decodeStyle","$4b1e3e7817bb5a66$var$encodeParagraphStyle","$4b1e3e7817bb5a66$var$encodeStyle","$4b1e3e7817bb5a66$var$deduplicateValues","base","runs","runs_1","r1","keys_3","engineDict","EngineDict","resourceDict","ResourceDict","FontSet","f","Name","Script","FontType","Synthetic","Editor","Text","AntiAlias","useFractionalGlyphWidths","UseFractionalGlyphWidths","superscriptSize","SuperscriptSize","superscriptPosition","SuperscriptPosition","subscriptSize","SubscriptSize","subscriptPosition","SubscriptPosition","smallCapSize","SmallCapSize","photoshop","Rendered","Shapes","Children","Cookie","Photoshop","shapeType","ShapeType","PointBase","pointBase","BoxBounds","boxBounds","paragraphRun","ParagraphRun","paragraphStyle","paragraphStyleRuns","RunArray","run_1","RunLengthArray","ParagraphSheet","Properties","styleRun","StyleRun","styleRuns","StyleSheet","StyleSheetData","defFont","find","paragraphRunArray","paragraphRunLengthArray","_o","run_2","DefaultStyleSheet","$4b1e3e7817bb5a66$var$__assign","Adjustments","Axis","XY","last","styleSheetData","styleRunArray","styleRunLengthArray","_p","styleRuns_1","run_3","gridInfo","WritingDirection","Procession","Base","TransformPoint0","TransformPoint1","TransformPoint2","defaultResources","KinsokuSet","NoStart","NoEnd","Keep","Hanging","MojiKumiSet","InternalName","TheNormalStyleSheet","TheNormalParagraphSheet","ParagraphSheetSet","StyleSheetSet","_g","_h","DefaultRunData","IsJoinable","GridInfo","GridIsOn","ShowGrid","GridSize","_j","GridLeading","_k","GridColor","GridLeadingFillColor","AlignLineHeightToGridFlags","_l","_m","Version","Lines","DocumentResources","ColorMode","SectionDividerType"],"version":3,"file":"dist.abd92f9b.js.map"}